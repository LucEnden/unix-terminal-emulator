!function(e,r){"object"==typeof exports&&"object"==typeof module?module.exports=r(require("react")):"function"==typeof define&&define.amd?define(["react"],r):"object"==typeof exports?exports.UnixTerminalEmulator=r(require("react")):e.UnixTerminalEmulator=r(e.react)}(self,(e=>(()=>{var r={8762:(e,r,t)=>{"use strict";t.d(r,{default:()=>oe});var n=t(3379),o=t.n(n),i=t(7795),a=t.n(i),s=t(569),c=t.n(s),u=t(3565),l=t.n(u),p=t(9216),d=t.n(p),f=t(4589),h=t.n(f),m=t(28),v={};v.styleTagTransform=h(),v.setAttributes=l(),v.insert=c().bind(null,"head"),v.domAPI=a(),v.insertStyleElement=d();o()(m.Z,v);m.Z&&m.Z.locals&&m.Z.locals;var g=t(8282);function b(e){return function(e){if(Array.isArray(e))return y(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,r){if(!e)return;if("string"==typeof e)return y(e,r);var t=Object.prototype.toString.call(e).slice(8,-1);"Object"===t&&e.constructor&&(t=e.constructor.name);if("Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return y(e,r)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function y(e,r){(null==r||r>e.length)&&(r=e.length);for(var t=0,n=new Array(r);t<r;t++)n[t]=e[t];return n}function w(e,r){for(var t=0;t<r.length;t++){var n=r[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _(e,r,t){return r&&w(e.prototype,r),t&&w(e,t),Object.defineProperty(e,"prototype",{writable:!1}),e}function x(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}var E={name:"ext4",prohibitedFileNameCharecters:["\0","\\0",".",".."]};const A=_((function e(r){var t=this;!function(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}(this,e),x(this,"graph",new g.Graph({compound:!0,directed:!0})),x(this,"contentNodeEnd","-content"),x(this,"modifiedNodeEnd","-modified"),x(this,"permisionsNodeEnd","-permissions"),x(this,"ownerNodeEnd","-owner"),x(this,"groupNodeEnd","-group"),x(this,"rootDir","/"),x(this,"homeDir","/home/"),x(this,"rootUsr",{name:"root",password:"password",homeDir:"/home/root/"}),x(this,"users",[]),x(this,"groups",[]),x(this,"isDirectory",(function(e){return e.endsWith("/")})),x(this,"pathExists",(function(e){return e=t.replaceRepetetiveForwardslashes(e),e=t.resolveRelativePathString(e),t.graph.hasNode(e)})),x(this,"getCurrentDirectory",(function(){return t.currentDir.startsWith(t.currentUser.homeDir)?t.currentDir.replace(t.currentUser.homeDir,"~"):t.currentDir})),x(this,"fileHasContent",(function(e){if(e=t.replaceRepetetiveForwardslashes(e),e=t.resolveRelativePathString(e),t.isDirectory(e))return new TypeError("-bash: ".concat(e,": Is a directory"));if(!t.graph.hasNode(e))return new TypeError("-bash: ".concat(e,": No such file or directory"));var r=t.graph.children(e).find((function(r){return r===e+t.contentNodeEnd}));return void 0!==r&&""!==r})),x(this,"getFileContent",(function(e){if(e=t.replaceRepetetiveForwardslashes(e),e=t.resolveRelativePathString(e),!t.graph.hasNode(e))return new TypeError("-bash: ".concat(e,": No such file or directory"));var r=t.graph.children(e).find((function(r){return r===e+t.contentNodeEnd}));return r?t.graph.node(r):""})),x(this,"setFileContent",(function(e,r){if(e=t.replaceRepetetiveForwardslashes(e),e=t.resolveRelativePathString(e),t.isDirectory(e))return new TypeError("-bash: ".concat(e,": Is a directory"));var n=t.resolveParentDir(e);t.graph.hasNode(e)||t.newFile(e,n);var o=e+t.contentNodeEnd;t.graph.setNode(o,r),t.graph.setParent(o,e),t.setModified(e,n)})),x(this,"touch",(function(e){for(var r=e.split(" "),n=0;n<r.length;n++){var o=t.resolveRelativePathString(r[n]),i=t.resolveParentDir(o);t.graph.hasNode(o)?t.setModified(o,i):e.includes("/")?t.newFile(o,i):t.newFile(o,t.currentDir)}})),x(this,"mkdir",(function(e){for(var r=[],n=e.split(/\s+/).filter((function(e){return""!==e})),o=0;o<n.length;o++){var i=n[o];i=t.replaceRepetetiveForwardslashes(i);var a=(i=(i=t.resolveRelativePathString(i)).replace("%20"," ")).split("/").filter((function(e){return""!==e}));a.splice(-1);var s=a.join("/");s=t.prependSlashToStartOfPath(s),s=t.appendSlashToEndOfPath(s),t.graph.hasNode(i)?r.push(new RangeError("mkdir: cannot create directory ‘".concat(i,"’: File exists"))):t.graph.hasNode(s)?(t.newDir(i,s),t.newDir(".",i),t.newDir("..",i)):r.push(new RangeError("mkdir: cannot create directory ‘".concat(i,"’: No such file or directory")))}return r})),x(this,"useradd",(function(e){if(t.users.some((function(r){return r.name===e.name})))return new RangeError("useradd: The user '".concat(e.name,"' already exists."));t.users.push(e);var r={name:e.name,users:[t.rootUsr,e]};t.newGroup(r);var n=t.newUserDir(e);return e.homeDir=n,e.homeDir})),x(this,"pwd",(function(){return t.currentDir})),x(this,"cd",(function(e){return e=t.resolveRelativePathString(e),t.pathExists(e)?(t.currentDir="~"===e?t.currentUser.homeDir:e,t.currentDir):new RangeError("-bash: cd: ".concat(e,": No such file or directory"))})),x(this,"ls",(function(){for(var e=t.graph.children(t.currentDir).filter((function(e){return!(e.endsWith(t.contentNodeEnd)||e.endsWith(t.modifiedNodeEnd)||e.endsWith(t.permisionsNodeEnd)||e.endsWith(t.ownerNodeEnd)||e.endsWith(t.groupNodeEnd))})),r=0;r<e.length;r++)e[r]=e[r].substring(e[r].lastIndexOf("/")+1);return e})),x(this,"replaceRepetetiveForwardslashes",(function(e){return e.replace(/\/+/g,"/")})),x(this,"resolveRelativePathString",(function(e){e.startsWith("/")||e.startsWith("./")||(e=t.currentDir+e),e.startsWith("./")&&(e=t.currentDir+e.slice(2)),e.startsWith("../")&&(e=(e=(e=t.currentDir.slice(0,t.currentDir.lastIndexOf("/"))).slice(0,e.lastIndexOf("/"))).slice(0,e.lastIndexOf("/"))+"/");for(var r="",n=0;n<e.length;n++)(r+=e[n]).match(/(?<=\/)(\.\.\/)+$/)?r=(r=(r=r.slice(0,r.lastIndexOf("/"))).slice(0,r.lastIndexOf("/"))).slice(0,r.lastIndexOf("/"))+"/":r.match(/(?<=\/)(\.\/)+$/)&&(r=(r=r.slice(0,r.lastIndexOf("/"))).slice(0,r.lastIndexOf("/"))+"/");return r})),x(this,"resolveParentDir",(function(e){return e.includes("/")?((e=t.replaceRepetetiveForwardslashes(e)).endsWith("/")&&(e=e.slice(0,e.lastIndexOf("/"))),e=e.slice(0,e.lastIndexOf("/")+1)):e})),x(this,"newUserDir",(function(e){return void 0===e.homeDir?e.homeDir=t.homeDir+e.name+"/":e.homeDir=t.appendSlashToEndOfPath(e.homeDir),t.newDir(e.homeDir,t.resolveParentDir(e.homeDir))})),x(this,"newGroup",(function(e){if(t.groups.some((function(r){return r.name===e.name})))for(var r=0;r<t.groups.length;r++)t.groups[r].name===e.name&&(t.groups[r].users=[].concat(b(t.groups[r].users),b(e.users)));else t.groups.push(e)})),x(this,"appendSlashToEndOfPath",(function(e){return e.endsWith("/")||(e+="/"),e})),x(this,"prependSlashToStartOfPath",(function(e){return e.startsWith("/")||(e="/"+e),e})),x(this,"newDir",(function(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:t.currentDir;return e!==t.rootDir&&(e=t.replaceRepetetiveForwardslashes(e),e=t.resolveRelativePathString(e),e=t.appendSlashToEndOfPath(e),t.graph.setNode(e,e),t.graph.setParent(e,r),t.setModified(e,r),t.setOwner(e),t.setGroup(e),t.setPermisions(e,7,5,5)),e})),x(this,"newFile",(function(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:t.currentDir;return e=t.replaceRepetetiveForwardslashes(e),e=t.resolveRelativePathString(e),t.graph.setNode(e,e),t.graph.setParent(e,r),t.setModified(e,r),t.setOwner(e),t.setGroup(e),t.setPermisions(e,6,4,4),e})),x(this,"setModified",(function(e,r){e=t.replaceRepetetiveForwardslashes(e),e=t.resolveRelativePathString(e),r=t.replaceRepetetiveForwardslashes(r),r=t.resolveRelativePathString(r);var n=e+"-modified";t.graph.setNode(n,(new Date).toUTCString()),"/"!==e&&t.setModified(r,t.resolveParentDir(r))})),x(this,"setOwner",(function(e){e=t.replaceRepetetiveForwardslashes(e);var r=(e=t.resolveRelativePathString(e))+t.ownerNodeEnd;t.graph.setNode(r,t.currentUser),t.graph.setParent(r,e)})),x(this,"setGroup",(function(e){e=t.replaceRepetetiveForwardslashes(e);var r=(e=t.resolveRelativePathString(e))+t.groupNodeEnd;t.graph.setNode(r,t.currentGroup.name),t.graph.setParent(r,e)})),x(this,"setPermisions",(function(e,r,n,o){e=t.replaceRepetetiveForwardslashes(e);var i=(e=t.resolveRelativePathString(e))+t.permisionsNodeEnd;t.graph.setNode(i,r+""+n+o),t.graph.setParent(i,e)})),this.newDir(this.rootDir),this.currentUser=this.rootUsr;var n={name:this.rootUsr.name,users:[this.rootUsr]};if(this.currentGroup=n,this.groups.push(n),this.newDir(this.homeDir,this.rootDir),this.currentDir=this.useradd(this.rootUsr),void 0!==r&&r.name!==this.rootUsr.name){this.currentDir=this.useradd(r),this.currentUser=r;var o={name:this.currentUser.name,users:[this.rootUsr,this.currentUser]};this.groups.push(o),this.currentGroup=o}this.fileSystemType=E}));var q=t(9111);function C(e,r){for(var t=0;t<r.length;t++){var n=r[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function O(e,r,t){return r&&C(e.prototype,r),t&&C(e,t),Object.defineProperty(e,"prototype",{writable:!1}),e}function D(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}const j=O((function e(){var r=this;!function(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}(this,e),D(this,"eraseFromElement",(function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"neutral",o=arguments.length>3?arguments[3]:void 0,i=arguments.length>4?arguments[4]:void 0,a=arguments.length>5?arguments[5]:void 0,s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;t>e.innerHTML.length||t<=0||(s!=t?(void 0!==o&&o(),e.innerHTML=e.innerHTML.slice(0,e.innerHTML.length-1),void 0!==i&&i(),s++,"neutral"===n?setTimeout((function(){return r.eraseFromElement(e,t,n,o,i,a,s)}),r.getRandomIntegerInRange(80,120)):setTimeout((function(){return r.eraseFromElement(e,t,n,o,i,a,s)}),n)):void 0!==a&&a())})),D(this,"writeToElement",(function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"neutral",o=arguments.length>3?arguments[3]:void 0,i=arguments.length>4?arguments[4]:void 0,a=arguments.length>5?arguments[5]:void 0,s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;t=(0,q.decode)(t).replace("&nbsp;"," "),0===n?(void 0!==o&&o(),e.innerHTML+=t,void 0!==i&&i(),void 0!==a&&a()):s<t.length?(void 0!==o&&o(),e.innerHTML+=t[s],void 0!==i&&i(),s++,"neutral"===n?setTimeout((function(){return r.writeToElement(e,t,n,o,i,a,s)}),r.getRandomIntegerInRange(80,120)):setTimeout((function(){return r.writeToElement(e,t,n,o,i,a,s)}),n)):void 0!==a&&a()})),D(this,"getRandomIntegerInRange",(function(e,r){return Math.floor(Math.random()*(r-e+1)+e)}))}));function S(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function T(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?S(Object(t),!0).forEach((function(r){N(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):S(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function L(e,r){for(var t=0;t<r.length;t++){var n=r[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function k(e,r,t){return r&&L(e.prototype,r),t&&L(e,t),Object.defineProperty(e,"prototype",{writable:!1}),e}function N(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}var P=k((function e(r){var t=this;!function(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}(this,e),N(this,"writer",new j),N(this,"prevStdoutContent",""),N(this,"currentFilename",""),N(this,"currentFileIsNew",!1),N(this,"cursorPosX",0),N(this,"cursorPosY",0),N(this,"options",{vimCss:"vim___emulator___wrapper",vimBarCss:"vim___emulator___bar",vimBarLeftCss:"vim___emulator___bar___left",vimBarRightCss:"vim___emulator___bar___right"}),N(this,"openFile",(function(e,r,n,o){t.currentFilename=o,t.currentFileIsNew=!n.pathExists(t.currentFilename),t.wrapper=e,r.removeCursor(),t.prevStdoutContent=r.element.innerHTML,r.element.remove(),r.clear();var i=n.getFileContent(o);"string"!=typeof i&&(i=""),r.element.innerHTML=i,r.appendCursor(),t.updateFileLineCountElem(r),t.updateFileSizeElem(r),t.updateFileNameElem(),t.updateCursorPosElem(r),t.updateAllElem(),t.currentFileIsNew&&(t.fileLineCountElement.innerHTML="",t.fileSizeElement.innerHTML=""),t.wrapperElement.appendChild(r.element),t.wrapperElement.appendChild(document.createElement("br")),t.wrapperElement.appendChild(document.createElement("br")),t.wrapperElement.appendChild(t.vimBar),t.wrapper.appendChild(t.wrapperElement)})),N(this,"insert",(function(e,r,n,o,i){t.fileNameElement.innerHTML="-- INSERT --",t.fileSizeElement.innerHTML="",t.fileLineCountElement.innerHTML="",t.writer.writeToElement(e.element,n,o,e.removeCursor,(function(){e.appendCursor(),t.updateCursorPosElem(e)}),i)})),N(this,"escape",(function(){t.fileNameElement.innerHTML="",t.fileSizeElement.innerHTML="",t.fileLineCountElement.innerHTML=""})),N(this,"write",(function(e,r){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"neutral",o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,i=arguments.length>4?arguments[4]:void 0;t.clearVimBar(),t.writer.writeToElement(t.fileNameElement,":w",n,void 0,void 0,(function(){setTimeout((function(){t.writeStdoutToFile(e,r),t.updateFileNameElem(),t.updateFileLineCountElem(e),t.updateFileSizeElem(e),t.fileSizeElement.innerHTML+="&nbsp;written",t.updateCursorPosElem(e),t.updateAllElem(),i()}),o)}))})),N(this,"quit",(function(e,r){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"neutral",o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,i=arguments.length>4?arguments[4]:void 0;t.clearVimBar(),t.writer.writeToElement(t.fileNameElement,":q",n,void 0,void 0,(function(){setTimeout((function(){t.closeVim(e,i)}),o)}))})),N(this,"writeQuit",(function(e,r){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"neutral",o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,i=arguments.length>4?arguments[4]:void 0;t.clearVimBar(),t.writer.writeToElement(t.fileNameElement,":wq",n,void 0,void 0,(function(){setTimeout((function(){t.writeStdoutToFile(e,r),t.closeVim(e,i)}),o)}))})),N(this,"closeVim",(function(e,r){e.removeCursor(),e.element.remove(),e.element.innerHTML=t.prevStdoutContent,e.appendCursor(),t.wrapperElement.innerHTML="",t.wrapperElement.remove(),t.prevStdoutContent="",t.currentFileIsNew=!1,t.currentFilename="",t.cursorPosX=0,t.cursorPosY=0,t.wrapper.appendChild(e.element),t.wrapper=void 0,r()})),N(this,"writeStdoutToFile",(function(e,r){e.removeCursor();var n=e.element.innerHTML.replace("<br>","\n").replace(/<\w*\s*[^>]*>/gm,"");r.setFileContent(t.currentFilename,n),e.appendCursor()})),N(this,"updateFileNameElem",(function(){t.fileNameElement.innerHTML='"'+t.currentFilename+'"&nbsp;',t.currentFileIsNew&&(t.fileNameElement.innerHTML+="[New]&nbsp;")})),N(this,"updateFileSizeElem",(function(e){var r=e.element.innerHTML.replace("<br>","\n").replace(/<\w*\s*[^>]*>/gm,"");r=r.slice(0,r.lastIndexOf("|"));var n,o=(new TextEncoder).encode(r).length+1;o<1e3?n="B":o>=1e3&&o<1e6?(o/=1e3,n="KB"):o>=1e6&&o<1e9?(o/=1e6,n="MB"):(o/=1e9,n="GB"),t.fileSizeElement.innerHTML=o.toString()+n})),N(this,"updateFileLineCountElem",(function(e){t.fileLineCountElement.innerHTML=e.element.innerHTML.split("<br>").length.toString()+"L,&nbsp;"})),N(this,"updateAllElem",(function(){t.allElement.innerHTML="All"})),N(this,"updateCursorPosElem",(function(e){var r=e.element.innerHTML.split("<br>");t.cursorPosX=r.reverse().find((function(r){return r.includes(e.options.cursorCss)})).replace(/<\w*\s*[^>]*>/gm,"").lastIndexOf(e.options.cursorChar)+1,t.cursorPosY=r.length,t.cursorPositionElement.innerHTML=t.cursorPosY+","+t.cursorPosX+"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"})),N(this,"clearVimBar",(function(){t.fileLineCountElement.innerHTML="",t.fileNameElement.innerHTML="",t.fileLineCountElement.innerHTML="",t.fileSizeElement.innerHTML="",t.cursorPositionElement.innerHTML="",t.allElement.innerHTML=""})),r&&(this.options=T(T({},this.options),r)),this.wrapperElement=document.createElement("div"),this.wrapperElement.classList.add(this.options.vimCss),this.vimBar=document.createElement("div"),this.vimBar.classList.add(this.options.vimBarCss),this.fileNameElement=document.createElement("span"),this.fileNameElement.classList.add(this.options.vimBarLeftCss),this.vimBar.appendChild(this.fileNameElement),this.fileLineCountElement=document.createElement("span"),this.fileLineCountElement.classList.add(this.options.vimBarLeftCss),this.vimBar.appendChild(this.fileLineCountElement),this.fileSizeElement=document.createElement("span"),this.fileSizeElement.classList.add(this.options.vimBarLeftCss),this.vimBar.appendChild(this.fileSizeElement),this.allElement=document.createElement("span"),this.allElement.classList.add(this.options.vimBarRightCss),this.allElement.innerHTML="All",this.vimBar.appendChild(this.allElement),this.cursorPositionElement=document.createElement("span"),this.cursorPositionElement.classList.add(this.options.vimBarRightCss),this.vimBar.appendChild(this.cursorPositionElement)}));const R=P;let I=(e=21)=>crypto.getRandomValues(new Uint8Array(e)).reduce(((e,r)=>e+=(r&=63)<36?r.toString(36):r<62?(r-26).toString(36).toUpperCase():r>62?"-":"_"),"");function F(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function U(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?F(Object(t),!0).forEach((function(r){M(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):F(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function B(e,r){for(var t=0;t<r.length;t++){var n=r[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function H(e,r,t){return r&&B(e.prototype,r),t&&B(e,t),Object.defineProperty(e,"prototype",{writable:!1}),e}function M(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}var V=H((function e(r){var t=this;!function(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}(this,e),M(this,"options",{cursorChar:"|",cursorCss:"terminal___emulator___static"}),M(this,"remove",(function(){t.element.remove()})),M(this,"append",(function(e){e.appendChild(t.element)})),r&&(this.options=U(U({},this.options),r)),this.element=document.createElement("span"),this.element.id=I(),this.element.innerHTML=this.options.cursorChar,this.options.cursorCss.length>0&&this.element.classList.add(this.options.cursorCss)}));const z=V;function G(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function W(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?G(Object(t),!0).forEach((function(r){Q(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):G(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function Y(e,r){for(var t=0;t<r.length;t++){var n=r[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function Z(e,r,t){return r&&Y(e.prototype,r),t&&Y(e,t),Object.defineProperty(e,"prototype",{writable:!1}),e}function Q(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}var J=Z((function e(r,t){var n=this;!function(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}(this,e),Q(this,"options",{stdoutCss:"termminal___emulator___stdout",cursorChar:"|",cursorCss:"terminal___cursor___static"}),Q(this,"clear",(function(){n.removeCursor(),n.element.innerHTML="",n.appendCursor()})),Q(this,"removeCursor",(function(){n.cursor.remove()})),Q(this,"appendCursor",(function(){n.cursor.append(n.element)})),t&&(this.options=W(W({},this.options),t)),this.element=document.createElement("span"),this.element.id=I(),this.options.stdoutCss.length>0&&this.element.classList.add(this.options.stdoutCss),r.appendChild(this.element),this.cursor=new z(this.options)}));const X=J;function K(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function $(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?K(Object(t),!0).forEach((function(r){te(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):K(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function ee(e,r){for(var t=0;t<r.length;t++){var n=r[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function re(e,r,t){return r&&ee(e.prototype,r),t&&ee(e,t),Object.defineProperty(e,"prototype",{writable:!1}),e}function te(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}var ne=re((function e(r){var t,n=this;!function(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}(this,e),te(this,"writer",new j),te(this,"historyStack",[]),te(this,"eventQueue",[]),te(this,"options",{wrapperId:"terminal___emulator___wrapper",wrapperCss:"terminal___emulator___wrapper",cursorChar:"|",cursorCss:"terminal___cursor___static",stdoutCss:"termminal___emulator___stdout",vimCss:"vim___emulator___wrapper",vimBarCss:"vim___emulator___bar",vimBarLeftCss:"vim___emulator___bar___left",vimBarRightCss:"vim___emulator___bar___right"}),te(this,"HISTSIZE",500),te(this,"writeToStdout",(function(e,r,t){var o={fn:function(t){return n.writer.writeToElement(n.stdout.element,e,r,n.stdout.removeCursor,n.stdout.appendCursor,t)},fnAfter:function(e){e()},delayAfter:t||0};return n.eventQueue.push(o),n})),te(this,"eraseFromStdout",(function(e,r,t){var o={fn:function(t){return n.writer.eraseFromElement(n.stdout.element,e,r,n.stdout.removeCursor,n.stdout.appendCursor,t)},fnAfter:function(e){e()},delayAfter:t||0};return n.eventQueue.push(o),n})),te(this,"writeCommand",(function(e){return n.addWriteCommandEvent(e),n})),te(this,"writeCommands",(function(e){return e.forEach((function(e){n.addWriteCommandEvent(e)})),n})),te(this,"pause",(function(e){var r={fn:function(e){e()},fnAfter:function(e){e()},delayAfter:e};return n.eventQueue.push(r),n})),te(this,"echo",(function(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"neutral",t=arguments.length>2?arguments[2]:void 0;return n.addWriteCommandEvent({text:"echo "+e,writeSpeed:r,output:e,pauseBeforeOutput:t}),n})),te(this,"history",(function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"neutral",r=arguments.length>1?arguments[1]:void 0;return n.addWriteCommandEvent({text:"history",writeSpeed:e,output:n.getHistoryOutput,pauseBeforeOutput:r}),n})),te(this,"clear",(function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"neutral",r=arguments.length>1?arguments[1]:void 0;return n.addWriteCommandEvent({text:"clear",writeSpeed:e,pauseBeforeOutput:r},(function(e){n.stdout.clear(),n.writeNewInputLineToStdout(e)})),n})),te(this,"touch",(function(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"neutral",t=arguments.length>2?arguments[2]:void 0;return n.addWriteCommandEvent({text:"touch "+e,writeSpeed:r,pauseBeforeOutput:t},(function(r){n.fileSystem.touch(e),r()})),n})),te(this,"mkdir",(function(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"neutral",t=arguments.length>2?arguments[2]:void 0;return n.addWriteCommandEvent({text:"mkdir "+e,writeSpeed:r,output:function(){for(var r="",t=n.fileSystem.mkdir(e),o=0;o<t.length;o++)r+=t[o].message,o!=t.length-1&&(r+="<br>");return r},pauseBeforeOutput:t}),n})),te(this,"useradd",(function(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"neutral",t=arguments.length>2?arguments[2]:void 0;return n.addWriteCommandEvent({text:"useradd "+e.name,writeSpeed:r,output:function(){var r=n.fileSystem.useradd(e);return"string"==typeof r?"":r.message},pauseBeforeOutput:t}),n})),te(this,"pwd",(function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"neutral",r=arguments.length>1?arguments[1]:void 0;return n.addWriteCommandEvent({text:"pwd",writeSpeed:e,output:n.fileSystem.pwd,pauseBeforeOutput:r}),n})),te(this,"cd",(function(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"neutral",t=arguments.length>2?arguments[2]:void 0;return n.addWriteCommandEvent({text:"cd "+e,writeSpeed:r,output:function(){var r=n.fileSystem.cd(e);return"string"==typeof r?"":r.message},pauseBeforeOutput:t}),n})),te(this,"ls",(function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"neutral",r=arguments.length>1?arguments[1]:void 0;return n.addWriteCommandEvent({text:"ls",writeSpeed:e,output:function(){var e=n.fileSystem.ls();if(0===e.length)return"";var r='<table style="table-layout: fixed;">';r+="<tr>";for(var t=0;t<e.length;t++)r=r+'<td style="padding: 0;">'+e[t]+"&nbsp;</td>",t>0&&(t+1)%12==0&&(r+="</tr><tr>");return r+="</tr></table>",r},pauseBeforeOutput:r},(function(e){n.removeLastLineBreakFromStdout((function(){return n.writeNewInputLineToStdout(e)}))})),n})),te(this,"vim",(function(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"neutral",t=arguments.length>2?arguments[2]:void 0;return n.addWriteCommandEvent({text:"vim "+e,writeSpeed:r,pauseBeforeOutput:t},(function(r){n.vimEmulator.openFile(n.wrapperElement,n.stdout,n.fileSystem,e),r()})),n})),te(this,"vimInsert",(function(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"neutral",t=arguments.length>2?arguments[2]:void 0,o={fn:function(t){n.vimEmulator.insert(n.stdout,n.fileSystem,e,r,t)},fnAfter:function(e){return e()},delayAfter:t||0};return n.eventQueue.push(o),n})),te(this,"vimWrite",(function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"neutral",r=arguments.length>1?arguments[1]:void 0;r=r||0;var t={fn:function(t){n.vimEmulator.write(n.stdout,n.fileSystem,e,r,t)},fnAfter:function(e){return e()},delayAfter:0};return n.eventQueue.push(t),n})),te(this,"vimQuit",(function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"neutral",r=arguments.length>1?arguments[1]:void 0;r=r||0;var t={fn:function(t){n.vimEmulator.quit(n.stdout,n.fileSystem,e,r,t)},fnAfter:function(e){return e()},delayAfter:0};return n.eventQueue.push(t),n})),te(this,"vimWriteQuit",(function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"neutral",r=arguments.length>1?arguments[1]:void 0;r=r||0;var t={fn:function(t){n.vimEmulator.writeQuit(n.stdout,n.fileSystem,e,r,t)},fnAfter:function(e){return e()},delayAfter:0};return n.eventQueue.push(t),n})),te(this,"run",(function(e){n.currentEvent=n.eventQueue.shift(),void 0!==n.currentEvent?n.currentEvent.fn((function(){n.currentEvent.fnAfter((function(){setTimeout((function(){n.run(e)}),n.currentEvent.delayAfter)}))})):void 0!==e&&e()})),te(this,"addWriteCommandEvent",(function(e,r){var t={fn:function(r){n.historyStack.push(e),n.writer.writeToElement(n.stdout.element,e.text,e.writeSpeed,n.stdout.removeCursor,n.stdout.appendCursor,(function(){n.writeLineBreakToStdout((function(){n.stdout.removeCursor();var t="";"function"==typeof e.output?t=e.output():"string"==typeof e.output&&(t=e.output),void 0!==e.output&&t.length>0?n.writer.writeToElement(n.stdout.element,t,0,void 0,void 0,(function(){n.writeLineBreakToStdout((function(){n.writeNewInputLineToStdout((function(){n.stdout.appendCursor(),r()}))}))})):n.writeNewInputLineToStdout((function(){n.stdout.appendCursor(),r()}))}))}))},fnAfter:r?function(e){r(e)}:function(e){e()},delayAfter:0};n.eventQueue.push(t)})),te(this,"getHistoryOutput",(function(){for(var e=[],r=0,t=n.historyStack.length;t>0;t--){var o="";if(t<10?o+="&nbsp;&nbsp;&nbsp;&nbsp;":t<100?o+="&nbsp;&nbsp;&nbsp;":t<1e3?o+="&nbsp;&nbsp;":t<1e4&&(o+="&nbsp;"),o+="".concat(t,"&nbsp;&nbsp;").concat(n.historyStack[t-1].text),e.push(o),++r>=n.HISTSIZE)break}return e.reverse().join("<br />")})),te(this,"writeNewInputLineToStdout",(function(e){n.stdout.removeCursor();var r="";void 0!==n.options.enviroment&&n.options.enviroment.hostname.length>0&&n.options.enviroment.user.name.length>0&&(r=n.options.enviroment.user.name+"@"+n.options.enviroment.hostname+":"),n.writer.writeToElement(n.stdout.element,r,0,void 0,void 0,(function(){n.writer.writeToElement(n.stdout.element,n.fileSystem.getCurrentDirectory(),0,void 0,void 0,(function(){n.writer.writeToElement(n.stdout.element,"$ ",0,void 0,n.stdout.appendCursor,e)}))}))})),te(this,"writeLineBreakToStdout",(function(e){n.writer.writeToElement(n.stdout.element,"<br>",0,n.stdout.removeCursor,n.stdout.appendCursor,e)})),te(this,"removeLastLineBreakFromStdout",(function(e){n.stdout.removeCursor(),n.stdout.element.innerHTML=n.stdout.element.innerHTML.substring(0,n.stdout.element.innerHTML.lastIndexOf("<br>")),n.stdout.appendCursor(),e()})),r&&(this.options=$($({},this.options),r)),null===document.getElementById(this.options.wrapperId)?(this.wrapperElement=document.createElement("div"),this.wrapperElement.id=this.options.wrapperId,document.body.appendChild(this.wrapperElement)):this.wrapperElement=document.getElementById(this.options.wrapperId),this.options.wrapperCss.length>0&&this.wrapperElement.classList.add(this.options.wrapperCss),this.fileSystem=new A(null===(t=this.options.enviroment)||void 0===t?void 0:t.user),this.stdout=new X(this.wrapperElement,this.options),this.vimEmulator=new R(this.options),this.writeNewInputLineToStdout((function(){}))}));const oe=ne},28:(e,r,t)=>{"use strict";t.d(r,{Z:()=>s});var n=t(7537),o=t.n(n),i=t(3645),a=t.n(i)()(o());a.push([e.id,"@keyframes terminal___cursor___fluid {\r\n\t0% {\r\n\t\topacity: 100%;\r\n\t}\r\n\t50% {\r\n\t\topacity: 0%;\r\n\t}\r\n\t100% {\r\n\t\topacity: 100%;\r\n\t}\r\n}\r\n.terminal___cursor___fluid {\r\n\tanimation: terminal___cursor___fluid 1s infinite;\r\n}\r\n\r\n@keyframes terminal___cursor___static {\r\n\t0% {\r\n\t\topacity: 100%;\r\n\t}\r\n\t49% {\r\n\t\topacity: 100%;\r\n\t}\r\n\t50% {\r\n\t\topacity: 0%;\r\n\t}\r\n\t99% {\r\n\t\topacity: 0%;\r\n\t}\r\n\t100% {\r\n\t\topacity: 100%;\r\n\t}\r\n}\r\n.terminal___cursor___static {\r\n\tanimation: terminal___cursor___static 1s infinite;\r\n}\r\n\r\n.terminal___cursor___none {\r\n\tanimation: none;\r\n}\r\n\r\n.vim___emulator___wrapper {\r\n\tposition: relative;\r\n}\r\n.vim___emulator___bar {\r\n\tposition: absolute;\r\n\tbottom: 0;\r\n\tleft: 0;\r\n\tright: 0;\r\n\tmargin-right: auto;\r\n\twidth: 98%;\r\n}\r\n.vim___emulator___bar___left {\r\n\tfloat: left;\r\n}\r\n.vim___emulator___bar___right {\r\n\tfloat: right;\r\n}","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;CACC;EACC,aAAa;CACd;CACA;EACC,WAAW;CACZ;CACA;EACC,aAAa;CACd;AACD;AACA;CACC,gDAAgD;AACjD;;AAEA;CACC;EACC,aAAa;CACd;CACA;EACC,aAAa;CACd;CACA;EACC,WAAW;CACZ;CACA;EACC,WAAW;CACZ;CACA;EACC,aAAa;CACd;AACD;AACA;CACC,iDAAiD;AAClD;;AAEA;CACC,eAAe;AAChB;;AAEA;CACC,kBAAkB;AACnB;AACA;CACC,kBAAkB;CAClB,SAAS;CACT,OAAO;CACP,QAAQ;CACR,kBAAkB;CAClB,UAAU;AACX;AACA;CACC,WAAW;AACZ;AACA;CACC,YAAY;AACb",sourcesContent:["@keyframes terminal___cursor___fluid {\r\n\t0% {\r\n\t\topacity: 100%;\r\n\t}\r\n\t50% {\r\n\t\topacity: 0%;\r\n\t}\r\n\t100% {\r\n\t\topacity: 100%;\r\n\t}\r\n}\r\n.terminal___cursor___fluid {\r\n\tanimation: terminal___cursor___fluid 1s infinite;\r\n}\r\n\r\n@keyframes terminal___cursor___static {\r\n\t0% {\r\n\t\topacity: 100%;\r\n\t}\r\n\t49% {\r\n\t\topacity: 100%;\r\n\t}\r\n\t50% {\r\n\t\topacity: 0%;\r\n\t}\r\n\t99% {\r\n\t\topacity: 0%;\r\n\t}\r\n\t100% {\r\n\t\topacity: 100%;\r\n\t}\r\n}\r\n.terminal___cursor___static {\r\n\tanimation: terminal___cursor___static 1s infinite;\r\n}\r\n\r\n.terminal___cursor___none {\r\n\tanimation: none;\r\n}\r\n\r\n.vim___emulator___wrapper {\r\n\tposition: relative;\r\n}\r\n.vim___emulator___bar {\r\n\tposition: absolute;\r\n\tbottom: 0;\r\n\tleft: 0;\r\n\tright: 0;\r\n\tmargin-right: auto;\r\n\twidth: 98%;\r\n}\r\n.vim___emulator___bar___left {\r\n\tfloat: left;\r\n}\r\n.vim___emulator___bar___right {\r\n\tfloat: right;\r\n}"],sourceRoot:""}]);const s=a},3645:e=>{"use strict";e.exports=function(e){var r=[];return r.toString=function(){return this.map((function(r){var t="",n=void 0!==r[5];return r[4]&&(t+="@supports (".concat(r[4],") {")),r[2]&&(t+="@media ".concat(r[2]," {")),n&&(t+="@layer".concat(r[5].length>0?" ".concat(r[5]):""," {")),t+=e(r),n&&(t+="}"),r[2]&&(t+="}"),r[4]&&(t+="}"),t})).join("")},r.i=function(e,t,n,o,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(n)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(a[c]=!0)}for(var u=0;u<e.length;u++){var l=[].concat(e[u]);n&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),r.push(l))}},r}},7537:e=>{"use strict";e.exports=function(e){var r=e[1],t=e[3];if(!t)return r;if("function"==typeof btoa){var n=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(n),i="/*# ".concat(o," */"),a=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[r].concat(a).concat([i]).join("\n")}return[r].join("\n")}},8282:(e,r,t)=>{var n=t(2354);e.exports={Graph:n.Graph,json:t(8974),alg:t(2440),version:n.version}},2842:(e,r,t)=>{var n=t(9126);e.exports=function(e){var r,t={},o=[];function i(o){n.has(t,o)||(t[o]=!0,r.push(o),n.each(e.successors(o),i),n.each(e.predecessors(o),i))}return n.each(e.nodes(),(function(e){r=[],i(e),r.length&&o.push(r)})),o}},3984:(e,r,t)=>{var n=t(9126);function o(e,r,t,i,a,s){n.has(i,r)||(i[r]=!0,t||s.push(r),n.each(a(r),(function(r){o(e,r,t,i,a,s)})),t&&s.push(r))}e.exports=function(e,r,t){n.isArray(r)||(r=[r]);var i=(e.isDirected()?e.successors:e.neighbors).bind(e),a=[],s={};return n.each(r,(function(r){if(!e.hasNode(r))throw new Error("Graph does not have node: "+r);o(e,r,"post"===t,s,i,a)})),a}},4847:(e,r,t)=>{var n=t(3763),o=t(9126);e.exports=function(e,r,t){return o.transform(e.nodes(),(function(o,i){o[i]=n(e,i,r,t)}),{})}},3763:(e,r,t)=>{var n=t(9126),o=t(9675);e.exports=function(e,r,t,n){return function(e,r,t,n){var i,a,s={},c=new o,u=function(e){var r=e.v!==i?e.v:e.w,n=s[r],o=t(e),u=a.distance+o;if(o<0)throw new Error("dijkstra does not allow negative edge weights. Bad edge: "+e+" Weight: "+o);u<n.distance&&(n.distance=u,n.predecessor=i,c.decrease(r,u))};e.nodes().forEach((function(e){var t=e===r?0:Number.POSITIVE_INFINITY;s[e]={distance:t},c.add(e,t)}));for(;c.size()>0&&(i=c.removeMin(),(a=s[i]).distance!==Number.POSITIVE_INFINITY);)n(i).forEach(u);return s}(e,String(r),t||i,n||function(r){return e.outEdges(r)})};var i=n.constant(1)},9096:(e,r,t)=>{var n=t(9126),o=t(5023);e.exports=function(e){return n.filter(o(e),(function(r){return r.length>1||1===r.length&&e.hasEdge(r[0],r[0])}))}},8924:(e,r,t)=>{var n=t(9126);e.exports=function(e,r,t){return function(e,r,t){var n={},o=e.nodes();return o.forEach((function(e){n[e]={},n[e][e]={distance:0},o.forEach((function(r){e!==r&&(n[e][r]={distance:Number.POSITIVE_INFINITY})})),t(e).forEach((function(t){var o=t.v===e?t.w:t.v,i=r(t);n[e][o]={distance:i,predecessor:e}}))})),o.forEach((function(e){var r=n[e];o.forEach((function(t){var i=n[t];o.forEach((function(t){var n=i[e],o=r[t],a=i[t],s=n.distance+o.distance;s<a.distance&&(a.distance=s,a.predecessor=o.predecessor)}))}))})),n}(e,r||o,t||function(r){return e.outEdges(r)})};var o=n.constant(1)},2440:(e,r,t)=>{e.exports={components:t(2842),dijkstra:t(3763),dijkstraAll:t(4847),findCycles:t(9096),floydWarshall:t(8924),isAcyclic:t(2707),postorder:t(8828),preorder:t(2648),prim:t(514),tarjan:t(5023),topsort:t(2166)}},2707:(e,r,t)=>{var n=t(2166);e.exports=function(e){try{n(e)}catch(e){if(e instanceof n.CycleException)return!1;throw e}return!0}},8828:(e,r,t)=>{var n=t(3984);e.exports=function(e,r){return n(e,r,"post")}},2648:(e,r,t)=>{var n=t(3984);e.exports=function(e,r){return n(e,r,"pre")}},514:(e,r,t)=>{var n=t(9126),o=t(771),i=t(9675);e.exports=function(e,r){var t,a=new o,s={},c=new i;function u(e){var n=e.v===t?e.w:e.v,o=c.priority(n);if(void 0!==o){var i=r(e);i<o&&(s[n]=t,c.decrease(n,i))}}if(0===e.nodeCount())return a;n.each(e.nodes(),(function(e){c.add(e,Number.POSITIVE_INFINITY),a.setNode(e)})),c.decrease(e.nodes()[0],0);var l=!1;for(;c.size()>0;){if(t=c.removeMin(),n.has(s,t))a.setEdge(t,s[t]);else{if(l)throw new Error("Input graph is not connected: "+e);l=!0}e.nodeEdges(t).forEach(u)}return a}},5023:(e,r,t)=>{var n=t(9126);e.exports=function(e){var r=0,t=[],o={},i=[];function a(s){var c=o[s]={onStack:!0,lowlink:r,index:r++};if(t.push(s),e.successors(s).forEach((function(e){n.has(o,e)?o[e].onStack&&(c.lowlink=Math.min(c.lowlink,o[e].index)):(a(e),c.lowlink=Math.min(c.lowlink,o[e].lowlink))})),c.lowlink===c.index){var u,l=[];do{u=t.pop(),o[u].onStack=!1,l.push(u)}while(s!==u);i.push(l)}}return e.nodes().forEach((function(e){n.has(o,e)||a(e)})),i}},2166:(e,r,t)=>{var n=t(9126);function o(e){var r={},t={},o=[];if(n.each(e.sinks(),(function a(s){if(n.has(t,s))throw new i;n.has(r,s)||(t[s]=!0,r[s]=!0,n.each(e.predecessors(s),a),delete t[s],o.push(s))})),n.size(r)!==e.nodeCount())throw new i;return o}function i(){}e.exports=o,o.CycleException=i,i.prototype=new Error},9675:(e,r,t)=>{var n=t(9126);function o(){this._arr=[],this._keyIndices={}}e.exports=o,o.prototype.size=function(){return this._arr.length},o.prototype.keys=function(){return this._arr.map((function(e){return e.key}))},o.prototype.has=function(e){return n.has(this._keyIndices,e)},o.prototype.priority=function(e){var r=this._keyIndices[e];if(void 0!==r)return this._arr[r].priority},o.prototype.min=function(){if(0===this.size())throw new Error("Queue underflow");return this._arr[0].key},o.prototype.add=function(e,r){var t=this._keyIndices;if(e=String(e),!n.has(t,e)){var o=this._arr,i=o.length;return t[e]=i,o.push({key:e,priority:r}),this._decrease(i),!0}return!1},o.prototype.removeMin=function(){this._swap(0,this._arr.length-1);var e=this._arr.pop();return delete this._keyIndices[e.key],this._heapify(0),e.key},o.prototype.decrease=function(e,r){var t=this._keyIndices[e];if(r>this._arr[t].priority)throw new Error("New priority is greater than current priority. Key: "+e+" Old: "+this._arr[t].priority+" New: "+r);this._arr[t].priority=r,this._decrease(t)},o.prototype._heapify=function(e){var r=this._arr,t=2*e,n=t+1,o=e;t<r.length&&(o=r[t].priority<r[o].priority?t:o,n<r.length&&(o=r[n].priority<r[o].priority?n:o),o!==e&&(this._swap(e,o),this._heapify(o)))},o.prototype._decrease=function(e){for(var r,t=this._arr,n=t[e].priority;0!==e&&!(t[r=e>>1].priority<n);)this._swap(e,r),e=r},o.prototype._swap=function(e,r){var t=this._arr,n=this._keyIndices,o=t[e],i=t[r];t[e]=i,t[r]=o,n[i.key]=e,n[o.key]=r}},771:(e,r,t)=>{"use strict";var n=t(9126);e.exports=i;var o="\0";function i(e){this._isDirected=!n.has(e,"directed")||e.directed,this._isMultigraph=!!n.has(e,"multigraph")&&e.multigraph,this._isCompound=!!n.has(e,"compound")&&e.compound,this._label=void 0,this._defaultNodeLabelFn=n.constant(void 0),this._defaultEdgeLabelFn=n.constant(void 0),this._nodes={},this._isCompound&&(this._parent={},this._children={},this._children["\0"]={}),this._in={},this._preds={},this._out={},this._sucs={},this._edgeObjs={},this._edgeLabels={}}function a(e,r){e[r]?e[r]++:e[r]=1}function s(e,r){--e[r]||delete e[r]}function c(e,r,t,o){var i=""+r,a=""+t;if(!e&&i>a){var s=i;i=a,a=s}return i+""+a+""+(n.isUndefined(o)?"\0":o)}function u(e,r,t,n){var o=""+r,i=""+t;if(!e&&o>i){var a=o;o=i,i=a}var s={v:o,w:i};return n&&(s.name=n),s}function l(e,r){return c(e,r.v,r.w,r.name)}i.prototype._nodeCount=0,i.prototype._edgeCount=0,i.prototype.isDirected=function(){return this._isDirected},i.prototype.isMultigraph=function(){return this._isMultigraph},i.prototype.isCompound=function(){return this._isCompound},i.prototype.setGraph=function(e){return this._label=e,this},i.prototype.graph=function(){return this._label},i.prototype.setDefaultNodeLabel=function(e){return n.isFunction(e)||(e=n.constant(e)),this._defaultNodeLabelFn=e,this},i.prototype.nodeCount=function(){return this._nodeCount},i.prototype.nodes=function(){return n.keys(this._nodes)},i.prototype.sources=function(){var e=this;return n.filter(this.nodes(),(function(r){return n.isEmpty(e._in[r])}))},i.prototype.sinks=function(){var e=this;return n.filter(this.nodes(),(function(r){return n.isEmpty(e._out[r])}))},i.prototype.setNodes=function(e,r){var t=arguments,o=this;return n.each(e,(function(e){t.length>1?o.setNode(e,r):o.setNode(e)})),this},i.prototype.setNode=function(e,r){return n.has(this._nodes,e)?(arguments.length>1&&(this._nodes[e]=r),this):(this._nodes[e]=arguments.length>1?r:this._defaultNodeLabelFn(e),this._isCompound&&(this._parent[e]=o,this._children[e]={},this._children["\0"][e]=!0),this._in[e]={},this._preds[e]={},this._out[e]={},this._sucs[e]={},++this._nodeCount,this)},i.prototype.node=function(e){return this._nodes[e]},i.prototype.hasNode=function(e){return n.has(this._nodes,e)},i.prototype.removeNode=function(e){var r=this;if(n.has(this._nodes,e)){var t=function(e){r.removeEdge(r._edgeObjs[e])};delete this._nodes[e],this._isCompound&&(this._removeFromParentsChildList(e),delete this._parent[e],n.each(this.children(e),(function(e){r.setParent(e)})),delete this._children[e]),n.each(n.keys(this._in[e]),t),delete this._in[e],delete this._preds[e],n.each(n.keys(this._out[e]),t),delete this._out[e],delete this._sucs[e],--this._nodeCount}return this},i.prototype.setParent=function(e,r){if(!this._isCompound)throw new Error("Cannot set parent in a non-compound graph");if(n.isUndefined(r))r=o;else{for(var t=r+="";!n.isUndefined(t);t=this.parent(t))if(t===e)throw new Error("Setting "+r+" as parent of "+e+" would create a cycle");this.setNode(r)}return this.setNode(e),this._removeFromParentsChildList(e),this._parent[e]=r,this._children[r][e]=!0,this},i.prototype._removeFromParentsChildList=function(e){delete this._children[this._parent[e]][e]},i.prototype.parent=function(e){if(this._isCompound){var r=this._parent[e];if(r!==o)return r}},i.prototype.children=function(e){if(n.isUndefined(e)&&(e=o),this._isCompound){var r=this._children[e];if(r)return n.keys(r)}else{if(e===o)return this.nodes();if(this.hasNode(e))return[]}},i.prototype.predecessors=function(e){var r=this._preds[e];if(r)return n.keys(r)},i.prototype.successors=function(e){var r=this._sucs[e];if(r)return n.keys(r)},i.prototype.neighbors=function(e){var r=this.predecessors(e);if(r)return n.union(r,this.successors(e))},i.prototype.isLeaf=function(e){return 0===(this.isDirected()?this.successors(e):this.neighbors(e)).length},i.prototype.filterNodes=function(e){var r=new this.constructor({directed:this._isDirected,multigraph:this._isMultigraph,compound:this._isCompound});r.setGraph(this.graph());var t=this;n.each(this._nodes,(function(t,n){e(n)&&r.setNode(n,t)})),n.each(this._edgeObjs,(function(e){r.hasNode(e.v)&&r.hasNode(e.w)&&r.setEdge(e,t.edge(e))}));var o={};function i(e){var n=t.parent(e);return void 0===n||r.hasNode(n)?(o[e]=n,n):n in o?o[n]:i(n)}return this._isCompound&&n.each(r.nodes(),(function(e){r.setParent(e,i(e))})),r},i.prototype.setDefaultEdgeLabel=function(e){return n.isFunction(e)||(e=n.constant(e)),this._defaultEdgeLabelFn=e,this},i.prototype.edgeCount=function(){return this._edgeCount},i.prototype.edges=function(){return n.values(this._edgeObjs)},i.prototype.setPath=function(e,r){var t=this,o=arguments;return n.reduce(e,(function(e,n){return o.length>1?t.setEdge(e,n,r):t.setEdge(e,n),n})),this},i.prototype.setEdge=function(){var e,r,t,o,i=!1,s=arguments[0];"object"==typeof s&&null!==s&&"v"in s?(e=s.v,r=s.w,t=s.name,2===arguments.length&&(o=arguments[1],i=!0)):(e=s,r=arguments[1],t=arguments[3],arguments.length>2&&(o=arguments[2],i=!0)),e=""+e,r=""+r,n.isUndefined(t)||(t=""+t);var l=c(this._isDirected,e,r,t);if(n.has(this._edgeLabels,l))return i&&(this._edgeLabels[l]=o),this;if(!n.isUndefined(t)&&!this._isMultigraph)throw new Error("Cannot set a named edge when isMultigraph = false");this.setNode(e),this.setNode(r),this._edgeLabels[l]=i?o:this._defaultEdgeLabelFn(e,r,t);var p=u(this._isDirected,e,r,t);return e=p.v,r=p.w,Object.freeze(p),this._edgeObjs[l]=p,a(this._preds[r],e),a(this._sucs[e],r),this._in[r][l]=p,this._out[e][l]=p,this._edgeCount++,this},i.prototype.edge=function(e,r,t){var n=1===arguments.length?l(this._isDirected,arguments[0]):c(this._isDirected,e,r,t);return this._edgeLabels[n]},i.prototype.hasEdge=function(e,r,t){var o=1===arguments.length?l(this._isDirected,arguments[0]):c(this._isDirected,e,r,t);return n.has(this._edgeLabels,o)},i.prototype.removeEdge=function(e,r,t){var n=1===arguments.length?l(this._isDirected,arguments[0]):c(this._isDirected,e,r,t),o=this._edgeObjs[n];return o&&(e=o.v,r=o.w,delete this._edgeLabels[n],delete this._edgeObjs[n],s(this._preds[r],e),s(this._sucs[e],r),delete this._in[r][n],delete this._out[e][n],this._edgeCount--),this},i.prototype.inEdges=function(e,r){var t=this._in[e];if(t){var o=n.values(t);return r?n.filter(o,(function(e){return e.v===r})):o}},i.prototype.outEdges=function(e,r){var t=this._out[e];if(t){var o=n.values(t);return r?n.filter(o,(function(e){return e.w===r})):o}},i.prototype.nodeEdges=function(e,r){var t=this.inEdges(e,r);if(t)return t.concat(this.outEdges(e,r))}},2354:(e,r,t)=>{e.exports={Graph:t(771),version:t(9631)}},8974:(e,r,t)=>{var n=t(9126),o=t(771);function i(e){return n.map(e.nodes(),(function(r){var t=e.node(r),o=e.parent(r),i={v:r};return n.isUndefined(t)||(i.value=t),n.isUndefined(o)||(i.parent=o),i}))}function a(e){return n.map(e.edges(),(function(r){var t=e.edge(r),o={v:r.v,w:r.w};return n.isUndefined(r.name)||(o.name=r.name),n.isUndefined(t)||(o.value=t),o}))}e.exports={write:function(e){var r={options:{directed:e.isDirected(),multigraph:e.isMultigraph(),compound:e.isCompound()},nodes:i(e),edges:a(e)};n.isUndefined(e.graph())||(r.value=n.clone(e.graph()));return r},read:function(e){var r=new o(e.options).setGraph(e.value);return n.each(e.nodes,(function(e){r.setNode(e.v,e.value),e.parent&&r.setParent(e.v,e.parent)})),n.each(e.edges,(function(e){r.setEdge({v:e.v,w:e.w,name:e.name},e.value)})),r}}},9126:(e,r,t)=>{var n;try{n={clone:t(6678),constant:t(5703),each:t(6073),filter:t(3105),has:t(8721),isArray:t(1469),isEmpty:t(1609),isFunction:t(3560),isUndefined:t(2353),keys:t(3674),map:t(5161),reduce:t(4061),size:t(4238),transform:t(8718),union:t(3386),values:t(2628)}}catch(e){}n||(n=window._),e.exports=n},9631:e=>{e.exports="2.1.8"},9111:function(e,r,t){"use strict";var n=this&&this.__assign||function(){return n=Object.assign||function(e){for(var r,t=1,n=arguments.length;t<n;t++)for(var o in r=arguments[t])Object.prototype.hasOwnProperty.call(r,o)&&(e[o]=r[o]);return e},n.apply(this,arguments)};Object.defineProperty(r,"__esModule",{value:!0});var o=t(1182),i=t(2642),a=t(9726),s=n(n({},o.namedReferences),{all:o.namedReferences.html5}),c={specialChars:/[<>'"&]/g,nonAscii:/(?:[<>'"&\u0080-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])/g,nonAsciiPrintable:/(?:[<>'"&\x01-\x08\x11-\x15\x17-\x1F\x7f-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])/g,extensive:/(?:[\x01-\x0c\x0e-\x1f\x21-\x2c\x2e-\x2f\x3a-\x40\x5b-\x60\x7b-\x7d\x7f-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])/g},u={mode:"specialChars",level:"all",numeric:"decimal"};r.encode=function(e,r){var t=void 0===(l=(i=void 0===r?u:r).mode)?"specialChars":l,n=void 0===(h=i.numeric)?"decimal":h,o=i.level;if(!e)return"";var i,l,p=c[t],d=s[void 0===o?"all":o].characters,f="hexadecimal"===n;if(p.lastIndex=0,i=p.exec(e)){l="";var h=0;do{h!==i.index&&(l+=e.substring(h,i.index));var m=d[o=i[0]];if(!m){var v=o.length>1?a.getCodePoint(o,0):o.charCodeAt(0);m=(f?"&#x"+v.toString(16):"&#"+v)+";"}l+=m,h=i.index+o.length}while(i=p.exec(e));h!==e.length&&(l+=e.substring(h))}else l=e;return l};var l={scope:"body",level:"all"},p=/&(?:#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+);/g,d=/&(?:#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+)[;=]?/g,f={xml:{strict:p,attribute:d,body:o.bodyRegExps.xml},html4:{strict:p,attribute:d,body:o.bodyRegExps.html4},html5:{strict:p,attribute:d,body:o.bodyRegExps.html5}},h=n(n({},f),{all:f.html5}),m=String.fromCharCode,v=m(65533),g={level:"all"};r.decodeEntity=function(e,r){var t=void 0===(n=(void 0===r?g:r).level)?"all":n;if(!e)return"";var n=e,o=(e[e.length-1],s[t].entities[e]);if(o)n=o;else if("&"===e[0]&&"#"===e[1]){var c=e[2],u="x"==c||"X"==c?parseInt(e.substr(3),16):parseInt(e.substr(2));n=u>=1114111?v:u>65535?a.fromCodePoint(u):m(i.numericUnicodeMap[u]||u)}return n},r.decode=function(e,r){var t=void 0===r?l:r,n=t.level,o=void 0===n?"all":n,c=t.scope,u=void 0===c?"xml"===o?"strict":"body":c;if(!e)return"";var p=h[o][u],d=s[o].entities,f="attribute"===u,g="strict"===u;p.lastIndex=0;var b,y=p.exec(e);if(y){b="";var w=0;do{w!==y.index&&(b+=e.substring(w,y.index));var _=y[0],x=_,E=_[_.length-1];if(f&&"="===E)x=_;else if(g&&";"!==E)x=_;else{var A=d[_];if(A)x=A;else if("&"===_[0]&&"#"===_[1]){var q=_[2],C="x"==q||"X"==q?parseInt(_.substr(3),16):parseInt(_.substr(2));x=C>=1114111?v:C>65535?a.fromCodePoint(C):m(i.numericUnicodeMap[C]||C)}}b+=x,w=y.index+_.length}while(y=p.exec(e));w!==e.length&&(b+=e.substring(w))}else b=e;return b}},1182:(e,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.bodyRegExps={xml:/&(?:#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+);?/g,html4:/&(?:nbsp|iexcl|cent|pound|curren|yen|brvbar|sect|uml|copy|ordf|laquo|not|shy|reg|macr|deg|plusmn|sup2|sup3|acute|micro|para|middot|cedil|sup1|ordm|raquo|frac14|frac12|frac34|iquest|Agrave|Aacute|Acirc|Atilde|Auml|Aring|AElig|Ccedil|Egrave|Eacute|Ecirc|Euml|Igrave|Iacute|Icirc|Iuml|ETH|Ntilde|Ograve|Oacute|Ocirc|Otilde|Ouml|times|Oslash|Ugrave|Uacute|Ucirc|Uuml|Yacute|THORN|szlig|agrave|aacute|acirc|atilde|auml|aring|aelig|ccedil|egrave|eacute|ecirc|euml|igrave|iacute|icirc|iuml|eth|ntilde|ograve|oacute|ocirc|otilde|ouml|divide|oslash|ugrave|uacute|ucirc|uuml|yacute|thorn|yuml|quot|amp|lt|gt|#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+);?/g,html5:/&(?:AElig|AMP|Aacute|Acirc|Agrave|Aring|Atilde|Auml|COPY|Ccedil|ETH|Eacute|Ecirc|Egrave|Euml|GT|Iacute|Icirc|Igrave|Iuml|LT|Ntilde|Oacute|Ocirc|Ograve|Oslash|Otilde|Ouml|QUOT|REG|THORN|Uacute|Ucirc|Ugrave|Uuml|Yacute|aacute|acirc|acute|aelig|agrave|amp|aring|atilde|auml|brvbar|ccedil|cedil|cent|copy|curren|deg|divide|eacute|ecirc|egrave|eth|euml|frac12|frac14|frac34|gt|iacute|icirc|iexcl|igrave|iquest|iuml|laquo|lt|macr|micro|middot|nbsp|not|ntilde|oacute|ocirc|ograve|ordf|ordm|oslash|otilde|ouml|para|plusmn|pound|quot|raquo|reg|sect|shy|sup1|sup2|sup3|szlig|thorn|times|uacute|ucirc|ugrave|uml|uuml|yacute|yen|yuml|#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+);?/g},r.namedReferences={xml:{entities:{"&lt;":"<","&gt;":">","&quot;":'"',"&apos;":"'","&amp;":"&"},characters:{"<":"&lt;",">":"&gt;",'"':"&quot;","'":"&apos;","&":"&amp;"}},html4:{entities:{"&apos;":"'","&nbsp":" ","&nbsp;":" ","&iexcl":"¡","&iexcl;":"¡","&cent":"¢","&cent;":"¢","&pound":"£","&pound;":"£","&curren":"¤","&curren;":"¤","&yen":"¥","&yen;":"¥","&brvbar":"¦","&brvbar;":"¦","&sect":"§","&sect;":"§","&uml":"¨","&uml;":"¨","&copy":"©","&copy;":"©","&ordf":"ª","&ordf;":"ª","&laquo":"«","&laquo;":"«","&not":"¬","&not;":"¬","&shy":"­","&shy;":"­","&reg":"®","&reg;":"®","&macr":"¯","&macr;":"¯","&deg":"°","&deg;":"°","&plusmn":"±","&plusmn;":"±","&sup2":"²","&sup2;":"²","&sup3":"³","&sup3;":"³","&acute":"´","&acute;":"´","&micro":"µ","&micro;":"µ","&para":"¶","&para;":"¶","&middot":"·","&middot;":"·","&cedil":"¸","&cedil;":"¸","&sup1":"¹","&sup1;":"¹","&ordm":"º","&ordm;":"º","&raquo":"»","&raquo;":"»","&frac14":"¼","&frac14;":"¼","&frac12":"½","&frac12;":"½","&frac34":"¾","&frac34;":"¾","&iquest":"¿","&iquest;":"¿","&Agrave":"À","&Agrave;":"À","&Aacute":"Á","&Aacute;":"Á","&Acirc":"Â","&Acirc;":"Â","&Atilde":"Ã","&Atilde;":"Ã","&Auml":"Ä","&Auml;":"Ä","&Aring":"Å","&Aring;":"Å","&AElig":"Æ","&AElig;":"Æ","&Ccedil":"Ç","&Ccedil;":"Ç","&Egrave":"È","&Egrave;":"È","&Eacute":"É","&Eacute;":"É","&Ecirc":"Ê","&Ecirc;":"Ê","&Euml":"Ë","&Euml;":"Ë","&Igrave":"Ì","&Igrave;":"Ì","&Iacute":"Í","&Iacute;":"Í","&Icirc":"Î","&Icirc;":"Î","&Iuml":"Ï","&Iuml;":"Ï","&ETH":"Ð","&ETH;":"Ð","&Ntilde":"Ñ","&Ntilde;":"Ñ","&Ograve":"Ò","&Ograve;":"Ò","&Oacute":"Ó","&Oacute;":"Ó","&Ocirc":"Ô","&Ocirc;":"Ô","&Otilde":"Õ","&Otilde;":"Õ","&Ouml":"Ö","&Ouml;":"Ö","&times":"×","&times;":"×","&Oslash":"Ø","&Oslash;":"Ø","&Ugrave":"Ù","&Ugrave;":"Ù","&Uacute":"Ú","&Uacute;":"Ú","&Ucirc":"Û","&Ucirc;":"Û","&Uuml":"Ü","&Uuml;":"Ü","&Yacute":"Ý","&Yacute;":"Ý","&THORN":"Þ","&THORN;":"Þ","&szlig":"ß","&szlig;":"ß","&agrave":"à","&agrave;":"à","&aacute":"á","&aacute;":"á","&acirc":"â","&acirc;":"â","&atilde":"ã","&atilde;":"ã","&auml":"ä","&auml;":"ä","&aring":"å","&aring;":"å","&aelig":"æ","&aelig;":"æ","&ccedil":"ç","&ccedil;":"ç","&egrave":"è","&egrave;":"è","&eacute":"é","&eacute;":"é","&ecirc":"ê","&ecirc;":"ê","&euml":"ë","&euml;":"ë","&igrave":"ì","&igrave;":"ì","&iacute":"í","&iacute;":"í","&icirc":"î","&icirc;":"î","&iuml":"ï","&iuml;":"ï","&eth":"ð","&eth;":"ð","&ntilde":"ñ","&ntilde;":"ñ","&ograve":"ò","&ograve;":"ò","&oacute":"ó","&oacute;":"ó","&ocirc":"ô","&ocirc;":"ô","&otilde":"õ","&otilde;":"õ","&ouml":"ö","&ouml;":"ö","&divide":"÷","&divide;":"÷","&oslash":"ø","&oslash;":"ø","&ugrave":"ù","&ugrave;":"ù","&uacute":"ú","&uacute;":"ú","&ucirc":"û","&ucirc;":"û","&uuml":"ü","&uuml;":"ü","&yacute":"ý","&yacute;":"ý","&thorn":"þ","&thorn;":"þ","&yuml":"ÿ","&yuml;":"ÿ","&quot":'"',"&quot;":'"',"&amp":"&","&amp;":"&","&lt":"<","&lt;":"<","&gt":">","&gt;":">","&OElig;":"Œ","&oelig;":"œ","&Scaron;":"Š","&scaron;":"š","&Yuml;":"Ÿ","&circ;":"ˆ","&tilde;":"˜","&ensp;":" ","&emsp;":" ","&thinsp;":" ","&zwnj;":"‌","&zwj;":"‍","&lrm;":"‎","&rlm;":"‏","&ndash;":"–","&mdash;":"—","&lsquo;":"‘","&rsquo;":"’","&sbquo;":"‚","&ldquo;":"“","&rdquo;":"”","&bdquo;":"„","&dagger;":"†","&Dagger;":"‡","&permil;":"‰","&lsaquo;":"‹","&rsaquo;":"›","&euro;":"€","&fnof;":"ƒ","&Alpha;":"Α","&Beta;":"Β","&Gamma;":"Γ","&Delta;":"Δ","&Epsilon;":"Ε","&Zeta;":"Ζ","&Eta;":"Η","&Theta;":"Θ","&Iota;":"Ι","&Kappa;":"Κ","&Lambda;":"Λ","&Mu;":"Μ","&Nu;":"Ν","&Xi;":"Ξ","&Omicron;":"Ο","&Pi;":"Π","&Rho;":"Ρ","&Sigma;":"Σ","&Tau;":"Τ","&Upsilon;":"Υ","&Phi;":"Φ","&Chi;":"Χ","&Psi;":"Ψ","&Omega;":"Ω","&alpha;":"α","&beta;":"β","&gamma;":"γ","&delta;":"δ","&epsilon;":"ε","&zeta;":"ζ","&eta;":"η","&theta;":"θ","&iota;":"ι","&kappa;":"κ","&lambda;":"λ","&mu;":"μ","&nu;":"ν","&xi;":"ξ","&omicron;":"ο","&pi;":"π","&rho;":"ρ","&sigmaf;":"ς","&sigma;":"σ","&tau;":"τ","&upsilon;":"υ","&phi;":"φ","&chi;":"χ","&psi;":"ψ","&omega;":"ω","&thetasym;":"ϑ","&upsih;":"ϒ","&piv;":"ϖ","&bull;":"•","&hellip;":"…","&prime;":"′","&Prime;":"″","&oline;":"‾","&frasl;":"⁄","&weierp;":"℘","&image;":"ℑ","&real;":"ℜ","&trade;":"™","&alefsym;":"ℵ","&larr;":"←","&uarr;":"↑","&rarr;":"→","&darr;":"↓","&harr;":"↔","&crarr;":"↵","&lArr;":"⇐","&uArr;":"⇑","&rArr;":"⇒","&dArr;":"⇓","&hArr;":"⇔","&forall;":"∀","&part;":"∂","&exist;":"∃","&empty;":"∅","&nabla;":"∇","&isin;":"∈","&notin;":"∉","&ni;":"∋","&prod;":"∏","&sum;":"∑","&minus;":"−","&lowast;":"∗","&radic;":"√","&prop;":"∝","&infin;":"∞","&ang;":"∠","&and;":"∧","&or;":"∨","&cap;":"∩","&cup;":"∪","&int;":"∫","&there4;":"∴","&sim;":"∼","&cong;":"≅","&asymp;":"≈","&ne;":"≠","&equiv;":"≡","&le;":"≤","&ge;":"≥","&sub;":"⊂","&sup;":"⊃","&nsub;":"⊄","&sube;":"⊆","&supe;":"⊇","&oplus;":"⊕","&otimes;":"⊗","&perp;":"⊥","&sdot;":"⋅","&lceil;":"⌈","&rceil;":"⌉","&lfloor;":"⌊","&rfloor;":"⌋","&lang;":"〈","&rang;":"〉","&loz;":"◊","&spades;":"♠","&clubs;":"♣","&hearts;":"♥","&diams;":"♦"},characters:{"'":"&apos;"," ":"&nbsp;","¡":"&iexcl;","¢":"&cent;","£":"&pound;","¤":"&curren;","¥":"&yen;","¦":"&brvbar;","§":"&sect;","¨":"&uml;","©":"&copy;",ª:"&ordf;","«":"&laquo;","¬":"&not;","­":"&shy;","®":"&reg;","¯":"&macr;","°":"&deg;","±":"&plusmn;","²":"&sup2;","³":"&sup3;","´":"&acute;",µ:"&micro;","¶":"&para;","·":"&middot;","¸":"&cedil;","¹":"&sup1;",º:"&ordm;","»":"&raquo;","¼":"&frac14;","½":"&frac12;","¾":"&frac34;","¿":"&iquest;",À:"&Agrave;",Á:"&Aacute;",Â:"&Acirc;",Ã:"&Atilde;",Ä:"&Auml;",Å:"&Aring;",Æ:"&AElig;",Ç:"&Ccedil;",È:"&Egrave;",É:"&Eacute;",Ê:"&Ecirc;",Ë:"&Euml;",Ì:"&Igrave;",Í:"&Iacute;",Î:"&Icirc;",Ï:"&Iuml;",Ð:"&ETH;",Ñ:"&Ntilde;",Ò:"&Ograve;",Ó:"&Oacute;",Ô:"&Ocirc;",Õ:"&Otilde;",Ö:"&Ouml;","×":"&times;",Ø:"&Oslash;",Ù:"&Ugrave;",Ú:"&Uacute;",Û:"&Ucirc;",Ü:"&Uuml;",Ý:"&Yacute;",Þ:"&THORN;",ß:"&szlig;",à:"&agrave;",á:"&aacute;",â:"&acirc;",ã:"&atilde;",ä:"&auml;",å:"&aring;",æ:"&aelig;",ç:"&ccedil;",è:"&egrave;",é:"&eacute;",ê:"&ecirc;",ë:"&euml;",ì:"&igrave;",í:"&iacute;",î:"&icirc;",ï:"&iuml;",ð:"&eth;",ñ:"&ntilde;",ò:"&ograve;",ó:"&oacute;",ô:"&ocirc;",õ:"&otilde;",ö:"&ouml;","÷":"&divide;",ø:"&oslash;",ù:"&ugrave;",ú:"&uacute;",û:"&ucirc;",ü:"&uuml;",ý:"&yacute;",þ:"&thorn;",ÿ:"&yuml;",'"':"&quot;","&":"&amp;","<":"&lt;",">":"&gt;",Œ:"&OElig;",œ:"&oelig;",Š:"&Scaron;",š:"&scaron;",Ÿ:"&Yuml;",ˆ:"&circ;","˜":"&tilde;"," ":"&ensp;"," ":"&emsp;"," ":"&thinsp;","‌":"&zwnj;","‍":"&zwj;","‎":"&lrm;","‏":"&rlm;","–":"&ndash;","—":"&mdash;","‘":"&lsquo;","’":"&rsquo;","‚":"&sbquo;","“":"&ldquo;","”":"&rdquo;","„":"&bdquo;","†":"&dagger;","‡":"&Dagger;","‰":"&permil;","‹":"&lsaquo;","›":"&rsaquo;","€":"&euro;",ƒ:"&fnof;",Α:"&Alpha;",Β:"&Beta;",Γ:"&Gamma;",Δ:"&Delta;",Ε:"&Epsilon;",Ζ:"&Zeta;",Η:"&Eta;",Θ:"&Theta;",Ι:"&Iota;",Κ:"&Kappa;",Λ:"&Lambda;",Μ:"&Mu;",Ν:"&Nu;",Ξ:"&Xi;",Ο:"&Omicron;",Π:"&Pi;",Ρ:"&Rho;",Σ:"&Sigma;",Τ:"&Tau;",Υ:"&Upsilon;",Φ:"&Phi;",Χ:"&Chi;",Ψ:"&Psi;",Ω:"&Omega;",α:"&alpha;",β:"&beta;",γ:"&gamma;",δ:"&delta;",ε:"&epsilon;",ζ:"&zeta;",η:"&eta;",θ:"&theta;",ι:"&iota;",κ:"&kappa;",λ:"&lambda;",μ:"&mu;",ν:"&nu;",ξ:"&xi;",ο:"&omicron;",π:"&pi;",ρ:"&rho;",ς:"&sigmaf;",σ:"&sigma;",τ:"&tau;",υ:"&upsilon;",φ:"&phi;",χ:"&chi;",ψ:"&psi;",ω:"&omega;",ϑ:"&thetasym;",ϒ:"&upsih;",ϖ:"&piv;","•":"&bull;","…":"&hellip;","′":"&prime;","″":"&Prime;","‾":"&oline;","⁄":"&frasl;",℘:"&weierp;",ℑ:"&image;",ℜ:"&real;","™":"&trade;",ℵ:"&alefsym;","←":"&larr;","↑":"&uarr;","→":"&rarr;","↓":"&darr;","↔":"&harr;","↵":"&crarr;","⇐":"&lArr;","⇑":"&uArr;","⇒":"&rArr;","⇓":"&dArr;","⇔":"&hArr;","∀":"&forall;","∂":"&part;","∃":"&exist;","∅":"&empty;","∇":"&nabla;","∈":"&isin;","∉":"&notin;","∋":"&ni;","∏":"&prod;","∑":"&sum;","−":"&minus;","∗":"&lowast;","√":"&radic;","∝":"&prop;","∞":"&infin;","∠":"&ang;","∧":"&and;","∨":"&or;","∩":"&cap;","∪":"&cup;","∫":"&int;","∴":"&there4;","∼":"&sim;","≅":"&cong;","≈":"&asymp;","≠":"&ne;","≡":"&equiv;","≤":"&le;","≥":"&ge;","⊂":"&sub;","⊃":"&sup;","⊄":"&nsub;","⊆":"&sube;","⊇":"&supe;","⊕":"&oplus;","⊗":"&otimes;","⊥":"&perp;","⋅":"&sdot;","⌈":"&lceil;","⌉":"&rceil;","⌊":"&lfloor;","⌋":"&rfloor;","〈":"&lang;","〉":"&rang;","◊":"&loz;","♠":"&spades;","♣":"&clubs;","♥":"&hearts;","♦":"&diams;"}},html5:{entities:{"&AElig":"Æ","&AElig;":"Æ","&AMP":"&","&AMP;":"&","&Aacute":"Á","&Aacute;":"Á","&Abreve;":"Ă","&Acirc":"Â","&Acirc;":"Â","&Acy;":"А","&Afr;":"𝔄","&Agrave":"À","&Agrave;":"À","&Alpha;":"Α","&Amacr;":"Ā","&And;":"⩓","&Aogon;":"Ą","&Aopf;":"𝔸","&ApplyFunction;":"⁡","&Aring":"Å","&Aring;":"Å","&Ascr;":"𝒜","&Assign;":"≔","&Atilde":"Ã","&Atilde;":"Ã","&Auml":"Ä","&Auml;":"Ä","&Backslash;":"∖","&Barv;":"⫧","&Barwed;":"⌆","&Bcy;":"Б","&Because;":"∵","&Bernoullis;":"ℬ","&Beta;":"Β","&Bfr;":"𝔅","&Bopf;":"𝔹","&Breve;":"˘","&Bscr;":"ℬ","&Bumpeq;":"≎","&CHcy;":"Ч","&COPY":"©","&COPY;":"©","&Cacute;":"Ć","&Cap;":"⋒","&CapitalDifferentialD;":"ⅅ","&Cayleys;":"ℭ","&Ccaron;":"Č","&Ccedil":"Ç","&Ccedil;":"Ç","&Ccirc;":"Ĉ","&Cconint;":"∰","&Cdot;":"Ċ","&Cedilla;":"¸","&CenterDot;":"·","&Cfr;":"ℭ","&Chi;":"Χ","&CircleDot;":"⊙","&CircleMinus;":"⊖","&CirclePlus;":"⊕","&CircleTimes;":"⊗","&ClockwiseContourIntegral;":"∲","&CloseCurlyDoubleQuote;":"”","&CloseCurlyQuote;":"’","&Colon;":"∷","&Colone;":"⩴","&Congruent;":"≡","&Conint;":"∯","&ContourIntegral;":"∮","&Copf;":"ℂ","&Coproduct;":"∐","&CounterClockwiseContourIntegral;":"∳","&Cross;":"⨯","&Cscr;":"𝒞","&Cup;":"⋓","&CupCap;":"≍","&DD;":"ⅅ","&DDotrahd;":"⤑","&DJcy;":"Ђ","&DScy;":"Ѕ","&DZcy;":"Џ","&Dagger;":"‡","&Darr;":"↡","&Dashv;":"⫤","&Dcaron;":"Ď","&Dcy;":"Д","&Del;":"∇","&Delta;":"Δ","&Dfr;":"𝔇","&DiacriticalAcute;":"´","&DiacriticalDot;":"˙","&DiacriticalDoubleAcute;":"˝","&DiacriticalGrave;":"`","&DiacriticalTilde;":"˜","&Diamond;":"⋄","&DifferentialD;":"ⅆ","&Dopf;":"𝔻","&Dot;":"¨","&DotDot;":"⃜","&DotEqual;":"≐","&DoubleContourIntegral;":"∯","&DoubleDot;":"¨","&DoubleDownArrow;":"⇓","&DoubleLeftArrow;":"⇐","&DoubleLeftRightArrow;":"⇔","&DoubleLeftTee;":"⫤","&DoubleLongLeftArrow;":"⟸","&DoubleLongLeftRightArrow;":"⟺","&DoubleLongRightArrow;":"⟹","&DoubleRightArrow;":"⇒","&DoubleRightTee;":"⊨","&DoubleUpArrow;":"⇑","&DoubleUpDownArrow;":"⇕","&DoubleVerticalBar;":"∥","&DownArrow;":"↓","&DownArrowBar;":"⤓","&DownArrowUpArrow;":"⇵","&DownBreve;":"̑","&DownLeftRightVector;":"⥐","&DownLeftTeeVector;":"⥞","&DownLeftVector;":"↽","&DownLeftVectorBar;":"⥖","&DownRightTeeVector;":"⥟","&DownRightVector;":"⇁","&DownRightVectorBar;":"⥗","&DownTee;":"⊤","&DownTeeArrow;":"↧","&Downarrow;":"⇓","&Dscr;":"𝒟","&Dstrok;":"Đ","&ENG;":"Ŋ","&ETH":"Ð","&ETH;":"Ð","&Eacute":"É","&Eacute;":"É","&Ecaron;":"Ě","&Ecirc":"Ê","&Ecirc;":"Ê","&Ecy;":"Э","&Edot;":"Ė","&Efr;":"𝔈","&Egrave":"È","&Egrave;":"È","&Element;":"∈","&Emacr;":"Ē","&EmptySmallSquare;":"◻","&EmptyVerySmallSquare;":"▫","&Eogon;":"Ę","&Eopf;":"𝔼","&Epsilon;":"Ε","&Equal;":"⩵","&EqualTilde;":"≂","&Equilibrium;":"⇌","&Escr;":"ℰ","&Esim;":"⩳","&Eta;":"Η","&Euml":"Ë","&Euml;":"Ë","&Exists;":"∃","&ExponentialE;":"ⅇ","&Fcy;":"Ф","&Ffr;":"𝔉","&FilledSmallSquare;":"◼","&FilledVerySmallSquare;":"▪","&Fopf;":"𝔽","&ForAll;":"∀","&Fouriertrf;":"ℱ","&Fscr;":"ℱ","&GJcy;":"Ѓ","&GT":">","&GT;":">","&Gamma;":"Γ","&Gammad;":"Ϝ","&Gbreve;":"Ğ","&Gcedil;":"Ģ","&Gcirc;":"Ĝ","&Gcy;":"Г","&Gdot;":"Ġ","&Gfr;":"𝔊","&Gg;":"⋙","&Gopf;":"𝔾","&GreaterEqual;":"≥","&GreaterEqualLess;":"⋛","&GreaterFullEqual;":"≧","&GreaterGreater;":"⪢","&GreaterLess;":"≷","&GreaterSlantEqual;":"⩾","&GreaterTilde;":"≳","&Gscr;":"𝒢","&Gt;":"≫","&HARDcy;":"Ъ","&Hacek;":"ˇ","&Hat;":"^","&Hcirc;":"Ĥ","&Hfr;":"ℌ","&HilbertSpace;":"ℋ","&Hopf;":"ℍ","&HorizontalLine;":"─","&Hscr;":"ℋ","&Hstrok;":"Ħ","&HumpDownHump;":"≎","&HumpEqual;":"≏","&IEcy;":"Е","&IJlig;":"Ĳ","&IOcy;":"Ё","&Iacute":"Í","&Iacute;":"Í","&Icirc":"Î","&Icirc;":"Î","&Icy;":"И","&Idot;":"İ","&Ifr;":"ℑ","&Igrave":"Ì","&Igrave;":"Ì","&Im;":"ℑ","&Imacr;":"Ī","&ImaginaryI;":"ⅈ","&Implies;":"⇒","&Int;":"∬","&Integral;":"∫","&Intersection;":"⋂","&InvisibleComma;":"⁣","&InvisibleTimes;":"⁢","&Iogon;":"Į","&Iopf;":"𝕀","&Iota;":"Ι","&Iscr;":"ℐ","&Itilde;":"Ĩ","&Iukcy;":"І","&Iuml":"Ï","&Iuml;":"Ï","&Jcirc;":"Ĵ","&Jcy;":"Й","&Jfr;":"𝔍","&Jopf;":"𝕁","&Jscr;":"𝒥","&Jsercy;":"Ј","&Jukcy;":"Є","&KHcy;":"Х","&KJcy;":"Ќ","&Kappa;":"Κ","&Kcedil;":"Ķ","&Kcy;":"К","&Kfr;":"𝔎","&Kopf;":"𝕂","&Kscr;":"𝒦","&LJcy;":"Љ","&LT":"<","&LT;":"<","&Lacute;":"Ĺ","&Lambda;":"Λ","&Lang;":"⟪","&Laplacetrf;":"ℒ","&Larr;":"↞","&Lcaron;":"Ľ","&Lcedil;":"Ļ","&Lcy;":"Л","&LeftAngleBracket;":"⟨","&LeftArrow;":"←","&LeftArrowBar;":"⇤","&LeftArrowRightArrow;":"⇆","&LeftCeiling;":"⌈","&LeftDoubleBracket;":"⟦","&LeftDownTeeVector;":"⥡","&LeftDownVector;":"⇃","&LeftDownVectorBar;":"⥙","&LeftFloor;":"⌊","&LeftRightArrow;":"↔","&LeftRightVector;":"⥎","&LeftTee;":"⊣","&LeftTeeArrow;":"↤","&LeftTeeVector;":"⥚","&LeftTriangle;":"⊲","&LeftTriangleBar;":"⧏","&LeftTriangleEqual;":"⊴","&LeftUpDownVector;":"⥑","&LeftUpTeeVector;":"⥠","&LeftUpVector;":"↿","&LeftUpVectorBar;":"⥘","&LeftVector;":"↼","&LeftVectorBar;":"⥒","&Leftarrow;":"⇐","&Leftrightarrow;":"⇔","&LessEqualGreater;":"⋚","&LessFullEqual;":"≦","&LessGreater;":"≶","&LessLess;":"⪡","&LessSlantEqual;":"⩽","&LessTilde;":"≲","&Lfr;":"𝔏","&Ll;":"⋘","&Lleftarrow;":"⇚","&Lmidot;":"Ŀ","&LongLeftArrow;":"⟵","&LongLeftRightArrow;":"⟷","&LongRightArrow;":"⟶","&Longleftarrow;":"⟸","&Longleftrightarrow;":"⟺","&Longrightarrow;":"⟹","&Lopf;":"𝕃","&LowerLeftArrow;":"↙","&LowerRightArrow;":"↘","&Lscr;":"ℒ","&Lsh;":"↰","&Lstrok;":"Ł","&Lt;":"≪","&Map;":"⤅","&Mcy;":"М","&MediumSpace;":" ","&Mellintrf;":"ℳ","&Mfr;":"𝔐","&MinusPlus;":"∓","&Mopf;":"𝕄","&Mscr;":"ℳ","&Mu;":"Μ","&NJcy;":"Њ","&Nacute;":"Ń","&Ncaron;":"Ň","&Ncedil;":"Ņ","&Ncy;":"Н","&NegativeMediumSpace;":"​","&NegativeThickSpace;":"​","&NegativeThinSpace;":"​","&NegativeVeryThinSpace;":"​","&NestedGreaterGreater;":"≫","&NestedLessLess;":"≪","&NewLine;":"\n","&Nfr;":"𝔑","&NoBreak;":"⁠","&NonBreakingSpace;":" ","&Nopf;":"ℕ","&Not;":"⫬","&NotCongruent;":"≢","&NotCupCap;":"≭","&NotDoubleVerticalBar;":"∦","&NotElement;":"∉","&NotEqual;":"≠","&NotEqualTilde;":"≂̸","&NotExists;":"∄","&NotGreater;":"≯","&NotGreaterEqual;":"≱","&NotGreaterFullEqual;":"≧̸","&NotGreaterGreater;":"≫̸","&NotGreaterLess;":"≹","&NotGreaterSlantEqual;":"⩾̸","&NotGreaterTilde;":"≵","&NotHumpDownHump;":"≎̸","&NotHumpEqual;":"≏̸","&NotLeftTriangle;":"⋪","&NotLeftTriangleBar;":"⧏̸","&NotLeftTriangleEqual;":"⋬","&NotLess;":"≮","&NotLessEqual;":"≰","&NotLessGreater;":"≸","&NotLessLess;":"≪̸","&NotLessSlantEqual;":"⩽̸","&NotLessTilde;":"≴","&NotNestedGreaterGreater;":"⪢̸","&NotNestedLessLess;":"⪡̸","&NotPrecedes;":"⊀","&NotPrecedesEqual;":"⪯̸","&NotPrecedesSlantEqual;":"⋠","&NotReverseElement;":"∌","&NotRightTriangle;":"⋫","&NotRightTriangleBar;":"⧐̸","&NotRightTriangleEqual;":"⋭","&NotSquareSubset;":"⊏̸","&NotSquareSubsetEqual;":"⋢","&NotSquareSuperset;":"⊐̸","&NotSquareSupersetEqual;":"⋣","&NotSubset;":"⊂⃒","&NotSubsetEqual;":"⊈","&NotSucceeds;":"⊁","&NotSucceedsEqual;":"⪰̸","&NotSucceedsSlantEqual;":"⋡","&NotSucceedsTilde;":"≿̸","&NotSuperset;":"⊃⃒","&NotSupersetEqual;":"⊉","&NotTilde;":"≁","&NotTildeEqual;":"≄","&NotTildeFullEqual;":"≇","&NotTildeTilde;":"≉","&NotVerticalBar;":"∤","&Nscr;":"𝒩","&Ntilde":"Ñ","&Ntilde;":"Ñ","&Nu;":"Ν","&OElig;":"Œ","&Oacute":"Ó","&Oacute;":"Ó","&Ocirc":"Ô","&Ocirc;":"Ô","&Ocy;":"О","&Odblac;":"Ő","&Ofr;":"𝔒","&Ograve":"Ò","&Ograve;":"Ò","&Omacr;":"Ō","&Omega;":"Ω","&Omicron;":"Ο","&Oopf;":"𝕆","&OpenCurlyDoubleQuote;":"“","&OpenCurlyQuote;":"‘","&Or;":"⩔","&Oscr;":"𝒪","&Oslash":"Ø","&Oslash;":"Ø","&Otilde":"Õ","&Otilde;":"Õ","&Otimes;":"⨷","&Ouml":"Ö","&Ouml;":"Ö","&OverBar;":"‾","&OverBrace;":"⏞","&OverBracket;":"⎴","&OverParenthesis;":"⏜","&PartialD;":"∂","&Pcy;":"П","&Pfr;":"𝔓","&Phi;":"Φ","&Pi;":"Π","&PlusMinus;":"±","&Poincareplane;":"ℌ","&Popf;":"ℙ","&Pr;":"⪻","&Precedes;":"≺","&PrecedesEqual;":"⪯","&PrecedesSlantEqual;":"≼","&PrecedesTilde;":"≾","&Prime;":"″","&Product;":"∏","&Proportion;":"∷","&Proportional;":"∝","&Pscr;":"𝒫","&Psi;":"Ψ","&QUOT":'"',"&QUOT;":'"',"&Qfr;":"𝔔","&Qopf;":"ℚ","&Qscr;":"𝒬","&RBarr;":"⤐","&REG":"®","&REG;":"®","&Racute;":"Ŕ","&Rang;":"⟫","&Rarr;":"↠","&Rarrtl;":"⤖","&Rcaron;":"Ř","&Rcedil;":"Ŗ","&Rcy;":"Р","&Re;":"ℜ","&ReverseElement;":"∋","&ReverseEquilibrium;":"⇋","&ReverseUpEquilibrium;":"⥯","&Rfr;":"ℜ","&Rho;":"Ρ","&RightAngleBracket;":"⟩","&RightArrow;":"→","&RightArrowBar;":"⇥","&RightArrowLeftArrow;":"⇄","&RightCeiling;":"⌉","&RightDoubleBracket;":"⟧","&RightDownTeeVector;":"⥝","&RightDownVector;":"⇂","&RightDownVectorBar;":"⥕","&RightFloor;":"⌋","&RightTee;":"⊢","&RightTeeArrow;":"↦","&RightTeeVector;":"⥛","&RightTriangle;":"⊳","&RightTriangleBar;":"⧐","&RightTriangleEqual;":"⊵","&RightUpDownVector;":"⥏","&RightUpTeeVector;":"⥜","&RightUpVector;":"↾","&RightUpVectorBar;":"⥔","&RightVector;":"⇀","&RightVectorBar;":"⥓","&Rightarrow;":"⇒","&Ropf;":"ℝ","&RoundImplies;":"⥰","&Rrightarrow;":"⇛","&Rscr;":"ℛ","&Rsh;":"↱","&RuleDelayed;":"⧴","&SHCHcy;":"Щ","&SHcy;":"Ш","&SOFTcy;":"Ь","&Sacute;":"Ś","&Sc;":"⪼","&Scaron;":"Š","&Scedil;":"Ş","&Scirc;":"Ŝ","&Scy;":"С","&Sfr;":"𝔖","&ShortDownArrow;":"↓","&ShortLeftArrow;":"←","&ShortRightArrow;":"→","&ShortUpArrow;":"↑","&Sigma;":"Σ","&SmallCircle;":"∘","&Sopf;":"𝕊","&Sqrt;":"√","&Square;":"□","&SquareIntersection;":"⊓","&SquareSubset;":"⊏","&SquareSubsetEqual;":"⊑","&SquareSuperset;":"⊐","&SquareSupersetEqual;":"⊒","&SquareUnion;":"⊔","&Sscr;":"𝒮","&Star;":"⋆","&Sub;":"⋐","&Subset;":"⋐","&SubsetEqual;":"⊆","&Succeeds;":"≻","&SucceedsEqual;":"⪰","&SucceedsSlantEqual;":"≽","&SucceedsTilde;":"≿","&SuchThat;":"∋","&Sum;":"∑","&Sup;":"⋑","&Superset;":"⊃","&SupersetEqual;":"⊇","&Supset;":"⋑","&THORN":"Þ","&THORN;":"Þ","&TRADE;":"™","&TSHcy;":"Ћ","&TScy;":"Ц","&Tab;":"\t","&Tau;":"Τ","&Tcaron;":"Ť","&Tcedil;":"Ţ","&Tcy;":"Т","&Tfr;":"𝔗","&Therefore;":"∴","&Theta;":"Θ","&ThickSpace;":"  ","&ThinSpace;":" ","&Tilde;":"∼","&TildeEqual;":"≃","&TildeFullEqual;":"≅","&TildeTilde;":"≈","&Topf;":"𝕋","&TripleDot;":"⃛","&Tscr;":"𝒯","&Tstrok;":"Ŧ","&Uacute":"Ú","&Uacute;":"Ú","&Uarr;":"↟","&Uarrocir;":"⥉","&Ubrcy;":"Ў","&Ubreve;":"Ŭ","&Ucirc":"Û","&Ucirc;":"Û","&Ucy;":"У","&Udblac;":"Ű","&Ufr;":"𝔘","&Ugrave":"Ù","&Ugrave;":"Ù","&Umacr;":"Ū","&UnderBar;":"_","&UnderBrace;":"⏟","&UnderBracket;":"⎵","&UnderParenthesis;":"⏝","&Union;":"⋃","&UnionPlus;":"⊎","&Uogon;":"Ų","&Uopf;":"𝕌","&UpArrow;":"↑","&UpArrowBar;":"⤒","&UpArrowDownArrow;":"⇅","&UpDownArrow;":"↕","&UpEquilibrium;":"⥮","&UpTee;":"⊥","&UpTeeArrow;":"↥","&Uparrow;":"⇑","&Updownarrow;":"⇕","&UpperLeftArrow;":"↖","&UpperRightArrow;":"↗","&Upsi;":"ϒ","&Upsilon;":"Υ","&Uring;":"Ů","&Uscr;":"𝒰","&Utilde;":"Ũ","&Uuml":"Ü","&Uuml;":"Ü","&VDash;":"⊫","&Vbar;":"⫫","&Vcy;":"В","&Vdash;":"⊩","&Vdashl;":"⫦","&Vee;":"⋁","&Verbar;":"‖","&Vert;":"‖","&VerticalBar;":"∣","&VerticalLine;":"|","&VerticalSeparator;":"❘","&VerticalTilde;":"≀","&VeryThinSpace;":" ","&Vfr;":"𝔙","&Vopf;":"𝕍","&Vscr;":"𝒱","&Vvdash;":"⊪","&Wcirc;":"Ŵ","&Wedge;":"⋀","&Wfr;":"𝔚","&Wopf;":"𝕎","&Wscr;":"𝒲","&Xfr;":"𝔛","&Xi;":"Ξ","&Xopf;":"𝕏","&Xscr;":"𝒳","&YAcy;":"Я","&YIcy;":"Ї","&YUcy;":"Ю","&Yacute":"Ý","&Yacute;":"Ý","&Ycirc;":"Ŷ","&Ycy;":"Ы","&Yfr;":"𝔜","&Yopf;":"𝕐","&Yscr;":"𝒴","&Yuml;":"Ÿ","&ZHcy;":"Ж","&Zacute;":"Ź","&Zcaron;":"Ž","&Zcy;":"З","&Zdot;":"Ż","&ZeroWidthSpace;":"​","&Zeta;":"Ζ","&Zfr;":"ℨ","&Zopf;":"ℤ","&Zscr;":"𝒵","&aacute":"á","&aacute;":"á","&abreve;":"ă","&ac;":"∾","&acE;":"∾̳","&acd;":"∿","&acirc":"â","&acirc;":"â","&acute":"´","&acute;":"´","&acy;":"а","&aelig":"æ","&aelig;":"æ","&af;":"⁡","&afr;":"𝔞","&agrave":"à","&agrave;":"à","&alefsym;":"ℵ","&aleph;":"ℵ","&alpha;":"α","&amacr;":"ā","&amalg;":"⨿","&amp":"&","&amp;":"&","&and;":"∧","&andand;":"⩕","&andd;":"⩜","&andslope;":"⩘","&andv;":"⩚","&ang;":"∠","&ange;":"⦤","&angle;":"∠","&angmsd;":"∡","&angmsdaa;":"⦨","&angmsdab;":"⦩","&angmsdac;":"⦪","&angmsdad;":"⦫","&angmsdae;":"⦬","&angmsdaf;":"⦭","&angmsdag;":"⦮","&angmsdah;":"⦯","&angrt;":"∟","&angrtvb;":"⊾","&angrtvbd;":"⦝","&angsph;":"∢","&angst;":"Å","&angzarr;":"⍼","&aogon;":"ą","&aopf;":"𝕒","&ap;":"≈","&apE;":"⩰","&apacir;":"⩯","&ape;":"≊","&apid;":"≋","&apos;":"'","&approx;":"≈","&approxeq;":"≊","&aring":"å","&aring;":"å","&ascr;":"𝒶","&ast;":"*","&asymp;":"≈","&asympeq;":"≍","&atilde":"ã","&atilde;":"ã","&auml":"ä","&auml;":"ä","&awconint;":"∳","&awint;":"⨑","&bNot;":"⫭","&backcong;":"≌","&backepsilon;":"϶","&backprime;":"‵","&backsim;":"∽","&backsimeq;":"⋍","&barvee;":"⊽","&barwed;":"⌅","&barwedge;":"⌅","&bbrk;":"⎵","&bbrktbrk;":"⎶","&bcong;":"≌","&bcy;":"б","&bdquo;":"„","&becaus;":"∵","&because;":"∵","&bemptyv;":"⦰","&bepsi;":"϶","&bernou;":"ℬ","&beta;":"β","&beth;":"ℶ","&between;":"≬","&bfr;":"𝔟","&bigcap;":"⋂","&bigcirc;":"◯","&bigcup;":"⋃","&bigodot;":"⨀","&bigoplus;":"⨁","&bigotimes;":"⨂","&bigsqcup;":"⨆","&bigstar;":"★","&bigtriangledown;":"▽","&bigtriangleup;":"△","&biguplus;":"⨄","&bigvee;":"⋁","&bigwedge;":"⋀","&bkarow;":"⤍","&blacklozenge;":"⧫","&blacksquare;":"▪","&blacktriangle;":"▴","&blacktriangledown;":"▾","&blacktriangleleft;":"◂","&blacktriangleright;":"▸","&blank;":"␣","&blk12;":"▒","&blk14;":"░","&blk34;":"▓","&block;":"█","&bne;":"=⃥","&bnequiv;":"≡⃥","&bnot;":"⌐","&bopf;":"𝕓","&bot;":"⊥","&bottom;":"⊥","&bowtie;":"⋈","&boxDL;":"╗","&boxDR;":"╔","&boxDl;":"╖","&boxDr;":"╓","&boxH;":"═","&boxHD;":"╦","&boxHU;":"╩","&boxHd;":"╤","&boxHu;":"╧","&boxUL;":"╝","&boxUR;":"╚","&boxUl;":"╜","&boxUr;":"╙","&boxV;":"║","&boxVH;":"╬","&boxVL;":"╣","&boxVR;":"╠","&boxVh;":"╫","&boxVl;":"╢","&boxVr;":"╟","&boxbox;":"⧉","&boxdL;":"╕","&boxdR;":"╒","&boxdl;":"┐","&boxdr;":"┌","&boxh;":"─","&boxhD;":"╥","&boxhU;":"╨","&boxhd;":"┬","&boxhu;":"┴","&boxminus;":"⊟","&boxplus;":"⊞","&boxtimes;":"⊠","&boxuL;":"╛","&boxuR;":"╘","&boxul;":"┘","&boxur;":"└","&boxv;":"│","&boxvH;":"╪","&boxvL;":"╡","&boxvR;":"╞","&boxvh;":"┼","&boxvl;":"┤","&boxvr;":"├","&bprime;":"‵","&breve;":"˘","&brvbar":"¦","&brvbar;":"¦","&bscr;":"𝒷","&bsemi;":"⁏","&bsim;":"∽","&bsime;":"⋍","&bsol;":"\\","&bsolb;":"⧅","&bsolhsub;":"⟈","&bull;":"•","&bullet;":"•","&bump;":"≎","&bumpE;":"⪮","&bumpe;":"≏","&bumpeq;":"≏","&cacute;":"ć","&cap;":"∩","&capand;":"⩄","&capbrcup;":"⩉","&capcap;":"⩋","&capcup;":"⩇","&capdot;":"⩀","&caps;":"∩︀","&caret;":"⁁","&caron;":"ˇ","&ccaps;":"⩍","&ccaron;":"č","&ccedil":"ç","&ccedil;":"ç","&ccirc;":"ĉ","&ccups;":"⩌","&ccupssm;":"⩐","&cdot;":"ċ","&cedil":"¸","&cedil;":"¸","&cemptyv;":"⦲","&cent":"¢","&cent;":"¢","&centerdot;":"·","&cfr;":"𝔠","&chcy;":"ч","&check;":"✓","&checkmark;":"✓","&chi;":"χ","&cir;":"○","&cirE;":"⧃","&circ;":"ˆ","&circeq;":"≗","&circlearrowleft;":"↺","&circlearrowright;":"↻","&circledR;":"®","&circledS;":"Ⓢ","&circledast;":"⊛","&circledcirc;":"⊚","&circleddash;":"⊝","&cire;":"≗","&cirfnint;":"⨐","&cirmid;":"⫯","&cirscir;":"⧂","&clubs;":"♣","&clubsuit;":"♣","&colon;":":","&colone;":"≔","&coloneq;":"≔","&comma;":",","&commat;":"@","&comp;":"∁","&compfn;":"∘","&complement;":"∁","&complexes;":"ℂ","&cong;":"≅","&congdot;":"⩭","&conint;":"∮","&copf;":"𝕔","&coprod;":"∐","&copy":"©","&copy;":"©","&copysr;":"℗","&crarr;":"↵","&cross;":"✗","&cscr;":"𝒸","&csub;":"⫏","&csube;":"⫑","&csup;":"⫐","&csupe;":"⫒","&ctdot;":"⋯","&cudarrl;":"⤸","&cudarrr;":"⤵","&cuepr;":"⋞","&cuesc;":"⋟","&cularr;":"↶","&cularrp;":"⤽","&cup;":"∪","&cupbrcap;":"⩈","&cupcap;":"⩆","&cupcup;":"⩊","&cupdot;":"⊍","&cupor;":"⩅","&cups;":"∪︀","&curarr;":"↷","&curarrm;":"⤼","&curlyeqprec;":"⋞","&curlyeqsucc;":"⋟","&curlyvee;":"⋎","&curlywedge;":"⋏","&curren":"¤","&curren;":"¤","&curvearrowleft;":"↶","&curvearrowright;":"↷","&cuvee;":"⋎","&cuwed;":"⋏","&cwconint;":"∲","&cwint;":"∱","&cylcty;":"⌭","&dArr;":"⇓","&dHar;":"⥥","&dagger;":"†","&daleth;":"ℸ","&darr;":"↓","&dash;":"‐","&dashv;":"⊣","&dbkarow;":"⤏","&dblac;":"˝","&dcaron;":"ď","&dcy;":"д","&dd;":"ⅆ","&ddagger;":"‡","&ddarr;":"⇊","&ddotseq;":"⩷","&deg":"°","&deg;":"°","&delta;":"δ","&demptyv;":"⦱","&dfisht;":"⥿","&dfr;":"𝔡","&dharl;":"⇃","&dharr;":"⇂","&diam;":"⋄","&diamond;":"⋄","&diamondsuit;":"♦","&diams;":"♦","&die;":"¨","&digamma;":"ϝ","&disin;":"⋲","&div;":"÷","&divide":"÷","&divide;":"÷","&divideontimes;":"⋇","&divonx;":"⋇","&djcy;":"ђ","&dlcorn;":"⌞","&dlcrop;":"⌍","&dollar;":"$","&dopf;":"𝕕","&dot;":"˙","&doteq;":"≐","&doteqdot;":"≑","&dotminus;":"∸","&dotplus;":"∔","&dotsquare;":"⊡","&doublebarwedge;":"⌆","&downarrow;":"↓","&downdownarrows;":"⇊","&downharpoonleft;":"⇃","&downharpoonright;":"⇂","&drbkarow;":"⤐","&drcorn;":"⌟","&drcrop;":"⌌","&dscr;":"𝒹","&dscy;":"ѕ","&dsol;":"⧶","&dstrok;":"đ","&dtdot;":"⋱","&dtri;":"▿","&dtrif;":"▾","&duarr;":"⇵","&duhar;":"⥯","&dwangle;":"⦦","&dzcy;":"џ","&dzigrarr;":"⟿","&eDDot;":"⩷","&eDot;":"≑","&eacute":"é","&eacute;":"é","&easter;":"⩮","&ecaron;":"ě","&ecir;":"≖","&ecirc":"ê","&ecirc;":"ê","&ecolon;":"≕","&ecy;":"э","&edot;":"ė","&ee;":"ⅇ","&efDot;":"≒","&efr;":"𝔢","&eg;":"⪚","&egrave":"è","&egrave;":"è","&egs;":"⪖","&egsdot;":"⪘","&el;":"⪙","&elinters;":"⏧","&ell;":"ℓ","&els;":"⪕","&elsdot;":"⪗","&emacr;":"ē","&empty;":"∅","&emptyset;":"∅","&emptyv;":"∅","&emsp13;":" ","&emsp14;":" ","&emsp;":" ","&eng;":"ŋ","&ensp;":" ","&eogon;":"ę","&eopf;":"𝕖","&epar;":"⋕","&eparsl;":"⧣","&eplus;":"⩱","&epsi;":"ε","&epsilon;":"ε","&epsiv;":"ϵ","&eqcirc;":"≖","&eqcolon;":"≕","&eqsim;":"≂","&eqslantgtr;":"⪖","&eqslantless;":"⪕","&equals;":"=","&equest;":"≟","&equiv;":"≡","&equivDD;":"⩸","&eqvparsl;":"⧥","&erDot;":"≓","&erarr;":"⥱","&escr;":"ℯ","&esdot;":"≐","&esim;":"≂","&eta;":"η","&eth":"ð","&eth;":"ð","&euml":"ë","&euml;":"ë","&euro;":"€","&excl;":"!","&exist;":"∃","&expectation;":"ℰ","&exponentiale;":"ⅇ","&fallingdotseq;":"≒","&fcy;":"ф","&female;":"♀","&ffilig;":"ﬃ","&fflig;":"ﬀ","&ffllig;":"ﬄ","&ffr;":"𝔣","&filig;":"ﬁ","&fjlig;":"fj","&flat;":"♭","&fllig;":"ﬂ","&fltns;":"▱","&fnof;":"ƒ","&fopf;":"𝕗","&forall;":"∀","&fork;":"⋔","&forkv;":"⫙","&fpartint;":"⨍","&frac12":"½","&frac12;":"½","&frac13;":"⅓","&frac14":"¼","&frac14;":"¼","&frac15;":"⅕","&frac16;":"⅙","&frac18;":"⅛","&frac23;":"⅔","&frac25;":"⅖","&frac34":"¾","&frac34;":"¾","&frac35;":"⅗","&frac38;":"⅜","&frac45;":"⅘","&frac56;":"⅚","&frac58;":"⅝","&frac78;":"⅞","&frasl;":"⁄","&frown;":"⌢","&fscr;":"𝒻","&gE;":"≧","&gEl;":"⪌","&gacute;":"ǵ","&gamma;":"γ","&gammad;":"ϝ","&gap;":"⪆","&gbreve;":"ğ","&gcirc;":"ĝ","&gcy;":"г","&gdot;":"ġ","&ge;":"≥","&gel;":"⋛","&geq;":"≥","&geqq;":"≧","&geqslant;":"⩾","&ges;":"⩾","&gescc;":"⪩","&gesdot;":"⪀","&gesdoto;":"⪂","&gesdotol;":"⪄","&gesl;":"⋛︀","&gesles;":"⪔","&gfr;":"𝔤","&gg;":"≫","&ggg;":"⋙","&gimel;":"ℷ","&gjcy;":"ѓ","&gl;":"≷","&glE;":"⪒","&gla;":"⪥","&glj;":"⪤","&gnE;":"≩","&gnap;":"⪊","&gnapprox;":"⪊","&gne;":"⪈","&gneq;":"⪈","&gneqq;":"≩","&gnsim;":"⋧","&gopf;":"𝕘","&grave;":"`","&gscr;":"ℊ","&gsim;":"≳","&gsime;":"⪎","&gsiml;":"⪐","&gt":">","&gt;":">","&gtcc;":"⪧","&gtcir;":"⩺","&gtdot;":"⋗","&gtlPar;":"⦕","&gtquest;":"⩼","&gtrapprox;":"⪆","&gtrarr;":"⥸","&gtrdot;":"⋗","&gtreqless;":"⋛","&gtreqqless;":"⪌","&gtrless;":"≷","&gtrsim;":"≳","&gvertneqq;":"≩︀","&gvnE;":"≩︀","&hArr;":"⇔","&hairsp;":" ","&half;":"½","&hamilt;":"ℋ","&hardcy;":"ъ","&harr;":"↔","&harrcir;":"⥈","&harrw;":"↭","&hbar;":"ℏ","&hcirc;":"ĥ","&hearts;":"♥","&heartsuit;":"♥","&hellip;":"…","&hercon;":"⊹","&hfr;":"𝔥","&hksearow;":"⤥","&hkswarow;":"⤦","&hoarr;":"⇿","&homtht;":"∻","&hookleftarrow;":"↩","&hookrightarrow;":"↪","&hopf;":"𝕙","&horbar;":"―","&hscr;":"𝒽","&hslash;":"ℏ","&hstrok;":"ħ","&hybull;":"⁃","&hyphen;":"‐","&iacute":"í","&iacute;":"í","&ic;":"⁣","&icirc":"î","&icirc;":"î","&icy;":"и","&iecy;":"е","&iexcl":"¡","&iexcl;":"¡","&iff;":"⇔","&ifr;":"𝔦","&igrave":"ì","&igrave;":"ì","&ii;":"ⅈ","&iiiint;":"⨌","&iiint;":"∭","&iinfin;":"⧜","&iiota;":"℩","&ijlig;":"ĳ","&imacr;":"ī","&image;":"ℑ","&imagline;":"ℐ","&imagpart;":"ℑ","&imath;":"ı","&imof;":"⊷","&imped;":"Ƶ","&in;":"∈","&incare;":"℅","&infin;":"∞","&infintie;":"⧝","&inodot;":"ı","&int;":"∫","&intcal;":"⊺","&integers;":"ℤ","&intercal;":"⊺","&intlarhk;":"⨗","&intprod;":"⨼","&iocy;":"ё","&iogon;":"į","&iopf;":"𝕚","&iota;":"ι","&iprod;":"⨼","&iquest":"¿","&iquest;":"¿","&iscr;":"𝒾","&isin;":"∈","&isinE;":"⋹","&isindot;":"⋵","&isins;":"⋴","&isinsv;":"⋳","&isinv;":"∈","&it;":"⁢","&itilde;":"ĩ","&iukcy;":"і","&iuml":"ï","&iuml;":"ï","&jcirc;":"ĵ","&jcy;":"й","&jfr;":"𝔧","&jmath;":"ȷ","&jopf;":"𝕛","&jscr;":"𝒿","&jsercy;":"ј","&jukcy;":"є","&kappa;":"κ","&kappav;":"ϰ","&kcedil;":"ķ","&kcy;":"к","&kfr;":"𝔨","&kgreen;":"ĸ","&khcy;":"х","&kjcy;":"ќ","&kopf;":"𝕜","&kscr;":"𝓀","&lAarr;":"⇚","&lArr;":"⇐","&lAtail;":"⤛","&lBarr;":"⤎","&lE;":"≦","&lEg;":"⪋","&lHar;":"⥢","&lacute;":"ĺ","&laemptyv;":"⦴","&lagran;":"ℒ","&lambda;":"λ","&lang;":"⟨","&langd;":"⦑","&langle;":"⟨","&lap;":"⪅","&laquo":"«","&laquo;":"«","&larr;":"←","&larrb;":"⇤","&larrbfs;":"⤟","&larrfs;":"⤝","&larrhk;":"↩","&larrlp;":"↫","&larrpl;":"⤹","&larrsim;":"⥳","&larrtl;":"↢","&lat;":"⪫","&latail;":"⤙","&late;":"⪭","&lates;":"⪭︀","&lbarr;":"⤌","&lbbrk;":"❲","&lbrace;":"{","&lbrack;":"[","&lbrke;":"⦋","&lbrksld;":"⦏","&lbrkslu;":"⦍","&lcaron;":"ľ","&lcedil;":"ļ","&lceil;":"⌈","&lcub;":"{","&lcy;":"л","&ldca;":"⤶","&ldquo;":"“","&ldquor;":"„","&ldrdhar;":"⥧","&ldrushar;":"⥋","&ldsh;":"↲","&le;":"≤","&leftarrow;":"←","&leftarrowtail;":"↢","&leftharpoondown;":"↽","&leftharpoonup;":"↼","&leftleftarrows;":"⇇","&leftrightarrow;":"↔","&leftrightarrows;":"⇆","&leftrightharpoons;":"⇋","&leftrightsquigarrow;":"↭","&leftthreetimes;":"⋋","&leg;":"⋚","&leq;":"≤","&leqq;":"≦","&leqslant;":"⩽","&les;":"⩽","&lescc;":"⪨","&lesdot;":"⩿","&lesdoto;":"⪁","&lesdotor;":"⪃","&lesg;":"⋚︀","&lesges;":"⪓","&lessapprox;":"⪅","&lessdot;":"⋖","&lesseqgtr;":"⋚","&lesseqqgtr;":"⪋","&lessgtr;":"≶","&lesssim;":"≲","&lfisht;":"⥼","&lfloor;":"⌊","&lfr;":"𝔩","&lg;":"≶","&lgE;":"⪑","&lhard;":"↽","&lharu;":"↼","&lharul;":"⥪","&lhblk;":"▄","&ljcy;":"љ","&ll;":"≪","&llarr;":"⇇","&llcorner;":"⌞","&llhard;":"⥫","&lltri;":"◺","&lmidot;":"ŀ","&lmoust;":"⎰","&lmoustache;":"⎰","&lnE;":"≨","&lnap;":"⪉","&lnapprox;":"⪉","&lne;":"⪇","&lneq;":"⪇","&lneqq;":"≨","&lnsim;":"⋦","&loang;":"⟬","&loarr;":"⇽","&lobrk;":"⟦","&longleftarrow;":"⟵","&longleftrightarrow;":"⟷","&longmapsto;":"⟼","&longrightarrow;":"⟶","&looparrowleft;":"↫","&looparrowright;":"↬","&lopar;":"⦅","&lopf;":"𝕝","&loplus;":"⨭","&lotimes;":"⨴","&lowast;":"∗","&lowbar;":"_","&loz;":"◊","&lozenge;":"◊","&lozf;":"⧫","&lpar;":"(","&lparlt;":"⦓","&lrarr;":"⇆","&lrcorner;":"⌟","&lrhar;":"⇋","&lrhard;":"⥭","&lrm;":"‎","&lrtri;":"⊿","&lsaquo;":"‹","&lscr;":"𝓁","&lsh;":"↰","&lsim;":"≲","&lsime;":"⪍","&lsimg;":"⪏","&lsqb;":"[","&lsquo;":"‘","&lsquor;":"‚","&lstrok;":"ł","&lt":"<","&lt;":"<","&ltcc;":"⪦","&ltcir;":"⩹","&ltdot;":"⋖","&lthree;":"⋋","&ltimes;":"⋉","&ltlarr;":"⥶","&ltquest;":"⩻","&ltrPar;":"⦖","&ltri;":"◃","&ltrie;":"⊴","&ltrif;":"◂","&lurdshar;":"⥊","&luruhar;":"⥦","&lvertneqq;":"≨︀","&lvnE;":"≨︀","&mDDot;":"∺","&macr":"¯","&macr;":"¯","&male;":"♂","&malt;":"✠","&maltese;":"✠","&map;":"↦","&mapsto;":"↦","&mapstodown;":"↧","&mapstoleft;":"↤","&mapstoup;":"↥","&marker;":"▮","&mcomma;":"⨩","&mcy;":"м","&mdash;":"—","&measuredangle;":"∡","&mfr;":"𝔪","&mho;":"℧","&micro":"µ","&micro;":"µ","&mid;":"∣","&midast;":"*","&midcir;":"⫰","&middot":"·","&middot;":"·","&minus;":"−","&minusb;":"⊟","&minusd;":"∸","&minusdu;":"⨪","&mlcp;":"⫛","&mldr;":"…","&mnplus;":"∓","&models;":"⊧","&mopf;":"𝕞","&mp;":"∓","&mscr;":"𝓂","&mstpos;":"∾","&mu;":"μ","&multimap;":"⊸","&mumap;":"⊸","&nGg;":"⋙̸","&nGt;":"≫⃒","&nGtv;":"≫̸","&nLeftarrow;":"⇍","&nLeftrightarrow;":"⇎","&nLl;":"⋘̸","&nLt;":"≪⃒","&nLtv;":"≪̸","&nRightarrow;":"⇏","&nVDash;":"⊯","&nVdash;":"⊮","&nabla;":"∇","&nacute;":"ń","&nang;":"∠⃒","&nap;":"≉","&napE;":"⩰̸","&napid;":"≋̸","&napos;":"ŉ","&napprox;":"≉","&natur;":"♮","&natural;":"♮","&naturals;":"ℕ","&nbsp":" ","&nbsp;":" ","&nbump;":"≎̸","&nbumpe;":"≏̸","&ncap;":"⩃","&ncaron;":"ň","&ncedil;":"ņ","&ncong;":"≇","&ncongdot;":"⩭̸","&ncup;":"⩂","&ncy;":"н","&ndash;":"–","&ne;":"≠","&neArr;":"⇗","&nearhk;":"⤤","&nearr;":"↗","&nearrow;":"↗","&nedot;":"≐̸","&nequiv;":"≢","&nesear;":"⤨","&nesim;":"≂̸","&nexist;":"∄","&nexists;":"∄","&nfr;":"𝔫","&ngE;":"≧̸","&nge;":"≱","&ngeq;":"≱","&ngeqq;":"≧̸","&ngeqslant;":"⩾̸","&nges;":"⩾̸","&ngsim;":"≵","&ngt;":"≯","&ngtr;":"≯","&nhArr;":"⇎","&nharr;":"↮","&nhpar;":"⫲","&ni;":"∋","&nis;":"⋼","&nisd;":"⋺","&niv;":"∋","&njcy;":"њ","&nlArr;":"⇍","&nlE;":"≦̸","&nlarr;":"↚","&nldr;":"‥","&nle;":"≰","&nleftarrow;":"↚","&nleftrightarrow;":"↮","&nleq;":"≰","&nleqq;":"≦̸","&nleqslant;":"⩽̸","&nles;":"⩽̸","&nless;":"≮","&nlsim;":"≴","&nlt;":"≮","&nltri;":"⋪","&nltrie;":"⋬","&nmid;":"∤","&nopf;":"𝕟","&not":"¬","&not;":"¬","&notin;":"∉","&notinE;":"⋹̸","&notindot;":"⋵̸","&notinva;":"∉","&notinvb;":"⋷","&notinvc;":"⋶","&notni;":"∌","&notniva;":"∌","&notnivb;":"⋾","&notnivc;":"⋽","&npar;":"∦","&nparallel;":"∦","&nparsl;":"⫽⃥","&npart;":"∂̸","&npolint;":"⨔","&npr;":"⊀","&nprcue;":"⋠","&npre;":"⪯̸","&nprec;":"⊀","&npreceq;":"⪯̸","&nrArr;":"⇏","&nrarr;":"↛","&nrarrc;":"⤳̸","&nrarrw;":"↝̸","&nrightarrow;":"↛","&nrtri;":"⋫","&nrtrie;":"⋭","&nsc;":"⊁","&nsccue;":"⋡","&nsce;":"⪰̸","&nscr;":"𝓃","&nshortmid;":"∤","&nshortparallel;":"∦","&nsim;":"≁","&nsime;":"≄","&nsimeq;":"≄","&nsmid;":"∤","&nspar;":"∦","&nsqsube;":"⋢","&nsqsupe;":"⋣","&nsub;":"⊄","&nsubE;":"⫅̸","&nsube;":"⊈","&nsubset;":"⊂⃒","&nsubseteq;":"⊈","&nsubseteqq;":"⫅̸","&nsucc;":"⊁","&nsucceq;":"⪰̸","&nsup;":"⊅","&nsupE;":"⫆̸","&nsupe;":"⊉","&nsupset;":"⊃⃒","&nsupseteq;":"⊉","&nsupseteqq;":"⫆̸","&ntgl;":"≹","&ntilde":"ñ","&ntilde;":"ñ","&ntlg;":"≸","&ntriangleleft;":"⋪","&ntrianglelefteq;":"⋬","&ntriangleright;":"⋫","&ntrianglerighteq;":"⋭","&nu;":"ν","&num;":"#","&numero;":"№","&numsp;":" ","&nvDash;":"⊭","&nvHarr;":"⤄","&nvap;":"≍⃒","&nvdash;":"⊬","&nvge;":"≥⃒","&nvgt;":">⃒","&nvinfin;":"⧞","&nvlArr;":"⤂","&nvle;":"≤⃒","&nvlt;":"<⃒","&nvltrie;":"⊴⃒","&nvrArr;":"⤃","&nvrtrie;":"⊵⃒","&nvsim;":"∼⃒","&nwArr;":"⇖","&nwarhk;":"⤣","&nwarr;":"↖","&nwarrow;":"↖","&nwnear;":"⤧","&oS;":"Ⓢ","&oacute":"ó","&oacute;":"ó","&oast;":"⊛","&ocir;":"⊚","&ocirc":"ô","&ocirc;":"ô","&ocy;":"о","&odash;":"⊝","&odblac;":"ő","&odiv;":"⨸","&odot;":"⊙","&odsold;":"⦼","&oelig;":"œ","&ofcir;":"⦿","&ofr;":"𝔬","&ogon;":"˛","&ograve":"ò","&ograve;":"ò","&ogt;":"⧁","&ohbar;":"⦵","&ohm;":"Ω","&oint;":"∮","&olarr;":"↺","&olcir;":"⦾","&olcross;":"⦻","&oline;":"‾","&olt;":"⧀","&omacr;":"ō","&omega;":"ω","&omicron;":"ο","&omid;":"⦶","&ominus;":"⊖","&oopf;":"𝕠","&opar;":"⦷","&operp;":"⦹","&oplus;":"⊕","&or;":"∨","&orarr;":"↻","&ord;":"⩝","&order;":"ℴ","&orderof;":"ℴ","&ordf":"ª","&ordf;":"ª","&ordm":"º","&ordm;":"º","&origof;":"⊶","&oror;":"⩖","&orslope;":"⩗","&orv;":"⩛","&oscr;":"ℴ","&oslash":"ø","&oslash;":"ø","&osol;":"⊘","&otilde":"õ","&otilde;":"õ","&otimes;":"⊗","&otimesas;":"⨶","&ouml":"ö","&ouml;":"ö","&ovbar;":"⌽","&par;":"∥","&para":"¶","&para;":"¶","&parallel;":"∥","&parsim;":"⫳","&parsl;":"⫽","&part;":"∂","&pcy;":"п","&percnt;":"%","&period;":".","&permil;":"‰","&perp;":"⊥","&pertenk;":"‱","&pfr;":"𝔭","&phi;":"φ","&phiv;":"ϕ","&phmmat;":"ℳ","&phone;":"☎","&pi;":"π","&pitchfork;":"⋔","&piv;":"ϖ","&planck;":"ℏ","&planckh;":"ℎ","&plankv;":"ℏ","&plus;":"+","&plusacir;":"⨣","&plusb;":"⊞","&pluscir;":"⨢","&plusdo;":"∔","&plusdu;":"⨥","&pluse;":"⩲","&plusmn":"±","&plusmn;":"±","&plussim;":"⨦","&plustwo;":"⨧","&pm;":"±","&pointint;":"⨕","&popf;":"𝕡","&pound":"£","&pound;":"£","&pr;":"≺","&prE;":"⪳","&prap;":"⪷","&prcue;":"≼","&pre;":"⪯","&prec;":"≺","&precapprox;":"⪷","&preccurlyeq;":"≼","&preceq;":"⪯","&precnapprox;":"⪹","&precneqq;":"⪵","&precnsim;":"⋨","&precsim;":"≾","&prime;":"′","&primes;":"ℙ","&prnE;":"⪵","&prnap;":"⪹","&prnsim;":"⋨","&prod;":"∏","&profalar;":"⌮","&profline;":"⌒","&profsurf;":"⌓","&prop;":"∝","&propto;":"∝","&prsim;":"≾","&prurel;":"⊰","&pscr;":"𝓅","&psi;":"ψ","&puncsp;":" ","&qfr;":"𝔮","&qint;":"⨌","&qopf;":"𝕢","&qprime;":"⁗","&qscr;":"𝓆","&quaternions;":"ℍ","&quatint;":"⨖","&quest;":"?","&questeq;":"≟","&quot":'"',"&quot;":'"',"&rAarr;":"⇛","&rArr;":"⇒","&rAtail;":"⤜","&rBarr;":"⤏","&rHar;":"⥤","&race;":"∽̱","&racute;":"ŕ","&radic;":"√","&raemptyv;":"⦳","&rang;":"⟩","&rangd;":"⦒","&range;":"⦥","&rangle;":"⟩","&raquo":"»","&raquo;":"»","&rarr;":"→","&rarrap;":"⥵","&rarrb;":"⇥","&rarrbfs;":"⤠","&rarrc;":"⤳","&rarrfs;":"⤞","&rarrhk;":"↪","&rarrlp;":"↬","&rarrpl;":"⥅","&rarrsim;":"⥴","&rarrtl;":"↣","&rarrw;":"↝","&ratail;":"⤚","&ratio;":"∶","&rationals;":"ℚ","&rbarr;":"⤍","&rbbrk;":"❳","&rbrace;":"}","&rbrack;":"]","&rbrke;":"⦌","&rbrksld;":"⦎","&rbrkslu;":"⦐","&rcaron;":"ř","&rcedil;":"ŗ","&rceil;":"⌉","&rcub;":"}","&rcy;":"р","&rdca;":"⤷","&rdldhar;":"⥩","&rdquo;":"”","&rdquor;":"”","&rdsh;":"↳","&real;":"ℜ","&realine;":"ℛ","&realpart;":"ℜ","&reals;":"ℝ","&rect;":"▭","&reg":"®","&reg;":"®","&rfisht;":"⥽","&rfloor;":"⌋","&rfr;":"𝔯","&rhard;":"⇁","&rharu;":"⇀","&rharul;":"⥬","&rho;":"ρ","&rhov;":"ϱ","&rightarrow;":"→","&rightarrowtail;":"↣","&rightharpoondown;":"⇁","&rightharpoonup;":"⇀","&rightleftarrows;":"⇄","&rightleftharpoons;":"⇌","&rightrightarrows;":"⇉","&rightsquigarrow;":"↝","&rightthreetimes;":"⋌","&ring;":"˚","&risingdotseq;":"≓","&rlarr;":"⇄","&rlhar;":"⇌","&rlm;":"‏","&rmoust;":"⎱","&rmoustache;":"⎱","&rnmid;":"⫮","&roang;":"⟭","&roarr;":"⇾","&robrk;":"⟧","&ropar;":"⦆","&ropf;":"𝕣","&roplus;":"⨮","&rotimes;":"⨵","&rpar;":")","&rpargt;":"⦔","&rppolint;":"⨒","&rrarr;":"⇉","&rsaquo;":"›","&rscr;":"𝓇","&rsh;":"↱","&rsqb;":"]","&rsquo;":"’","&rsquor;":"’","&rthree;":"⋌","&rtimes;":"⋊","&rtri;":"▹","&rtrie;":"⊵","&rtrif;":"▸","&rtriltri;":"⧎","&ruluhar;":"⥨","&rx;":"℞","&sacute;":"ś","&sbquo;":"‚","&sc;":"≻","&scE;":"⪴","&scap;":"⪸","&scaron;":"š","&sccue;":"≽","&sce;":"⪰","&scedil;":"ş","&scirc;":"ŝ","&scnE;":"⪶","&scnap;":"⪺","&scnsim;":"⋩","&scpolint;":"⨓","&scsim;":"≿","&scy;":"с","&sdot;":"⋅","&sdotb;":"⊡","&sdote;":"⩦","&seArr;":"⇘","&searhk;":"⤥","&searr;":"↘","&searrow;":"↘","&sect":"§","&sect;":"§","&semi;":";","&seswar;":"⤩","&setminus;":"∖","&setmn;":"∖","&sext;":"✶","&sfr;":"𝔰","&sfrown;":"⌢","&sharp;":"♯","&shchcy;":"щ","&shcy;":"ш","&shortmid;":"∣","&shortparallel;":"∥","&shy":"­","&shy;":"­","&sigma;":"σ","&sigmaf;":"ς","&sigmav;":"ς","&sim;":"∼","&simdot;":"⩪","&sime;":"≃","&simeq;":"≃","&simg;":"⪞","&simgE;":"⪠","&siml;":"⪝","&simlE;":"⪟","&simne;":"≆","&simplus;":"⨤","&simrarr;":"⥲","&slarr;":"←","&smallsetminus;":"∖","&smashp;":"⨳","&smeparsl;":"⧤","&smid;":"∣","&smile;":"⌣","&smt;":"⪪","&smte;":"⪬","&smtes;":"⪬︀","&softcy;":"ь","&sol;":"/","&solb;":"⧄","&solbar;":"⌿","&sopf;":"𝕤","&spades;":"♠","&spadesuit;":"♠","&spar;":"∥","&sqcap;":"⊓","&sqcaps;":"⊓︀","&sqcup;":"⊔","&sqcups;":"⊔︀","&sqsub;":"⊏","&sqsube;":"⊑","&sqsubset;":"⊏","&sqsubseteq;":"⊑","&sqsup;":"⊐","&sqsupe;":"⊒","&sqsupset;":"⊐","&sqsupseteq;":"⊒","&squ;":"□","&square;":"□","&squarf;":"▪","&squf;":"▪","&srarr;":"→","&sscr;":"𝓈","&ssetmn;":"∖","&ssmile;":"⌣","&sstarf;":"⋆","&star;":"☆","&starf;":"★","&straightepsilon;":"ϵ","&straightphi;":"ϕ","&strns;":"¯","&sub;":"⊂","&subE;":"⫅","&subdot;":"⪽","&sube;":"⊆","&subedot;":"⫃","&submult;":"⫁","&subnE;":"⫋","&subne;":"⊊","&subplus;":"⪿","&subrarr;":"⥹","&subset;":"⊂","&subseteq;":"⊆","&subseteqq;":"⫅","&subsetneq;":"⊊","&subsetneqq;":"⫋","&subsim;":"⫇","&subsub;":"⫕","&subsup;":"⫓","&succ;":"≻","&succapprox;":"⪸","&succcurlyeq;":"≽","&succeq;":"⪰","&succnapprox;":"⪺","&succneqq;":"⪶","&succnsim;":"⋩","&succsim;":"≿","&sum;":"∑","&sung;":"♪","&sup1":"¹","&sup1;":"¹","&sup2":"²","&sup2;":"²","&sup3":"³","&sup3;":"³","&sup;":"⊃","&supE;":"⫆","&supdot;":"⪾","&supdsub;":"⫘","&supe;":"⊇","&supedot;":"⫄","&suphsol;":"⟉","&suphsub;":"⫗","&suplarr;":"⥻","&supmult;":"⫂","&supnE;":"⫌","&supne;":"⊋","&supplus;":"⫀","&supset;":"⊃","&supseteq;":"⊇","&supseteqq;":"⫆","&supsetneq;":"⊋","&supsetneqq;":"⫌","&supsim;":"⫈","&supsub;":"⫔","&supsup;":"⫖","&swArr;":"⇙","&swarhk;":"⤦","&swarr;":"↙","&swarrow;":"↙","&swnwar;":"⤪","&szlig":"ß","&szlig;":"ß","&target;":"⌖","&tau;":"τ","&tbrk;":"⎴","&tcaron;":"ť","&tcedil;":"ţ","&tcy;":"т","&tdot;":"⃛","&telrec;":"⌕","&tfr;":"𝔱","&there4;":"∴","&therefore;":"∴","&theta;":"θ","&thetasym;":"ϑ","&thetav;":"ϑ","&thickapprox;":"≈","&thicksim;":"∼","&thinsp;":" ","&thkap;":"≈","&thksim;":"∼","&thorn":"þ","&thorn;":"þ","&tilde;":"˜","&times":"×","&times;":"×","&timesb;":"⊠","&timesbar;":"⨱","&timesd;":"⨰","&tint;":"∭","&toea;":"⤨","&top;":"⊤","&topbot;":"⌶","&topcir;":"⫱","&topf;":"𝕥","&topfork;":"⫚","&tosa;":"⤩","&tprime;":"‴","&trade;":"™","&triangle;":"▵","&triangledown;":"▿","&triangleleft;":"◃","&trianglelefteq;":"⊴","&triangleq;":"≜","&triangleright;":"▹","&trianglerighteq;":"⊵","&tridot;":"◬","&trie;":"≜","&triminus;":"⨺","&triplus;":"⨹","&trisb;":"⧍","&tritime;":"⨻","&trpezium;":"⏢","&tscr;":"𝓉","&tscy;":"ц","&tshcy;":"ћ","&tstrok;":"ŧ","&twixt;":"≬","&twoheadleftarrow;":"↞","&twoheadrightarrow;":"↠","&uArr;":"⇑","&uHar;":"⥣","&uacute":"ú","&uacute;":"ú","&uarr;":"↑","&ubrcy;":"ў","&ubreve;":"ŭ","&ucirc":"û","&ucirc;":"û","&ucy;":"у","&udarr;":"⇅","&udblac;":"ű","&udhar;":"⥮","&ufisht;":"⥾","&ufr;":"𝔲","&ugrave":"ù","&ugrave;":"ù","&uharl;":"↿","&uharr;":"↾","&uhblk;":"▀","&ulcorn;":"⌜","&ulcorner;":"⌜","&ulcrop;":"⌏","&ultri;":"◸","&umacr;":"ū","&uml":"¨","&uml;":"¨","&uogon;":"ų","&uopf;":"𝕦","&uparrow;":"↑","&updownarrow;":"↕","&upharpoonleft;":"↿","&upharpoonright;":"↾","&uplus;":"⊎","&upsi;":"υ","&upsih;":"ϒ","&upsilon;":"υ","&upuparrows;":"⇈","&urcorn;":"⌝","&urcorner;":"⌝","&urcrop;":"⌎","&uring;":"ů","&urtri;":"◹","&uscr;":"𝓊","&utdot;":"⋰","&utilde;":"ũ","&utri;":"▵","&utrif;":"▴","&uuarr;":"⇈","&uuml":"ü","&uuml;":"ü","&uwangle;":"⦧","&vArr;":"⇕","&vBar;":"⫨","&vBarv;":"⫩","&vDash;":"⊨","&vangrt;":"⦜","&varepsilon;":"ϵ","&varkappa;":"ϰ","&varnothing;":"∅","&varphi;":"ϕ","&varpi;":"ϖ","&varpropto;":"∝","&varr;":"↕","&varrho;":"ϱ","&varsigma;":"ς","&varsubsetneq;":"⊊︀","&varsubsetneqq;":"⫋︀","&varsupsetneq;":"⊋︀","&varsupsetneqq;":"⫌︀","&vartheta;":"ϑ","&vartriangleleft;":"⊲","&vartriangleright;":"⊳","&vcy;":"в","&vdash;":"⊢","&vee;":"∨","&veebar;":"⊻","&veeeq;":"≚","&vellip;":"⋮","&verbar;":"|","&vert;":"|","&vfr;":"𝔳","&vltri;":"⊲","&vnsub;":"⊂⃒","&vnsup;":"⊃⃒","&vopf;":"𝕧","&vprop;":"∝","&vrtri;":"⊳","&vscr;":"𝓋","&vsubnE;":"⫋︀","&vsubne;":"⊊︀","&vsupnE;":"⫌︀","&vsupne;":"⊋︀","&vzigzag;":"⦚","&wcirc;":"ŵ","&wedbar;":"⩟","&wedge;":"∧","&wedgeq;":"≙","&weierp;":"℘","&wfr;":"𝔴","&wopf;":"𝕨","&wp;":"℘","&wr;":"≀","&wreath;":"≀","&wscr;":"𝓌","&xcap;":"⋂","&xcirc;":"◯","&xcup;":"⋃","&xdtri;":"▽","&xfr;":"𝔵","&xhArr;":"⟺","&xharr;":"⟷","&xi;":"ξ","&xlArr;":"⟸","&xlarr;":"⟵","&xmap;":"⟼","&xnis;":"⋻","&xodot;":"⨀","&xopf;":"𝕩","&xoplus;":"⨁","&xotime;":"⨂","&xrArr;":"⟹","&xrarr;":"⟶","&xscr;":"𝓍","&xsqcup;":"⨆","&xuplus;":"⨄","&xutri;":"△","&xvee;":"⋁","&xwedge;":"⋀","&yacute":"ý","&yacute;":"ý","&yacy;":"я","&ycirc;":"ŷ","&ycy;":"ы","&yen":"¥","&yen;":"¥","&yfr;":"𝔶","&yicy;":"ї","&yopf;":"𝕪","&yscr;":"𝓎","&yucy;":"ю","&yuml":"ÿ","&yuml;":"ÿ","&zacute;":"ź","&zcaron;":"ž","&zcy;":"з","&zdot;":"ż","&zeetrf;":"ℨ","&zeta;":"ζ","&zfr;":"𝔷","&zhcy;":"ж","&zigrarr;":"⇝","&zopf;":"𝕫","&zscr;":"𝓏","&zwj;":"‍","&zwnj;":"‌"},characters:{Æ:"&AElig;","&":"&amp;",Á:"&Aacute;",Ă:"&Abreve;",Â:"&Acirc;",А:"&Acy;",𝔄:"&Afr;",À:"&Agrave;",Α:"&Alpha;",Ā:"&Amacr;","⩓":"&And;",Ą:"&Aogon;",𝔸:"&Aopf;","⁡":"&af;",Å:"&angst;",𝒜:"&Ascr;","≔":"&coloneq;",Ã:"&Atilde;",Ä:"&Auml;","∖":"&ssetmn;","⫧":"&Barv;","⌆":"&doublebarwedge;",Б:"&Bcy;","∵":"&because;",ℬ:"&bernou;",Β:"&Beta;",𝔅:"&Bfr;",𝔹:"&Bopf;","˘":"&breve;","≎":"&bump;",Ч:"&CHcy;","©":"&copy;",Ć:"&Cacute;","⋒":"&Cap;",ⅅ:"&DD;",ℭ:"&Cfr;",Č:"&Ccaron;",Ç:"&Ccedil;",Ĉ:"&Ccirc;","∰":"&Cconint;",Ċ:"&Cdot;","¸":"&cedil;","·":"&middot;",Χ:"&Chi;","⊙":"&odot;","⊖":"&ominus;","⊕":"&oplus;","⊗":"&otimes;","∲":"&cwconint;","”":"&rdquor;","’":"&rsquor;","∷":"&Proportion;","⩴":"&Colone;","≡":"&equiv;","∯":"&DoubleContourIntegral;","∮":"&oint;",ℂ:"&complexes;","∐":"&coprod;","∳":"&awconint;","⨯":"&Cross;",𝒞:"&Cscr;","⋓":"&Cup;","≍":"&asympeq;","⤑":"&DDotrahd;",Ђ:"&DJcy;",Ѕ:"&DScy;",Џ:"&DZcy;","‡":"&ddagger;","↡":"&Darr;","⫤":"&DoubleLeftTee;",Ď:"&Dcaron;",Д:"&Dcy;","∇":"&nabla;",Δ:"&Delta;",𝔇:"&Dfr;","´":"&acute;","˙":"&dot;","˝":"&dblac;","`":"&grave;","˜":"&tilde;","⋄":"&diamond;",ⅆ:"&dd;",𝔻:"&Dopf;","¨":"&uml;","⃜":"&DotDot;","≐":"&esdot;","⇓":"&dArr;","⇐":"&lArr;","⇔":"&iff;","⟸":"&xlArr;","⟺":"&xhArr;","⟹":"&xrArr;","⇒":"&rArr;","⊨":"&vDash;","⇑":"&uArr;","⇕":"&vArr;","∥":"&spar;","↓":"&downarrow;","⤓":"&DownArrowBar;","⇵":"&duarr;","̑":"&DownBreve;","⥐":"&DownLeftRightVector;","⥞":"&DownLeftTeeVector;","↽":"&lhard;","⥖":"&DownLeftVectorBar;","⥟":"&DownRightTeeVector;","⇁":"&rightharpoondown;","⥗":"&DownRightVectorBar;","⊤":"&top;","↧":"&mapstodown;",𝒟:"&Dscr;",Đ:"&Dstrok;",Ŋ:"&ENG;",Ð:"&ETH;",É:"&Eacute;",Ě:"&Ecaron;",Ê:"&Ecirc;",Э:"&Ecy;",Ė:"&Edot;",𝔈:"&Efr;",È:"&Egrave;","∈":"&isinv;",Ē:"&Emacr;","◻":"&EmptySmallSquare;","▫":"&EmptyVerySmallSquare;",Ę:"&Eogon;",𝔼:"&Eopf;",Ε:"&Epsilon;","⩵":"&Equal;","≂":"&esim;","⇌":"&rlhar;",ℰ:"&expectation;","⩳":"&Esim;",Η:"&Eta;",Ë:"&Euml;","∃":"&exist;",ⅇ:"&exponentiale;",Ф:"&Fcy;",𝔉:"&Ffr;","◼":"&FilledSmallSquare;","▪":"&squf;",𝔽:"&Fopf;","∀":"&forall;",ℱ:"&Fscr;",Ѓ:"&GJcy;",">":"&gt;",Γ:"&Gamma;",Ϝ:"&Gammad;",Ğ:"&Gbreve;",Ģ:"&Gcedil;",Ĝ:"&Gcirc;",Г:"&Gcy;",Ġ:"&Gdot;",𝔊:"&Gfr;","⋙":"&ggg;",𝔾:"&Gopf;","≥":"&geq;","⋛":"&gtreqless;","≧":"&geqq;","⪢":"&GreaterGreater;","≷":"&gtrless;","⩾":"&ges;","≳":"&gtrsim;",𝒢:"&Gscr;","≫":"&gg;",Ъ:"&HARDcy;",ˇ:"&caron;","^":"&Hat;",Ĥ:"&Hcirc;",ℌ:"&Poincareplane;",ℋ:"&hamilt;",ℍ:"&quaternions;","─":"&boxh;",Ħ:"&Hstrok;","≏":"&bumpeq;",Е:"&IEcy;",Ĳ:"&IJlig;",Ё:"&IOcy;",Í:"&Iacute;",Î:"&Icirc;",И:"&Icy;",İ:"&Idot;",ℑ:"&imagpart;",Ì:"&Igrave;",Ī:"&Imacr;",ⅈ:"&ii;","∬":"&Int;","∫":"&int;","⋂":"&xcap;","⁣":"&ic;","⁢":"&it;",Į:"&Iogon;",𝕀:"&Iopf;",Ι:"&Iota;",ℐ:"&imagline;",Ĩ:"&Itilde;",І:"&Iukcy;",Ï:"&Iuml;",Ĵ:"&Jcirc;",Й:"&Jcy;",𝔍:"&Jfr;",𝕁:"&Jopf;",𝒥:"&Jscr;",Ј:"&Jsercy;",Є:"&Jukcy;",Х:"&KHcy;",Ќ:"&KJcy;",Κ:"&Kappa;",Ķ:"&Kcedil;",К:"&Kcy;",𝔎:"&Kfr;",𝕂:"&Kopf;",𝒦:"&Kscr;",Љ:"&LJcy;","<":"&lt;",Ĺ:"&Lacute;",Λ:"&Lambda;","⟪":"&Lang;",ℒ:"&lagran;","↞":"&twoheadleftarrow;",Ľ:"&Lcaron;",Ļ:"&Lcedil;",Л:"&Lcy;","⟨":"&langle;","←":"&slarr;","⇤":"&larrb;","⇆":"&lrarr;","⌈":"&lceil;","⟦":"&lobrk;","⥡":"&LeftDownTeeVector;","⇃":"&downharpoonleft;","⥙":"&LeftDownVectorBar;","⌊":"&lfloor;","↔":"&leftrightarrow;","⥎":"&LeftRightVector;","⊣":"&dashv;","↤":"&mapstoleft;","⥚":"&LeftTeeVector;","⊲":"&vltri;","⧏":"&LeftTriangleBar;","⊴":"&trianglelefteq;","⥑":"&LeftUpDownVector;","⥠":"&LeftUpTeeVector;","↿":"&upharpoonleft;","⥘":"&LeftUpVectorBar;","↼":"&lharu;","⥒":"&LeftVectorBar;","⋚":"&lesseqgtr;","≦":"&leqq;","≶":"&lg;","⪡":"&LessLess;","⩽":"&les;","≲":"&lsim;",𝔏:"&Lfr;","⋘":"&Ll;","⇚":"&lAarr;",Ŀ:"&Lmidot;","⟵":"&xlarr;","⟷":"&xharr;","⟶":"&xrarr;",𝕃:"&Lopf;","↙":"&swarrow;","↘":"&searrow;","↰":"&lsh;",Ł:"&Lstrok;","≪":"&ll;","⤅":"&Map;",М:"&Mcy;"," ":"&MediumSpace;",ℳ:"&phmmat;",𝔐:"&Mfr;","∓":"&mp;",𝕄:"&Mopf;",Μ:"&Mu;",Њ:"&NJcy;",Ń:"&Nacute;",Ň:"&Ncaron;",Ņ:"&Ncedil;",Н:"&Ncy;","​":"&ZeroWidthSpace;","\n":"&NewLine;",𝔑:"&Nfr;","⁠":"&NoBreak;"," ":"&nbsp;",ℕ:"&naturals;","⫬":"&Not;","≢":"&nequiv;","≭":"&NotCupCap;","∦":"&nspar;","∉":"&notinva;","≠":"&ne;","≂̸":"&nesim;","∄":"&nexists;","≯":"&ngtr;","≱":"&ngeq;","≧̸":"&ngeqq;","≫̸":"&nGtv;","≹":"&ntgl;","⩾̸":"&nges;","≵":"&ngsim;","≎̸":"&nbump;","≏̸":"&nbumpe;","⋪":"&ntriangleleft;","⧏̸":"&NotLeftTriangleBar;","⋬":"&ntrianglelefteq;","≮":"&nlt;","≰":"&nleq;","≸":"&ntlg;","≪̸":"&nLtv;","⩽̸":"&nles;","≴":"&nlsim;","⪢̸":"&NotNestedGreaterGreater;","⪡̸":"&NotNestedLessLess;","⊀":"&nprec;","⪯̸":"&npreceq;","⋠":"&nprcue;","∌":"&notniva;","⋫":"&ntriangleright;","⧐̸":"&NotRightTriangleBar;","⋭":"&ntrianglerighteq;","⊏̸":"&NotSquareSubset;","⋢":"&nsqsube;","⊐̸":"&NotSquareSuperset;","⋣":"&nsqsupe;","⊂⃒":"&vnsub;","⊈":"&nsubseteq;","⊁":"&nsucc;","⪰̸":"&nsucceq;","⋡":"&nsccue;","≿̸":"&NotSucceedsTilde;","⊃⃒":"&vnsup;","⊉":"&nsupseteq;","≁":"&nsim;","≄":"&nsimeq;","≇":"&ncong;","≉":"&napprox;","∤":"&nsmid;",𝒩:"&Nscr;",Ñ:"&Ntilde;",Ν:"&Nu;",Œ:"&OElig;",Ó:"&Oacute;",Ô:"&Ocirc;",О:"&Ocy;",Ő:"&Odblac;",𝔒:"&Ofr;",Ò:"&Ograve;",Ō:"&Omacr;",Ω:"&ohm;",Ο:"&Omicron;",𝕆:"&Oopf;","“":"&ldquo;","‘":"&lsquo;","⩔":"&Or;",𝒪:"&Oscr;",Ø:"&Oslash;",Õ:"&Otilde;","⨷":"&Otimes;",Ö:"&Ouml;","‾":"&oline;","⏞":"&OverBrace;","⎴":"&tbrk;","⏜":"&OverParenthesis;","∂":"&part;",П:"&Pcy;",𝔓:"&Pfr;",Φ:"&Phi;",Π:"&Pi;","±":"&pm;",ℙ:"&primes;","⪻":"&Pr;","≺":"&prec;","⪯":"&preceq;","≼":"&preccurlyeq;","≾":"&prsim;","″":"&Prime;","∏":"&prod;","∝":"&vprop;",𝒫:"&Pscr;",Ψ:"&Psi;",'"':"&quot;",𝔔:"&Qfr;",ℚ:"&rationals;",𝒬:"&Qscr;","⤐":"&drbkarow;","®":"&reg;",Ŕ:"&Racute;","⟫":"&Rang;","↠":"&twoheadrightarrow;","⤖":"&Rarrtl;",Ř:"&Rcaron;",Ŗ:"&Rcedil;",Р:"&Rcy;",ℜ:"&realpart;","∋":"&niv;","⇋":"&lrhar;","⥯":"&duhar;",Ρ:"&Rho;","⟩":"&rangle;","→":"&srarr;","⇥":"&rarrb;","⇄":"&rlarr;","⌉":"&rceil;","⟧":"&robrk;","⥝":"&RightDownTeeVector;","⇂":"&downharpoonright;","⥕":"&RightDownVectorBar;","⌋":"&rfloor;","⊢":"&vdash;","↦":"&mapsto;","⥛":"&RightTeeVector;","⊳":"&vrtri;","⧐":"&RightTriangleBar;","⊵":"&trianglerighteq;","⥏":"&RightUpDownVector;","⥜":"&RightUpTeeVector;","↾":"&upharpoonright;","⥔":"&RightUpVectorBar;","⇀":"&rightharpoonup;","⥓":"&RightVectorBar;",ℝ:"&reals;","⥰":"&RoundImplies;","⇛":"&rAarr;",ℛ:"&realine;","↱":"&rsh;","⧴":"&RuleDelayed;",Щ:"&SHCHcy;",Ш:"&SHcy;",Ь:"&SOFTcy;",Ś:"&Sacute;","⪼":"&Sc;",Š:"&Scaron;",Ş:"&Scedil;",Ŝ:"&Scirc;",С:"&Scy;",𝔖:"&Sfr;","↑":"&uparrow;",Σ:"&Sigma;","∘":"&compfn;",𝕊:"&Sopf;","√":"&radic;","□":"&square;","⊓":"&sqcap;","⊏":"&sqsubset;","⊑":"&sqsubseteq;","⊐":"&sqsupset;","⊒":"&sqsupseteq;","⊔":"&sqcup;",𝒮:"&Sscr;","⋆":"&sstarf;","⋐":"&Subset;","⊆":"&subseteq;","≻":"&succ;","⪰":"&succeq;","≽":"&succcurlyeq;","≿":"&succsim;","∑":"&sum;","⋑":"&Supset;","⊃":"&supset;","⊇":"&supseteq;",Þ:"&THORN;","™":"&trade;",Ћ:"&TSHcy;",Ц:"&TScy;","\t":"&Tab;",Τ:"&Tau;",Ť:"&Tcaron;",Ţ:"&Tcedil;",Т:"&Tcy;",𝔗:"&Tfr;","∴":"&therefore;",Θ:"&Theta;","  ":"&ThickSpace;"," ":"&thinsp;","∼":"&thksim;","≃":"&simeq;","≅":"&cong;","≈":"&thkap;",𝕋:"&Topf;","⃛":"&tdot;",𝒯:"&Tscr;",Ŧ:"&Tstrok;",Ú:"&Uacute;","↟":"&Uarr;","⥉":"&Uarrocir;",Ў:"&Ubrcy;",Ŭ:"&Ubreve;",Û:"&Ucirc;",У:"&Ucy;",Ű:"&Udblac;",𝔘:"&Ufr;",Ù:"&Ugrave;",Ū:"&Umacr;",_:"&lowbar;","⏟":"&UnderBrace;","⎵":"&bbrk;","⏝":"&UnderParenthesis;","⋃":"&xcup;","⊎":"&uplus;",Ų:"&Uogon;",𝕌:"&Uopf;","⤒":"&UpArrowBar;","⇅":"&udarr;","↕":"&varr;","⥮":"&udhar;","⊥":"&perp;","↥":"&mapstoup;","↖":"&nwarrow;","↗":"&nearrow;",ϒ:"&upsih;",Υ:"&Upsilon;",Ů:"&Uring;",𝒰:"&Uscr;",Ũ:"&Utilde;",Ü:"&Uuml;","⊫":"&VDash;","⫫":"&Vbar;",В:"&Vcy;","⊩":"&Vdash;","⫦":"&Vdashl;","⋁":"&xvee;","‖":"&Vert;","∣":"&smid;","|":"&vert;","❘":"&VerticalSeparator;","≀":"&wreath;"," ":"&hairsp;",𝔙:"&Vfr;",𝕍:"&Vopf;",𝒱:"&Vscr;","⊪":"&Vvdash;",Ŵ:"&Wcirc;","⋀":"&xwedge;",𝔚:"&Wfr;",𝕎:"&Wopf;",𝒲:"&Wscr;",𝔛:"&Xfr;",Ξ:"&Xi;",𝕏:"&Xopf;",𝒳:"&Xscr;",Я:"&YAcy;",Ї:"&YIcy;",Ю:"&YUcy;",Ý:"&Yacute;",Ŷ:"&Ycirc;",Ы:"&Ycy;",𝔜:"&Yfr;",𝕐:"&Yopf;",𝒴:"&Yscr;",Ÿ:"&Yuml;",Ж:"&ZHcy;",Ź:"&Zacute;",Ž:"&Zcaron;",З:"&Zcy;",Ż:"&Zdot;",Ζ:"&Zeta;",ℨ:"&zeetrf;",ℤ:"&integers;",𝒵:"&Zscr;",á:"&aacute;",ă:"&abreve;","∾":"&mstpos;","∾̳":"&acE;","∿":"&acd;",â:"&acirc;",а:"&acy;",æ:"&aelig;",𝔞:"&afr;",à:"&agrave;",ℵ:"&aleph;",α:"&alpha;",ā:"&amacr;","⨿":"&amalg;","∧":"&wedge;","⩕":"&andand;","⩜":"&andd;","⩘":"&andslope;","⩚":"&andv;","∠":"&angle;","⦤":"&ange;","∡":"&measuredangle;","⦨":"&angmsdaa;","⦩":"&angmsdab;","⦪":"&angmsdac;","⦫":"&angmsdad;","⦬":"&angmsdae;","⦭":"&angmsdaf;","⦮":"&angmsdag;","⦯":"&angmsdah;","∟":"&angrt;","⊾":"&angrtvb;","⦝":"&angrtvbd;","∢":"&angsph;","⍼":"&angzarr;",ą:"&aogon;",𝕒:"&aopf;","⩰":"&apE;","⩯":"&apacir;","≊":"&approxeq;","≋":"&apid;","'":"&apos;",å:"&aring;",𝒶:"&ascr;","*":"&midast;",ã:"&atilde;",ä:"&auml;","⨑":"&awint;","⫭":"&bNot;","≌":"&bcong;","϶":"&bepsi;","‵":"&bprime;","∽":"&bsim;","⋍":"&bsime;","⊽":"&barvee;","⌅":"&barwedge;","⎶":"&bbrktbrk;",б:"&bcy;","„":"&ldquor;","⦰":"&bemptyv;",β:"&beta;",ℶ:"&beth;","≬":"&twixt;",𝔟:"&bfr;","◯":"&xcirc;","⨀":"&xodot;","⨁":"&xoplus;","⨂":"&xotime;","⨆":"&xsqcup;","★":"&starf;","▽":"&xdtri;","△":"&xutri;","⨄":"&xuplus;","⤍":"&rbarr;","⧫":"&lozf;","▴":"&utrif;","▾":"&dtrif;","◂":"&ltrif;","▸":"&rtrif;","␣":"&blank;","▒":"&blk12;","░":"&blk14;","▓":"&blk34;","█":"&block;","=⃥":"&bne;","≡⃥":"&bnequiv;","⌐":"&bnot;",𝕓:"&bopf;","⋈":"&bowtie;","╗":"&boxDL;","╔":"&boxDR;","╖":"&boxDl;","╓":"&boxDr;","═":"&boxH;","╦":"&boxHD;","╩":"&boxHU;","╤":"&boxHd;","╧":"&boxHu;","╝":"&boxUL;","╚":"&boxUR;","╜":"&boxUl;","╙":"&boxUr;","║":"&boxV;","╬":"&boxVH;","╣":"&boxVL;","╠":"&boxVR;","╫":"&boxVh;","╢":"&boxVl;","╟":"&boxVr;","⧉":"&boxbox;","╕":"&boxdL;","╒":"&boxdR;","┐":"&boxdl;","┌":"&boxdr;","╥":"&boxhD;","╨":"&boxhU;","┬":"&boxhd;","┴":"&boxhu;","⊟":"&minusb;","⊞":"&plusb;","⊠":"&timesb;","╛":"&boxuL;","╘":"&boxuR;","┘":"&boxul;","└":"&boxur;","│":"&boxv;","╪":"&boxvH;","╡":"&boxvL;","╞":"&boxvR;","┼":"&boxvh;","┤":"&boxvl;","├":"&boxvr;","¦":"&brvbar;",𝒷:"&bscr;","⁏":"&bsemi;","\\":"&bsol;","⧅":"&bsolb;","⟈":"&bsolhsub;","•":"&bullet;","⪮":"&bumpE;",ć:"&cacute;","∩":"&cap;","⩄":"&capand;","⩉":"&capbrcup;","⩋":"&capcap;","⩇":"&capcup;","⩀":"&capdot;","∩︀":"&caps;","⁁":"&caret;","⩍":"&ccaps;",č:"&ccaron;",ç:"&ccedil;",ĉ:"&ccirc;","⩌":"&ccups;","⩐":"&ccupssm;",ċ:"&cdot;","⦲":"&cemptyv;","¢":"&cent;",𝔠:"&cfr;",ч:"&chcy;","✓":"&checkmark;",χ:"&chi;","○":"&cir;","⧃":"&cirE;",ˆ:"&circ;","≗":"&cire;","↺":"&olarr;","↻":"&orarr;","Ⓢ":"&oS;","⊛":"&oast;","⊚":"&ocir;","⊝":"&odash;","⨐":"&cirfnint;","⫯":"&cirmid;","⧂":"&cirscir;","♣":"&clubsuit;",":":"&colon;",",":"&comma;","@":"&commat;","∁":"&complement;","⩭":"&congdot;",𝕔:"&copf;","℗":"&copysr;","↵":"&crarr;","✗":"&cross;",𝒸:"&cscr;","⫏":"&csub;","⫑":"&csube;","⫐":"&csup;","⫒":"&csupe;","⋯":"&ctdot;","⤸":"&cudarrl;","⤵":"&cudarrr;","⋞":"&curlyeqprec;","⋟":"&curlyeqsucc;","↶":"&curvearrowleft;","⤽":"&cularrp;","∪":"&cup;","⩈":"&cupbrcap;","⩆":"&cupcap;","⩊":"&cupcup;","⊍":"&cupdot;","⩅":"&cupor;","∪︀":"&cups;","↷":"&curvearrowright;","⤼":"&curarrm;","⋎":"&cuvee;","⋏":"&cuwed;","¤":"&curren;","∱":"&cwint;","⌭":"&cylcty;","⥥":"&dHar;","†":"&dagger;",ℸ:"&daleth;","‐":"&hyphen;","⤏":"&rBarr;",ď:"&dcaron;",д:"&dcy;","⇊":"&downdownarrows;","⩷":"&eDDot;","°":"&deg;",δ:"&delta;","⦱":"&demptyv;","⥿":"&dfisht;",𝔡:"&dfr;","♦":"&diams;",ϝ:"&gammad;","⋲":"&disin;","÷":"&divide;","⋇":"&divonx;",ђ:"&djcy;","⌞":"&llcorner;","⌍":"&dlcrop;",$:"&dollar;",𝕕:"&dopf;","≑":"&eDot;","∸":"&minusd;","∔":"&plusdo;","⊡":"&sdotb;","⌟":"&lrcorner;","⌌":"&drcrop;",𝒹:"&dscr;",ѕ:"&dscy;","⧶":"&dsol;",đ:"&dstrok;","⋱":"&dtdot;","▿":"&triangledown;","⦦":"&dwangle;",џ:"&dzcy;","⟿":"&dzigrarr;",é:"&eacute;","⩮":"&easter;",ě:"&ecaron;","≖":"&eqcirc;",ê:"&ecirc;","≕":"&eqcolon;",э:"&ecy;",ė:"&edot;","≒":"&fallingdotseq;",𝔢:"&efr;","⪚":"&eg;",è:"&egrave;","⪖":"&eqslantgtr;","⪘":"&egsdot;","⪙":"&el;","⏧":"&elinters;",ℓ:"&ell;","⪕":"&eqslantless;","⪗":"&elsdot;",ē:"&emacr;","∅":"&varnothing;"," ":"&emsp13;"," ":"&emsp14;"," ":"&emsp;",ŋ:"&eng;"," ":"&ensp;",ę:"&eogon;",𝕖:"&eopf;","⋕":"&epar;","⧣":"&eparsl;","⩱":"&eplus;",ε:"&epsilon;",ϵ:"&varepsilon;","=":"&equals;","≟":"&questeq;","⩸":"&equivDD;","⧥":"&eqvparsl;","≓":"&risingdotseq;","⥱":"&erarr;",ℯ:"&escr;",η:"&eta;",ð:"&eth;",ë:"&euml;","€":"&euro;","!":"&excl;",ф:"&fcy;","♀":"&female;",ﬃ:"&ffilig;",ﬀ:"&fflig;",ﬄ:"&ffllig;",𝔣:"&ffr;",ﬁ:"&filig;",fj:"&fjlig;","♭":"&flat;",ﬂ:"&fllig;","▱":"&fltns;",ƒ:"&fnof;",𝕗:"&fopf;","⋔":"&pitchfork;","⫙":"&forkv;","⨍":"&fpartint;","½":"&half;","⅓":"&frac13;","¼":"&frac14;","⅕":"&frac15;","⅙":"&frac16;","⅛":"&frac18;","⅔":"&frac23;","⅖":"&frac25;","¾":"&frac34;","⅗":"&frac35;","⅜":"&frac38;","⅘":"&frac45;","⅚":"&frac56;","⅝":"&frac58;","⅞":"&frac78;","⁄":"&frasl;","⌢":"&sfrown;",𝒻:"&fscr;","⪌":"&gtreqqless;",ǵ:"&gacute;",γ:"&gamma;","⪆":"&gtrapprox;",ğ:"&gbreve;",ĝ:"&gcirc;",г:"&gcy;",ġ:"&gdot;","⪩":"&gescc;","⪀":"&gesdot;","⪂":"&gesdoto;","⪄":"&gesdotol;","⋛︀":"&gesl;","⪔":"&gesles;",𝔤:"&gfr;",ℷ:"&gimel;",ѓ:"&gjcy;","⪒":"&glE;","⪥":"&gla;","⪤":"&glj;","≩":"&gneqq;","⪊":"&gnapprox;","⪈":"&gneq;","⋧":"&gnsim;",𝕘:"&gopf;",ℊ:"&gscr;","⪎":"&gsime;","⪐":"&gsiml;","⪧":"&gtcc;","⩺":"&gtcir;","⋗":"&gtrdot;","⦕":"&gtlPar;","⩼":"&gtquest;","⥸":"&gtrarr;","≩︀":"&gvnE;",ъ:"&hardcy;","⥈":"&harrcir;","↭":"&leftrightsquigarrow;",ℏ:"&plankv;",ĥ:"&hcirc;","♥":"&heartsuit;","…":"&mldr;","⊹":"&hercon;",𝔥:"&hfr;","⤥":"&searhk;","⤦":"&swarhk;","⇿":"&hoarr;","∻":"&homtht;","↩":"&larrhk;","↪":"&rarrhk;",𝕙:"&hopf;","―":"&horbar;",𝒽:"&hscr;",ħ:"&hstrok;","⁃":"&hybull;",í:"&iacute;",î:"&icirc;",и:"&icy;",е:"&iecy;","¡":"&iexcl;",𝔦:"&ifr;",ì:"&igrave;","⨌":"&qint;","∭":"&tint;","⧜":"&iinfin;","℩":"&iiota;",ĳ:"&ijlig;",ī:"&imacr;",ı:"&inodot;","⊷":"&imof;",Ƶ:"&imped;","℅":"&incare;","∞":"&infin;","⧝":"&infintie;","⊺":"&intercal;","⨗":"&intlarhk;","⨼":"&iprod;",ё:"&iocy;",į:"&iogon;",𝕚:"&iopf;",ι:"&iota;","¿":"&iquest;",𝒾:"&iscr;","⋹":"&isinE;","⋵":"&isindot;","⋴":"&isins;","⋳":"&isinsv;",ĩ:"&itilde;",і:"&iukcy;",ï:"&iuml;",ĵ:"&jcirc;",й:"&jcy;",𝔧:"&jfr;",ȷ:"&jmath;",𝕛:"&jopf;",𝒿:"&jscr;",ј:"&jsercy;",є:"&jukcy;",κ:"&kappa;",ϰ:"&varkappa;",ķ:"&kcedil;",к:"&kcy;",𝔨:"&kfr;",ĸ:"&kgreen;",х:"&khcy;",ќ:"&kjcy;",𝕜:"&kopf;",𝓀:"&kscr;","⤛":"&lAtail;","⤎":"&lBarr;","⪋":"&lesseqqgtr;","⥢":"&lHar;",ĺ:"&lacute;","⦴":"&laemptyv;",λ:"&lambda;","⦑":"&langd;","⪅":"&lessapprox;","«":"&laquo;","⤟":"&larrbfs;","⤝":"&larrfs;","↫":"&looparrowleft;","⤹":"&larrpl;","⥳":"&larrsim;","↢":"&leftarrowtail;","⪫":"&lat;","⤙":"&latail;","⪭":"&late;","⪭︀":"&lates;","⤌":"&lbarr;","❲":"&lbbrk;","{":"&lcub;","[":"&lsqb;","⦋":"&lbrke;","⦏":"&lbrksld;","⦍":"&lbrkslu;",ľ:"&lcaron;",ļ:"&lcedil;",л:"&lcy;","⤶":"&ldca;","⥧":"&ldrdhar;","⥋":"&ldrushar;","↲":"&ldsh;","≤":"&leq;","⇇":"&llarr;","⋋":"&lthree;","⪨":"&lescc;","⩿":"&lesdot;","⪁":"&lesdoto;","⪃":"&lesdotor;","⋚︀":"&lesg;","⪓":"&lesges;","⋖":"&ltdot;","⥼":"&lfisht;",𝔩:"&lfr;","⪑":"&lgE;","⥪":"&lharul;","▄":"&lhblk;",љ:"&ljcy;","⥫":"&llhard;","◺":"&lltri;",ŀ:"&lmidot;","⎰":"&lmoustache;","≨":"&lneqq;","⪉":"&lnapprox;","⪇":"&lneq;","⋦":"&lnsim;","⟬":"&loang;","⇽":"&loarr;","⟼":"&xmap;","↬":"&rarrlp;","⦅":"&lopar;",𝕝:"&lopf;","⨭":"&loplus;","⨴":"&lotimes;","∗":"&lowast;","◊":"&lozenge;","(":"&lpar;","⦓":"&lparlt;","⥭":"&lrhard;","‎":"&lrm;","⊿":"&lrtri;","‹":"&lsaquo;",𝓁:"&lscr;","⪍":"&lsime;","⪏":"&lsimg;","‚":"&sbquo;",ł:"&lstrok;","⪦":"&ltcc;","⩹":"&ltcir;","⋉":"&ltimes;","⥶":"&ltlarr;","⩻":"&ltquest;","⦖":"&ltrPar;","◃":"&triangleleft;","⥊":"&lurdshar;","⥦":"&luruhar;","≨︀":"&lvnE;","∺":"&mDDot;","¯":"&strns;","♂":"&male;","✠":"&maltese;","▮":"&marker;","⨩":"&mcomma;",м:"&mcy;","—":"&mdash;",𝔪:"&mfr;","℧":"&mho;",µ:"&micro;","⫰":"&midcir;","−":"&minus;","⨪":"&minusdu;","⫛":"&mlcp;","⊧":"&models;",𝕞:"&mopf;",𝓂:"&mscr;",μ:"&mu;","⊸":"&mumap;","⋙̸":"&nGg;","≫⃒":"&nGt;","⇍":"&nlArr;","⇎":"&nhArr;","⋘̸":"&nLl;","≪⃒":"&nLt;","⇏":"&nrArr;","⊯":"&nVDash;","⊮":"&nVdash;",ń:"&nacute;","∠⃒":"&nang;","⩰̸":"&napE;","≋̸":"&napid;",ŉ:"&napos;","♮":"&natural;","⩃":"&ncap;",ň:"&ncaron;",ņ:"&ncedil;","⩭̸":"&ncongdot;","⩂":"&ncup;",н:"&ncy;","–":"&ndash;","⇗":"&neArr;","⤤":"&nearhk;","≐̸":"&nedot;","⤨":"&toea;",𝔫:"&nfr;","↮":"&nleftrightarrow;","⫲":"&nhpar;","⋼":"&nis;","⋺":"&nisd;",њ:"&njcy;","≦̸":"&nleqq;","↚":"&nleftarrow;","‥":"&nldr;",𝕟:"&nopf;","¬":"&not;","⋹̸":"&notinE;","⋵̸":"&notindot;","⋷":"&notinvb;","⋶":"&notinvc;","⋾":"&notnivb;","⋽":"&notnivc;","⫽⃥":"&nparsl;","∂̸":"&npart;","⨔":"&npolint;","↛":"&nrightarrow;","⤳̸":"&nrarrc;","↝̸":"&nrarrw;",𝓃:"&nscr;","⊄":"&nsub;","⫅̸":"&nsubseteqq;","⊅":"&nsup;","⫆̸":"&nsupseteqq;",ñ:"&ntilde;",ν:"&nu;","#":"&num;","№":"&numero;"," ":"&numsp;","⊭":"&nvDash;","⤄":"&nvHarr;","≍⃒":"&nvap;","⊬":"&nvdash;","≥⃒":"&nvge;",">⃒":"&nvgt;","⧞":"&nvinfin;","⤂":"&nvlArr;","≤⃒":"&nvle;","<⃒":"&nvlt;","⊴⃒":"&nvltrie;","⤃":"&nvrArr;","⊵⃒":"&nvrtrie;","∼⃒":"&nvsim;","⇖":"&nwArr;","⤣":"&nwarhk;","⤧":"&nwnear;",ó:"&oacute;",ô:"&ocirc;",о:"&ocy;",ő:"&odblac;","⨸":"&odiv;","⦼":"&odsold;",œ:"&oelig;","⦿":"&ofcir;",𝔬:"&ofr;","˛":"&ogon;",ò:"&ograve;","⧁":"&ogt;","⦵":"&ohbar;","⦾":"&olcir;","⦻":"&olcross;","⧀":"&olt;",ō:"&omacr;",ω:"&omega;",ο:"&omicron;","⦶":"&omid;",𝕠:"&oopf;","⦷":"&opar;","⦹":"&operp;","∨":"&vee;","⩝":"&ord;",ℴ:"&oscr;",ª:"&ordf;",º:"&ordm;","⊶":"&origof;","⩖":"&oror;","⩗":"&orslope;","⩛":"&orv;",ø:"&oslash;","⊘":"&osol;",õ:"&otilde;","⨶":"&otimesas;",ö:"&ouml;","⌽":"&ovbar;","¶":"&para;","⫳":"&parsim;","⫽":"&parsl;",п:"&pcy;","%":"&percnt;",".":"&period;","‰":"&permil;","‱":"&pertenk;",𝔭:"&pfr;",φ:"&phi;",ϕ:"&varphi;","☎":"&phone;",π:"&pi;",ϖ:"&varpi;",ℎ:"&planckh;","+":"&plus;","⨣":"&plusacir;","⨢":"&pluscir;","⨥":"&plusdu;","⩲":"&pluse;","⨦":"&plussim;","⨧":"&plustwo;","⨕":"&pointint;",𝕡:"&popf;","£":"&pound;","⪳":"&prE;","⪷":"&precapprox;","⪹":"&prnap;","⪵":"&prnE;","⋨":"&prnsim;","′":"&prime;","⌮":"&profalar;","⌒":"&profline;","⌓":"&profsurf;","⊰":"&prurel;",𝓅:"&pscr;",ψ:"&psi;"," ":"&puncsp;",𝔮:"&qfr;",𝕢:"&qopf;","⁗":"&qprime;",𝓆:"&qscr;","⨖":"&quatint;","?":"&quest;","⤜":"&rAtail;","⥤":"&rHar;","∽̱":"&race;",ŕ:"&racute;","⦳":"&raemptyv;","⦒":"&rangd;","⦥":"&range;","»":"&raquo;","⥵":"&rarrap;","⤠":"&rarrbfs;","⤳":"&rarrc;","⤞":"&rarrfs;","⥅":"&rarrpl;","⥴":"&rarrsim;","↣":"&rightarrowtail;","↝":"&rightsquigarrow;","⤚":"&ratail;","∶":"&ratio;","❳":"&rbbrk;","}":"&rcub;","]":"&rsqb;","⦌":"&rbrke;","⦎":"&rbrksld;","⦐":"&rbrkslu;",ř:"&rcaron;",ŗ:"&rcedil;",р:"&rcy;","⤷":"&rdca;","⥩":"&rdldhar;","↳":"&rdsh;","▭":"&rect;","⥽":"&rfisht;",𝔯:"&rfr;","⥬":"&rharul;",ρ:"&rho;",ϱ:"&varrho;","⇉":"&rrarr;","⋌":"&rthree;","˚":"&ring;","‏":"&rlm;","⎱":"&rmoustache;","⫮":"&rnmid;","⟭":"&roang;","⇾":"&roarr;","⦆":"&ropar;",𝕣:"&ropf;","⨮":"&roplus;","⨵":"&rotimes;",")":"&rpar;","⦔":"&rpargt;","⨒":"&rppolint;","›":"&rsaquo;",𝓇:"&rscr;","⋊":"&rtimes;","▹":"&triangleright;","⧎":"&rtriltri;","⥨":"&ruluhar;","℞":"&rx;",ś:"&sacute;","⪴":"&scE;","⪸":"&succapprox;",š:"&scaron;",ş:"&scedil;",ŝ:"&scirc;","⪶":"&succneqq;","⪺":"&succnapprox;","⋩":"&succnsim;","⨓":"&scpolint;",с:"&scy;","⋅":"&sdot;","⩦":"&sdote;","⇘":"&seArr;","§":"&sect;",";":"&semi;","⤩":"&tosa;","✶":"&sext;",𝔰:"&sfr;","♯":"&sharp;",щ:"&shchcy;",ш:"&shcy;","­":"&shy;",σ:"&sigma;",ς:"&varsigma;","⩪":"&simdot;","⪞":"&simg;","⪠":"&simgE;","⪝":"&siml;","⪟":"&simlE;","≆":"&simne;","⨤":"&simplus;","⥲":"&simrarr;","⨳":"&smashp;","⧤":"&smeparsl;","⌣":"&ssmile;","⪪":"&smt;","⪬":"&smte;","⪬︀":"&smtes;",ь:"&softcy;","/":"&sol;","⧄":"&solb;","⌿":"&solbar;",𝕤:"&sopf;","♠":"&spadesuit;","⊓︀":"&sqcaps;","⊔︀":"&sqcups;",𝓈:"&sscr;","☆":"&star;","⊂":"&subset;","⫅":"&subseteqq;","⪽":"&subdot;","⫃":"&subedot;","⫁":"&submult;","⫋":"&subsetneqq;","⊊":"&subsetneq;","⪿":"&subplus;","⥹":"&subrarr;","⫇":"&subsim;","⫕":"&subsub;","⫓":"&subsup;","♪":"&sung;","¹":"&sup1;","²":"&sup2;","³":"&sup3;","⫆":"&supseteqq;","⪾":"&supdot;","⫘":"&supdsub;","⫄":"&supedot;","⟉":"&suphsol;","⫗":"&suphsub;","⥻":"&suplarr;","⫂":"&supmult;","⫌":"&supsetneqq;","⊋":"&supsetneq;","⫀":"&supplus;","⫈":"&supsim;","⫔":"&supsub;","⫖":"&supsup;","⇙":"&swArr;","⤪":"&swnwar;",ß:"&szlig;","⌖":"&target;",τ:"&tau;",ť:"&tcaron;",ţ:"&tcedil;",т:"&tcy;","⌕":"&telrec;",𝔱:"&tfr;",θ:"&theta;",ϑ:"&vartheta;",þ:"&thorn;","×":"&times;","⨱":"&timesbar;","⨰":"&timesd;","⌶":"&topbot;","⫱":"&topcir;",𝕥:"&topf;","⫚":"&topfork;","‴":"&tprime;","▵":"&utri;","≜":"&trie;","◬":"&tridot;","⨺":"&triminus;","⨹":"&triplus;","⧍":"&trisb;","⨻":"&tritime;","⏢":"&trpezium;",𝓉:"&tscr;",ц:"&tscy;",ћ:"&tshcy;",ŧ:"&tstrok;","⥣":"&uHar;",ú:"&uacute;",ў:"&ubrcy;",ŭ:"&ubreve;",û:"&ucirc;",у:"&ucy;",ű:"&udblac;","⥾":"&ufisht;",𝔲:"&ufr;",ù:"&ugrave;","▀":"&uhblk;","⌜":"&ulcorner;","⌏":"&ulcrop;","◸":"&ultri;",ū:"&umacr;",ų:"&uogon;",𝕦:"&uopf;",υ:"&upsilon;","⇈":"&uuarr;","⌝":"&urcorner;","⌎":"&urcrop;",ů:"&uring;","◹":"&urtri;",𝓊:"&uscr;","⋰":"&utdot;",ũ:"&utilde;",ü:"&uuml;","⦧":"&uwangle;","⫨":"&vBar;","⫩":"&vBarv;","⦜":"&vangrt;","⊊︀":"&vsubne;","⫋︀":"&vsubnE;","⊋︀":"&vsupne;","⫌︀":"&vsupnE;",в:"&vcy;","⊻":"&veebar;","≚":"&veeeq;","⋮":"&vellip;",𝔳:"&vfr;",𝕧:"&vopf;",𝓋:"&vscr;","⦚":"&vzigzag;",ŵ:"&wcirc;","⩟":"&wedbar;","≙":"&wedgeq;",℘:"&wp;",𝔴:"&wfr;",𝕨:"&wopf;",𝓌:"&wscr;",𝔵:"&xfr;",ξ:"&xi;","⋻":"&xnis;",𝕩:"&xopf;",𝓍:"&xscr;",ý:"&yacute;",я:"&yacy;",ŷ:"&ycirc;",ы:"&ycy;","¥":"&yen;",𝔶:"&yfr;",ї:"&yicy;",𝕪:"&yopf;",𝓎:"&yscr;",ю:"&yucy;",ÿ:"&yuml;",ź:"&zacute;",ž:"&zcaron;",з:"&zcy;",ż:"&zdot;",ζ:"&zeta;",𝔷:"&zfr;",ж:"&zhcy;","⇝":"&zigrarr;",𝕫:"&zopf;",𝓏:"&zscr;","‍":"&zwj;","‌":"&zwnj;"}}}},2642:(e,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.numericUnicodeMap={0:65533,128:8364,130:8218,131:402,132:8222,133:8230,134:8224,135:8225,136:710,137:8240,138:352,139:8249,140:338,142:381,145:8216,146:8217,147:8220,148:8221,149:8226,150:8211,151:8212,152:732,153:8482,154:353,155:8250,156:339,158:382,159:376}},9726:(e,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.fromCodePoint=String.fromCodePoint||function(e){return String.fromCharCode(Math.floor((e-65536)/1024)+55296,(e-65536)%1024+56320)},r.getCodePoint=String.prototype.codePointAt?function(e,r){return e.codePointAt(r)}:function(e,r){return 1024*(e.charCodeAt(r)-55296)+e.charCodeAt(r+1)-56320+65536},r.highSurrogateFrom=55296,r.highSurrogateTo=56319},8552:(e,r,t)=>{var n=t(852)(t(5639),"DataView");e.exports=n},1989:(e,r,t)=>{var n=t(1789),o=t(401),i=t(7667),a=t(1327),s=t(1866);function c(e){var r=-1,t=null==e?0:e.length;for(this.clear();++r<t;){var n=e[r];this.set(n[0],n[1])}}c.prototype.clear=n,c.prototype.delete=o,c.prototype.get=i,c.prototype.has=a,c.prototype.set=s,e.exports=c},8407:(e,r,t)=>{var n=t(7040),o=t(4125),i=t(2117),a=t(7518),s=t(4705);function c(e){var r=-1,t=null==e?0:e.length;for(this.clear();++r<t;){var n=e[r];this.set(n[0],n[1])}}c.prototype.clear=n,c.prototype.delete=o,c.prototype.get=i,c.prototype.has=a,c.prototype.set=s,e.exports=c},7071:(e,r,t)=>{var n=t(852)(t(5639),"Map");e.exports=n},3369:(e,r,t)=>{var n=t(4785),o=t(1285),i=t(6e3),a=t(9916),s=t(5265);function c(e){var r=-1,t=null==e?0:e.length;for(this.clear();++r<t;){var n=e[r];this.set(n[0],n[1])}}c.prototype.clear=n,c.prototype.delete=o,c.prototype.get=i,c.prototype.has=a,c.prototype.set=s,e.exports=c},3818:(e,r,t)=>{var n=t(852)(t(5639),"Promise");e.exports=n},8525:(e,r,t)=>{var n=t(852)(t(5639),"Set");e.exports=n},8668:(e,r,t)=>{var n=t(3369),o=t(619),i=t(2385);function a(e){var r=-1,t=null==e?0:e.length;for(this.__data__=new n;++r<t;)this.add(e[r])}a.prototype.add=a.prototype.push=o,a.prototype.has=i,e.exports=a},6384:(e,r,t)=>{var n=t(8407),o=t(7465),i=t(3779),a=t(7599),s=t(4758),c=t(4309);function u(e){var r=this.__data__=new n(e);this.size=r.size}u.prototype.clear=o,u.prototype.delete=i,u.prototype.get=a,u.prototype.has=s,u.prototype.set=c,e.exports=u},2705:(e,r,t)=>{var n=t(5639).Symbol;e.exports=n},1149:(e,r,t)=>{var n=t(5639).Uint8Array;e.exports=n},577:(e,r,t)=>{var n=t(852)(t(5639),"WeakMap");e.exports=n},6874:e=>{e.exports=function(e,r,t){switch(t.length){case 0:return e.call(r);case 1:return e.call(r,t[0]);case 2:return e.call(r,t[0],t[1]);case 3:return e.call(r,t[0],t[1],t[2])}return e.apply(r,t)}},7412:e=>{e.exports=function(e,r){for(var t=-1,n=null==e?0:e.length;++t<n&&!1!==r(e[t],t,e););return e}},4963:e=>{e.exports=function(e,r){for(var t=-1,n=null==e?0:e.length,o=0,i=[];++t<n;){var a=e[t];r(a,t,e)&&(i[o++]=a)}return i}},7443:(e,r,t)=>{var n=t(2118);e.exports=function(e,r){return!!(null==e?0:e.length)&&n(e,r,0)>-1}},1196:e=>{e.exports=function(e,r,t){for(var n=-1,o=null==e?0:e.length;++n<o;)if(t(r,e[n]))return!0;return!1}},4636:(e,r,t)=>{var n=t(2545),o=t(5694),i=t(1469),a=t(4144),s=t(5776),c=t(6719),u=Object.prototype.hasOwnProperty;e.exports=function(e,r){var t=i(e),l=!t&&o(e),p=!t&&!l&&a(e),d=!t&&!l&&!p&&c(e),f=t||l||p||d,h=f?n(e.length,String):[],m=h.length;for(var v in e)!r&&!u.call(e,v)||f&&("length"==v||p&&("offset"==v||"parent"==v)||d&&("buffer"==v||"byteLength"==v||"byteOffset"==v)||s(v,m))||h.push(v);return h}},9932:e=>{e.exports=function(e,r){for(var t=-1,n=null==e?0:e.length,o=Array(n);++t<n;)o[t]=r(e[t],t,e);return o}},2488:e=>{e.exports=function(e,r){for(var t=-1,n=r.length,o=e.length;++t<n;)e[o+t]=r[t];return e}},2663:e=>{e.exports=function(e,r,t,n){var o=-1,i=null==e?0:e.length;for(n&&i&&(t=e[++o]);++o<i;)t=r(t,e[o],o,e);return t}},2908:e=>{e.exports=function(e,r){for(var t=-1,n=null==e?0:e.length;++t<n;)if(r(e[t],t,e))return!0;return!1}},8983:(e,r,t)=>{var n=t(371)("length");e.exports=n},4865:(e,r,t)=>{var n=t(9465),o=t(7813),i=Object.prototype.hasOwnProperty;e.exports=function(e,r,t){var a=e[r];i.call(e,r)&&o(a,t)&&(void 0!==t||r in e)||n(e,r,t)}},8470:(e,r,t)=>{var n=t(7813);e.exports=function(e,r){for(var t=e.length;t--;)if(n(e[t][0],r))return t;return-1}},4037:(e,r,t)=>{var n=t(8363),o=t(3674);e.exports=function(e,r){return e&&n(r,o(r),e)}},3886:(e,r,t)=>{var n=t(8363),o=t(1704);e.exports=function(e,r){return e&&n(r,o(r),e)}},9465:(e,r,t)=>{var n=t(8777);e.exports=function(e,r,t){"__proto__"==r&&n?n(e,r,{configurable:!0,enumerable:!0,value:t,writable:!0}):e[r]=t}},5990:(e,r,t)=>{var n=t(6384),o=t(7412),i=t(4865),a=t(4037),s=t(3886),c=t(4626),u=t(278),l=t(8805),p=t(1911),d=t(8234),f=t(6904),h=t(4160),m=t(3824),v=t(9148),g=t(8517),b=t(1469),y=t(4144),w=t(6688),_=t(3218),x=t(2928),E=t(3674),A=t(1704),q="[object Arguments]",C="[object Function]",O="[object Object]",D={};D[q]=D["[object Array]"]=D["[object ArrayBuffer]"]=D["[object DataView]"]=D["[object Boolean]"]=D["[object Date]"]=D["[object Float32Array]"]=D["[object Float64Array]"]=D["[object Int8Array]"]=D["[object Int16Array]"]=D["[object Int32Array]"]=D["[object Map]"]=D["[object Number]"]=D[O]=D["[object RegExp]"]=D["[object Set]"]=D["[object String]"]=D["[object Symbol]"]=D["[object Uint8Array]"]=D["[object Uint8ClampedArray]"]=D["[object Uint16Array]"]=D["[object Uint32Array]"]=!0,D["[object Error]"]=D[C]=D["[object WeakMap]"]=!1,e.exports=function e(r,t,j,S,T,L){var k,N=1&t,P=2&t,R=4&t;if(j&&(k=T?j(r,S,T,L):j(r)),void 0!==k)return k;if(!_(r))return r;var I=b(r);if(I){if(k=m(r),!N)return u(r,k)}else{var F=h(r),U=F==C||"[object GeneratorFunction]"==F;if(y(r))return c(r,N);if(F==O||F==q||U&&!T){if(k=P||U?{}:g(r),!N)return P?p(r,s(k,r)):l(r,a(k,r))}else{if(!D[F])return T?r:{};k=v(r,F,N)}}L||(L=new n);var B=L.get(r);if(B)return B;L.set(r,k),x(r)?r.forEach((function(n){k.add(e(n,t,j,n,r,L))})):w(r)&&r.forEach((function(n,o){k.set(o,e(n,t,j,o,r,L))}));var H=I?void 0:(R?P?f:d:P?A:E)(r);return o(H||r,(function(n,o){H&&(n=r[o=n]),i(k,o,e(n,t,j,o,r,L))})),k}},3118:(e,r,t)=>{var n=t(3218),o=Object.create,i=function(){function e(){}return function(r){if(!n(r))return{};if(o)return o(r);e.prototype=r;var t=new e;return e.prototype=void 0,t}}();e.exports=i},9881:(e,r,t)=>{var n=t(7816),o=t(9291)(n);e.exports=o},760:(e,r,t)=>{var n=t(9881);e.exports=function(e,r){var t=[];return n(e,(function(e,n,o){r(e,n,o)&&t.push(e)})),t}},1848:e=>{e.exports=function(e,r,t,n){for(var o=e.length,i=t+(n?1:-1);n?i--:++i<o;)if(r(e[i],i,e))return i;return-1}},1078:(e,r,t)=>{var n=t(2488),o=t(7285);e.exports=function e(r,t,i,a,s){var c=-1,u=r.length;for(i||(i=o),s||(s=[]);++c<u;){var l=r[c];t>0&&i(l)?t>1?e(l,t-1,i,a,s):n(s,l):a||(s[s.length]=l)}return s}},8483:(e,r,t)=>{var n=t(5063)();e.exports=n},7816:(e,r,t)=>{var n=t(8483),o=t(3674);e.exports=function(e,r){return e&&n(e,r,o)}},7786:(e,r,t)=>{var n=t(1811),o=t(327);e.exports=function(e,r){for(var t=0,i=(r=n(r,e)).length;null!=e&&t<i;)e=e[o(r[t++])];return t&&t==i?e:void 0}},8866:(e,r,t)=>{var n=t(2488),o=t(1469);e.exports=function(e,r,t){var i=r(e);return o(e)?i:n(i,t(e))}},4239:(e,r,t)=>{var n=t(2705),o=t(9607),i=t(2333),a=n?n.toStringTag:void 0;e.exports=function(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":a&&a in Object(e)?o(e):i(e)}},8565:e=>{var r=Object.prototype.hasOwnProperty;e.exports=function(e,t){return null!=e&&r.call(e,t)}},13:e=>{e.exports=function(e,r){return null!=e&&r in Object(e)}},2118:(e,r,t)=>{var n=t(1848),o=t(2722),i=t(2351);e.exports=function(e,r,t){return r==r?i(e,r,t):n(e,o,t)}},9454:(e,r,t)=>{var n=t(4239),o=t(7005);e.exports=function(e){return o(e)&&"[object Arguments]"==n(e)}},939:(e,r,t)=>{var n=t(2492),o=t(7005);e.exports=function e(r,t,i,a,s){return r===t||(null==r||null==t||!o(r)&&!o(t)?r!=r&&t!=t:n(r,t,i,a,e,s))}},2492:(e,r,t)=>{var n=t(6384),o=t(7114),i=t(8351),a=t(6096),s=t(4160),c=t(1469),u=t(4144),l=t(6719),p="[object Arguments]",d="[object Array]",f="[object Object]",h=Object.prototype.hasOwnProperty;e.exports=function(e,r,t,m,v,g){var b=c(e),y=c(r),w=b?d:s(e),_=y?d:s(r),x=(w=w==p?f:w)==f,E=(_=_==p?f:_)==f,A=w==_;if(A&&u(e)){if(!u(r))return!1;b=!0,x=!1}if(A&&!x)return g||(g=new n),b||l(e)?o(e,r,t,m,v,g):i(e,r,w,t,m,v,g);if(!(1&t)){var q=x&&h.call(e,"__wrapped__"),C=E&&h.call(r,"__wrapped__");if(q||C){var O=q?e.value():e,D=C?r.value():r;return g||(g=new n),v(O,D,t,m,g)}}return!!A&&(g||(g=new n),a(e,r,t,m,v,g))}},5588:(e,r,t)=>{var n=t(4160),o=t(7005);e.exports=function(e){return o(e)&&"[object Map]"==n(e)}},2958:(e,r,t)=>{var n=t(6384),o=t(939);e.exports=function(e,r,t,i){var a=t.length,s=a,c=!i;if(null==e)return!s;for(e=Object(e);a--;){var u=t[a];if(c&&u[2]?u[1]!==e[u[0]]:!(u[0]in e))return!1}for(;++a<s;){var l=(u=t[a])[0],p=e[l],d=u[1];if(c&&u[2]){if(void 0===p&&!(l in e))return!1}else{var f=new n;if(i)var h=i(p,d,l,e,r,f);if(!(void 0===h?o(d,p,3,i,f):h))return!1}}return!0}},2722:e=>{e.exports=function(e){return e!=e}},8458:(e,r,t)=>{var n=t(3560),o=t(5346),i=t(3218),a=t(346),s=/^\[object .+?Constructor\]$/,c=Function.prototype,u=Object.prototype,l=c.toString,p=u.hasOwnProperty,d=RegExp("^"+l.call(p).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");e.exports=function(e){return!(!i(e)||o(e))&&(n(e)?d:s).test(a(e))}},9221:(e,r,t)=>{var n=t(4160),o=t(7005);e.exports=function(e){return o(e)&&"[object Set]"==n(e)}},8749:(e,r,t)=>{var n=t(4239),o=t(1780),i=t(7005),a={};a["[object Float32Array]"]=a["[object Float64Array]"]=a["[object Int8Array]"]=a["[object Int16Array]"]=a["[object Int32Array]"]=a["[object Uint8Array]"]=a["[object Uint8ClampedArray]"]=a["[object Uint16Array]"]=a["[object Uint32Array]"]=!0,a["[object Arguments]"]=a["[object Array]"]=a["[object ArrayBuffer]"]=a["[object Boolean]"]=a["[object DataView]"]=a["[object Date]"]=a["[object Error]"]=a["[object Function]"]=a["[object Map]"]=a["[object Number]"]=a["[object Object]"]=a["[object RegExp]"]=a["[object Set]"]=a["[object String]"]=a["[object WeakMap]"]=!1,e.exports=function(e){return i(e)&&o(e.length)&&!!a[n(e)]}},7206:(e,r,t)=>{var n=t(1573),o=t(6432),i=t(6557),a=t(1469),s=t(9601);e.exports=function(e){return"function"==typeof e?e:null==e?i:"object"==typeof e?a(e)?o(e[0],e[1]):n(e):s(e)}},280:(e,r,t)=>{var n=t(5726),o=t(6916),i=Object.prototype.hasOwnProperty;e.exports=function(e){if(!n(e))return o(e);var r=[];for(var t in Object(e))i.call(e,t)&&"constructor"!=t&&r.push(t);return r}},313:(e,r,t)=>{var n=t(3218),o=t(5726),i=t(3498),a=Object.prototype.hasOwnProperty;e.exports=function(e){if(!n(e))return i(e);var r=o(e),t=[];for(var s in e)("constructor"!=s||!r&&a.call(e,s))&&t.push(s);return t}},9199:(e,r,t)=>{var n=t(9881),o=t(8612);e.exports=function(e,r){var t=-1,i=o(e)?Array(e.length):[];return n(e,(function(e,n,o){i[++t]=r(e,n,o)})),i}},1573:(e,r,t)=>{var n=t(2958),o=t(1499),i=t(2634);e.exports=function(e){var r=o(e);return 1==r.length&&r[0][2]?i(r[0][0],r[0][1]):function(t){return t===e||n(t,e,r)}}},6432:(e,r,t)=>{var n=t(939),o=t(7361),i=t(9095),a=t(5403),s=t(9162),c=t(2634),u=t(327);e.exports=function(e,r){return a(e)&&s(r)?c(u(e),r):function(t){var a=o(t,e);return void 0===a&&a===r?i(t,e):n(r,a,3)}}},371:e=>{e.exports=function(e){return function(r){return null==r?void 0:r[e]}}},9152:(e,r,t)=>{var n=t(7786);e.exports=function(e){return function(r){return n(r,e)}}},107:e=>{e.exports=function(e,r,t,n,o){return o(e,(function(e,o,i){t=n?(n=!1,e):r(t,e,o,i)})),t}},5976:(e,r,t)=>{var n=t(6557),o=t(5357),i=t(61);e.exports=function(e,r){return i(o(e,r,n),e+"")}},6560:(e,r,t)=>{var n=t(5703),o=t(8777),i=t(6557),a=o?function(e,r){return o(e,"toString",{configurable:!0,enumerable:!1,value:n(r),writable:!0})}:i;e.exports=a},2545:e=>{e.exports=function(e,r){for(var t=-1,n=Array(e);++t<e;)n[t]=r(t);return n}},531:(e,r,t)=>{var n=t(2705),o=t(9932),i=t(1469),a=t(3448),s=n?n.prototype:void 0,c=s?s.toString:void 0;e.exports=function e(r){if("string"==typeof r)return r;if(i(r))return o(r,e)+"";if(a(r))return c?c.call(r):"";var t=r+"";return"0"==t&&1/r==-Infinity?"-0":t}},1717:e=>{e.exports=function(e){return function(r){return e(r)}}},5652:(e,r,t)=>{var n=t(8668),o=t(7443),i=t(1196),a=t(4757),s=t(3593),c=t(1814);e.exports=function(e,r,t){var u=-1,l=o,p=e.length,d=!0,f=[],h=f;if(t)d=!1,l=i;else if(p>=200){var m=r?null:s(e);if(m)return c(m);d=!1,l=a,h=new n}else h=r?[]:f;e:for(;++u<p;){var v=e[u],g=r?r(v):v;if(v=t||0!==v?v:0,d&&g==g){for(var b=h.length;b--;)if(h[b]===g)continue e;r&&h.push(g),f.push(v)}else l(h,g,t)||(h!==f&&h.push(g),f.push(v))}return f}},7415:(e,r,t)=>{var n=t(9932);e.exports=function(e,r){return n(r,(function(r){return e[r]}))}},4757:e=>{e.exports=function(e,r){return e.has(r)}},4290:(e,r,t)=>{var n=t(6557);e.exports=function(e){return"function"==typeof e?e:n}},1811:(e,r,t)=>{var n=t(1469),o=t(5403),i=t(5514),a=t(9833);e.exports=function(e,r){return n(e)?e:o(e,r)?[e]:i(a(e))}},4318:(e,r,t)=>{var n=t(1149);e.exports=function(e){var r=new e.constructor(e.byteLength);return new n(r).set(new n(e)),r}},4626:(e,r,t)=>{e=t.nmd(e);var n=t(5639),o=r&&!r.nodeType&&r,i=o&&e&&!e.nodeType&&e,a=i&&i.exports===o?n.Buffer:void 0,s=a?a.allocUnsafe:void 0;e.exports=function(e,r){if(r)return e.slice();var t=e.length,n=s?s(t):new e.constructor(t);return e.copy(n),n}},7157:(e,r,t)=>{var n=t(4318);e.exports=function(e,r){var t=r?n(e.buffer):e.buffer;return new e.constructor(t,e.byteOffset,e.byteLength)}},3147:e=>{var r=/\w*$/;e.exports=function(e){var t=new e.constructor(e.source,r.exec(e));return t.lastIndex=e.lastIndex,t}},419:(e,r,t)=>{var n=t(2705),o=n?n.prototype:void 0,i=o?o.valueOf:void 0;e.exports=function(e){return i?Object(i.call(e)):{}}},7133:(e,r,t)=>{var n=t(4318);e.exports=function(e,r){var t=r?n(e.buffer):e.buffer;return new e.constructor(t,e.byteOffset,e.length)}},278:e=>{e.exports=function(e,r){var t=-1,n=e.length;for(r||(r=Array(n));++t<n;)r[t]=e[t];return r}},8363:(e,r,t)=>{var n=t(4865),o=t(9465);e.exports=function(e,r,t,i){var a=!t;t||(t={});for(var s=-1,c=r.length;++s<c;){var u=r[s],l=i?i(t[u],e[u],u,t,e):void 0;void 0===l&&(l=e[u]),a?o(t,u,l):n(t,u,l)}return t}},8805:(e,r,t)=>{var n=t(8363),o=t(9551);e.exports=function(e,r){return n(e,o(e),r)}},1911:(e,r,t)=>{var n=t(8363),o=t(1442);e.exports=function(e,r){return n(e,o(e),r)}},4429:(e,r,t)=>{var n=t(5639)["__core-js_shared__"];e.exports=n},9291:(e,r,t)=>{var n=t(8612);e.exports=function(e,r){return function(t,o){if(null==t)return t;if(!n(t))return e(t,o);for(var i=t.length,a=r?i:-1,s=Object(t);(r?a--:++a<i)&&!1!==o(s[a],a,s););return t}}},5063:e=>{e.exports=function(e){return function(r,t,n){for(var o=-1,i=Object(r),a=n(r),s=a.length;s--;){var c=a[e?s:++o];if(!1===t(i[c],c,i))break}return r}}},3593:(e,r,t)=>{var n=t(8525),o=t(308),i=t(1814),a=n&&1/i(new n([,-0]))[1]==1/0?function(e){return new n(e)}:o;e.exports=a},8777:(e,r,t)=>{var n=t(852),o=function(){try{var e=n(Object,"defineProperty");return e({},"",{}),e}catch(e){}}();e.exports=o},7114:(e,r,t)=>{var n=t(8668),o=t(2908),i=t(4757);e.exports=function(e,r,t,a,s,c){var u=1&t,l=e.length,p=r.length;if(l!=p&&!(u&&p>l))return!1;var d=c.get(e),f=c.get(r);if(d&&f)return d==r&&f==e;var h=-1,m=!0,v=2&t?new n:void 0;for(c.set(e,r),c.set(r,e);++h<l;){var g=e[h],b=r[h];if(a)var y=u?a(b,g,h,r,e,c):a(g,b,h,e,r,c);if(void 0!==y){if(y)continue;m=!1;break}if(v){if(!o(r,(function(e,r){if(!i(v,r)&&(g===e||s(g,e,t,a,c)))return v.push(r)}))){m=!1;break}}else if(g!==b&&!s(g,b,t,a,c)){m=!1;break}}return c.delete(e),c.delete(r),m}},8351:(e,r,t)=>{var n=t(2705),o=t(1149),i=t(7813),a=t(7114),s=t(8776),c=t(1814),u=n?n.prototype:void 0,l=u?u.valueOf:void 0;e.exports=function(e,r,t,n,u,p,d){switch(t){case"[object DataView]":if(e.byteLength!=r.byteLength||e.byteOffset!=r.byteOffset)return!1;e=e.buffer,r=r.buffer;case"[object ArrayBuffer]":return!(e.byteLength!=r.byteLength||!p(new o(e),new o(r)));case"[object Boolean]":case"[object Date]":case"[object Number]":return i(+e,+r);case"[object Error]":return e.name==r.name&&e.message==r.message;case"[object RegExp]":case"[object String]":return e==r+"";case"[object Map]":var f=s;case"[object Set]":var h=1&n;if(f||(f=c),e.size!=r.size&&!h)return!1;var m=d.get(e);if(m)return m==r;n|=2,d.set(e,r);var v=a(f(e),f(r),n,u,p,d);return d.delete(e),v;case"[object Symbol]":if(l)return l.call(e)==l.call(r)}return!1}},6096:(e,r,t)=>{var n=t(8234),o=Object.prototype.hasOwnProperty;e.exports=function(e,r,t,i,a,s){var c=1&t,u=n(e),l=u.length;if(l!=n(r).length&&!c)return!1;for(var p=l;p--;){var d=u[p];if(!(c?d in r:o.call(r,d)))return!1}var f=s.get(e),h=s.get(r);if(f&&h)return f==r&&h==e;var m=!0;s.set(e,r),s.set(r,e);for(var v=c;++p<l;){var g=e[d=u[p]],b=r[d];if(i)var y=c?i(b,g,d,r,e,s):i(g,b,d,e,r,s);if(!(void 0===y?g===b||a(g,b,t,i,s):y)){m=!1;break}v||(v="constructor"==d)}if(m&&!v){var w=e.constructor,_=r.constructor;w==_||!("constructor"in e)||!("constructor"in r)||"function"==typeof w&&w instanceof w&&"function"==typeof _&&_ instanceof _||(m=!1)}return s.delete(e),s.delete(r),m}},1957:(e,r,t)=>{var n="object"==typeof t.g&&t.g&&t.g.Object===Object&&t.g;e.exports=n},8234:(e,r,t)=>{var n=t(8866),o=t(9551),i=t(3674);e.exports=function(e){return n(e,i,o)}},6904:(e,r,t)=>{var n=t(8866),o=t(1442),i=t(1704);e.exports=function(e){return n(e,i,o)}},5050:(e,r,t)=>{var n=t(7019);e.exports=function(e,r){var t=e.__data__;return n(r)?t["string"==typeof r?"string":"hash"]:t.map}},1499:(e,r,t)=>{var n=t(9162),o=t(3674);e.exports=function(e){for(var r=o(e),t=r.length;t--;){var i=r[t],a=e[i];r[t]=[i,a,n(a)]}return r}},852:(e,r,t)=>{var n=t(8458),o=t(7801);e.exports=function(e,r){var t=o(e,r);return n(t)?t:void 0}},5924:(e,r,t)=>{var n=t(5569)(Object.getPrototypeOf,Object);e.exports=n},9607:(e,r,t)=>{var n=t(2705),o=Object.prototype,i=o.hasOwnProperty,a=o.toString,s=n?n.toStringTag:void 0;e.exports=function(e){var r=i.call(e,s),t=e[s];try{e[s]=void 0;var n=!0}catch(e){}var o=a.call(e);return n&&(r?e[s]=t:delete e[s]),o}},9551:(e,r,t)=>{var n=t(4963),o=t(479),i=Object.prototype.propertyIsEnumerable,a=Object.getOwnPropertySymbols,s=a?function(e){return null==e?[]:(e=Object(e),n(a(e),(function(r){return i.call(e,r)})))}:o;e.exports=s},1442:(e,r,t)=>{var n=t(2488),o=t(5924),i=t(9551),a=t(479),s=Object.getOwnPropertySymbols?function(e){for(var r=[];e;)n(r,i(e)),e=o(e);return r}:a;e.exports=s},4160:(e,r,t)=>{var n=t(8552),o=t(7071),i=t(3818),a=t(8525),s=t(577),c=t(4239),u=t(346),l="[object Map]",p="[object Promise]",d="[object Set]",f="[object WeakMap]",h="[object DataView]",m=u(n),v=u(o),g=u(i),b=u(a),y=u(s),w=c;(n&&w(new n(new ArrayBuffer(1)))!=h||o&&w(new o)!=l||i&&w(i.resolve())!=p||a&&w(new a)!=d||s&&w(new s)!=f)&&(w=function(e){var r=c(e),t="[object Object]"==r?e.constructor:void 0,n=t?u(t):"";if(n)switch(n){case m:return h;case v:return l;case g:return p;case b:return d;case y:return f}return r}),e.exports=w},7801:e=>{e.exports=function(e,r){return null==e?void 0:e[r]}},222:(e,r,t)=>{var n=t(1811),o=t(5694),i=t(1469),a=t(5776),s=t(1780),c=t(327);e.exports=function(e,r,t){for(var u=-1,l=(r=n(r,e)).length,p=!1;++u<l;){var d=c(r[u]);if(!(p=null!=e&&t(e,d)))break;e=e[d]}return p||++u!=l?p:!!(l=null==e?0:e.length)&&s(l)&&a(d,l)&&(i(e)||o(e))}},2689:e=>{var r=RegExp("[\\u200d\\ud800-\\udfff\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff\\ufe0e\\ufe0f]");e.exports=function(e){return r.test(e)}},1789:(e,r,t)=>{var n=t(4536);e.exports=function(){this.__data__=n?n(null):{},this.size=0}},401:e=>{e.exports=function(e){var r=this.has(e)&&delete this.__data__[e];return this.size-=r?1:0,r}},7667:(e,r,t)=>{var n=t(4536),o=Object.prototype.hasOwnProperty;e.exports=function(e){var r=this.__data__;if(n){var t=r[e];return"__lodash_hash_undefined__"===t?void 0:t}return o.call(r,e)?r[e]:void 0}},1327:(e,r,t)=>{var n=t(4536),o=Object.prototype.hasOwnProperty;e.exports=function(e){var r=this.__data__;return n?void 0!==r[e]:o.call(r,e)}},1866:(e,r,t)=>{var n=t(4536);e.exports=function(e,r){var t=this.__data__;return this.size+=this.has(e)?0:1,t[e]=n&&void 0===r?"__lodash_hash_undefined__":r,this}},3824:e=>{var r=Object.prototype.hasOwnProperty;e.exports=function(e){var t=e.length,n=new e.constructor(t);return t&&"string"==typeof e[0]&&r.call(e,"index")&&(n.index=e.index,n.input=e.input),n}},9148:(e,r,t)=>{var n=t(4318),o=t(7157),i=t(3147),a=t(419),s=t(7133);e.exports=function(e,r,t){var c=e.constructor;switch(r){case"[object ArrayBuffer]":return n(e);case"[object Boolean]":case"[object Date]":return new c(+e);case"[object DataView]":return o(e,t);case"[object Float32Array]":case"[object Float64Array]":case"[object Int8Array]":case"[object Int16Array]":case"[object Int32Array]":case"[object Uint8Array]":case"[object Uint8ClampedArray]":case"[object Uint16Array]":case"[object Uint32Array]":return s(e,t);case"[object Map]":case"[object Set]":return new c;case"[object Number]":case"[object String]":return new c(e);case"[object RegExp]":return i(e);case"[object Symbol]":return a(e)}}},8517:(e,r,t)=>{var n=t(3118),o=t(5924),i=t(5726);e.exports=function(e){return"function"!=typeof e.constructor||i(e)?{}:n(o(e))}},7285:(e,r,t)=>{var n=t(2705),o=t(5694),i=t(1469),a=n?n.isConcatSpreadable:void 0;e.exports=function(e){return i(e)||o(e)||!!(a&&e&&e[a])}},5776:e=>{var r=/^(?:0|[1-9]\d*)$/;e.exports=function(e,t){var n=typeof e;return!!(t=null==t?9007199254740991:t)&&("number"==n||"symbol"!=n&&r.test(e))&&e>-1&&e%1==0&&e<t}},5403:(e,r,t)=>{var n=t(1469),o=t(3448),i=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,a=/^\w*$/;e.exports=function(e,r){if(n(e))return!1;var t=typeof e;return!("number"!=t&&"symbol"!=t&&"boolean"!=t&&null!=e&&!o(e))||(a.test(e)||!i.test(e)||null!=r&&e in Object(r))}},7019:e=>{e.exports=function(e){var r=typeof e;return"string"==r||"number"==r||"symbol"==r||"boolean"==r?"__proto__"!==e:null===e}},5346:(e,r,t)=>{var n,o=t(4429),i=(n=/[^.]+$/.exec(o&&o.keys&&o.keys.IE_PROTO||""))?"Symbol(src)_1."+n:"";e.exports=function(e){return!!i&&i in e}},5726:e=>{var r=Object.prototype;e.exports=function(e){var t=e&&e.constructor;return e===("function"==typeof t&&t.prototype||r)}},9162:(e,r,t)=>{var n=t(3218);e.exports=function(e){return e==e&&!n(e)}},7040:e=>{e.exports=function(){this.__data__=[],this.size=0}},4125:(e,r,t)=>{var n=t(8470),o=Array.prototype.splice;e.exports=function(e){var r=this.__data__,t=n(r,e);return!(t<0)&&(t==r.length-1?r.pop():o.call(r,t,1),--this.size,!0)}},2117:(e,r,t)=>{var n=t(8470);e.exports=function(e){var r=this.__data__,t=n(r,e);return t<0?void 0:r[t][1]}},7518:(e,r,t)=>{var n=t(8470);e.exports=function(e){return n(this.__data__,e)>-1}},4705:(e,r,t)=>{var n=t(8470);e.exports=function(e,r){var t=this.__data__,o=n(t,e);return o<0?(++this.size,t.push([e,r])):t[o][1]=r,this}},4785:(e,r,t)=>{var n=t(1989),o=t(8407),i=t(7071);e.exports=function(){this.size=0,this.__data__={hash:new n,map:new(i||o),string:new n}}},1285:(e,r,t)=>{var n=t(5050);e.exports=function(e){var r=n(this,e).delete(e);return this.size-=r?1:0,r}},6e3:(e,r,t)=>{var n=t(5050);e.exports=function(e){return n(this,e).get(e)}},9916:(e,r,t)=>{var n=t(5050);e.exports=function(e){return n(this,e).has(e)}},5265:(e,r,t)=>{var n=t(5050);e.exports=function(e,r){var t=n(this,e),o=t.size;return t.set(e,r),this.size+=t.size==o?0:1,this}},8776:e=>{e.exports=function(e){var r=-1,t=Array(e.size);return e.forEach((function(e,n){t[++r]=[n,e]})),t}},2634:e=>{e.exports=function(e,r){return function(t){return null!=t&&(t[e]===r&&(void 0!==r||e in Object(t)))}}},4523:(e,r,t)=>{var n=t(8306);e.exports=function(e){var r=n(e,(function(e){return 500===t.size&&t.clear(),e})),t=r.cache;return r}},4536:(e,r,t)=>{var n=t(852)(Object,"create");e.exports=n},6916:(e,r,t)=>{var n=t(5569)(Object.keys,Object);e.exports=n},3498:e=>{e.exports=function(e){var r=[];if(null!=e)for(var t in Object(e))r.push(t);return r}},1167:(e,r,t)=>{e=t.nmd(e);var n=t(1957),o=r&&!r.nodeType&&r,i=o&&e&&!e.nodeType&&e,a=i&&i.exports===o&&n.process,s=function(){try{var e=i&&i.require&&i.require("util").types;return e||a&&a.binding&&a.binding("util")}catch(e){}}();e.exports=s},2333:e=>{var r=Object.prototype.toString;e.exports=function(e){return r.call(e)}},5569:e=>{e.exports=function(e,r){return function(t){return e(r(t))}}},5357:(e,r,t)=>{var n=t(6874),o=Math.max;e.exports=function(e,r,t){return r=o(void 0===r?e.length-1:r,0),function(){for(var i=arguments,a=-1,s=o(i.length-r,0),c=Array(s);++a<s;)c[a]=i[r+a];a=-1;for(var u=Array(r+1);++a<r;)u[a]=i[a];return u[r]=t(c),n(e,this,u)}}},5639:(e,r,t)=>{var n=t(1957),o="object"==typeof self&&self&&self.Object===Object&&self,i=n||o||Function("return this")();e.exports=i},619:e=>{e.exports=function(e){return this.__data__.set(e,"__lodash_hash_undefined__"),this}},2385:e=>{e.exports=function(e){return this.__data__.has(e)}},1814:e=>{e.exports=function(e){var r=-1,t=Array(e.size);return e.forEach((function(e){t[++r]=e})),t}},61:(e,r,t)=>{var n=t(6560),o=t(1275)(n);e.exports=o},1275:e=>{var r=Date.now;e.exports=function(e){var t=0,n=0;return function(){var o=r(),i=16-(o-n);if(n=o,i>0){if(++t>=800)return arguments[0]}else t=0;return e.apply(void 0,arguments)}}},7465:(e,r,t)=>{var n=t(8407);e.exports=function(){this.__data__=new n,this.size=0}},3779:e=>{e.exports=function(e){var r=this.__data__,t=r.delete(e);return this.size=r.size,t}},7599:e=>{e.exports=function(e){return this.__data__.get(e)}},4758:e=>{e.exports=function(e){return this.__data__.has(e)}},4309:(e,r,t)=>{var n=t(8407),o=t(7071),i=t(3369);e.exports=function(e,r){var t=this.__data__;if(t instanceof n){var a=t.__data__;if(!o||a.length<199)return a.push([e,r]),this.size=++t.size,this;t=this.__data__=new i(a)}return t.set(e,r),this.size=t.size,this}},2351:e=>{e.exports=function(e,r,t){for(var n=t-1,o=e.length;++n<o;)if(e[n]===r)return n;return-1}},8016:(e,r,t)=>{var n=t(8983),o=t(2689),i=t(1903);e.exports=function(e){return o(e)?i(e):n(e)}},5514:(e,r,t)=>{var n=t(4523),o=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,i=/\\(\\)?/g,a=n((function(e){var r=[];return 46===e.charCodeAt(0)&&r.push(""),e.replace(o,(function(e,t,n,o){r.push(n?o.replace(i,"$1"):t||e)})),r}));e.exports=a},327:(e,r,t)=>{var n=t(3448);e.exports=function(e){if("string"==typeof e||n(e))return e;var r=e+"";return"0"==r&&1/e==-Infinity?"-0":r}},346:e=>{var r=Function.prototype.toString;e.exports=function(e){if(null!=e){try{return r.call(e)}catch(e){}try{return e+""}catch(e){}}return""}},1903:e=>{var r="[\\ud800-\\udfff]",t="[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]",n="\\ud83c[\\udffb-\\udfff]",o="[^\\ud800-\\udfff]",i="(?:\\ud83c[\\udde6-\\uddff]){2}",a="[\\ud800-\\udbff][\\udc00-\\udfff]",s="(?:"+t+"|"+n+")"+"?",c="[\\ufe0e\\ufe0f]?",u=c+s+("(?:\\u200d(?:"+[o,i,a].join("|")+")"+c+s+")*"),l="(?:"+[o+t+"?",t,i,a,r].join("|")+")",p=RegExp(n+"(?="+n+")|"+l+u,"g");e.exports=function(e){for(var r=p.lastIndex=0;p.test(e);)++r;return r}},6678:(e,r,t)=>{var n=t(5990);e.exports=function(e){return n(e,4)}},5703:e=>{e.exports=function(e){return function(){return e}}},6073:(e,r,t)=>{e.exports=t(4486)},7813:e=>{e.exports=function(e,r){return e===r||e!=e&&r!=r}},3105:(e,r,t)=>{var n=t(4963),o=t(760),i=t(7206),a=t(1469);e.exports=function(e,r){return(a(e)?n:o)(e,i(r,3))}},4486:(e,r,t)=>{var n=t(7412),o=t(9881),i=t(4290),a=t(1469);e.exports=function(e,r){return(a(e)?n:o)(e,i(r))}},7361:(e,r,t)=>{var n=t(7786);e.exports=function(e,r,t){var o=null==e?void 0:n(e,r);return void 0===o?t:o}},8721:(e,r,t)=>{var n=t(8565),o=t(222);e.exports=function(e,r){return null!=e&&o(e,r,n)}},9095:(e,r,t)=>{var n=t(13),o=t(222);e.exports=function(e,r){return null!=e&&o(e,r,n)}},6557:e=>{e.exports=function(e){return e}},5694:(e,r,t)=>{var n=t(9454),o=t(7005),i=Object.prototype,a=i.hasOwnProperty,s=i.propertyIsEnumerable,c=n(function(){return arguments}())?n:function(e){return o(e)&&a.call(e,"callee")&&!s.call(e,"callee")};e.exports=c},1469:e=>{var r=Array.isArray;e.exports=r},8612:(e,r,t)=>{var n=t(3560),o=t(1780);e.exports=function(e){return null!=e&&o(e.length)&&!n(e)}},9246:(e,r,t)=>{var n=t(8612),o=t(7005);e.exports=function(e){return o(e)&&n(e)}},4144:(e,r,t)=>{e=t.nmd(e);var n=t(5639),o=t(5062),i=r&&!r.nodeType&&r,a=i&&e&&!e.nodeType&&e,s=a&&a.exports===i?n.Buffer:void 0,c=(s?s.isBuffer:void 0)||o;e.exports=c},1609:(e,r,t)=>{var n=t(280),o=t(4160),i=t(5694),a=t(1469),s=t(8612),c=t(4144),u=t(5726),l=t(6719),p=Object.prototype.hasOwnProperty;e.exports=function(e){if(null==e)return!0;if(s(e)&&(a(e)||"string"==typeof e||"function"==typeof e.splice||c(e)||l(e)||i(e)))return!e.length;var r=o(e);if("[object Map]"==r||"[object Set]"==r)return!e.size;if(u(e))return!n(e).length;for(var t in e)if(p.call(e,t))return!1;return!0}},3560:(e,r,t)=>{var n=t(4239),o=t(3218);e.exports=function(e){if(!o(e))return!1;var r=n(e);return"[object Function]"==r||"[object GeneratorFunction]"==r||"[object AsyncFunction]"==r||"[object Proxy]"==r}},1780:e=>{e.exports=function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=9007199254740991}},6688:(e,r,t)=>{var n=t(5588),o=t(1717),i=t(1167),a=i&&i.isMap,s=a?o(a):n;e.exports=s},3218:e=>{e.exports=function(e){var r=typeof e;return null!=e&&("object"==r||"function"==r)}},7005:e=>{e.exports=function(e){return null!=e&&"object"==typeof e}},2928:(e,r,t)=>{var n=t(9221),o=t(1717),i=t(1167),a=i&&i.isSet,s=a?o(a):n;e.exports=s},7037:(e,r,t)=>{var n=t(4239),o=t(1469),i=t(7005);e.exports=function(e){return"string"==typeof e||!o(e)&&i(e)&&"[object String]"==n(e)}},3448:(e,r,t)=>{var n=t(4239),o=t(7005);e.exports=function(e){return"symbol"==typeof e||o(e)&&"[object Symbol]"==n(e)}},6719:(e,r,t)=>{var n=t(8749),o=t(1717),i=t(1167),a=i&&i.isTypedArray,s=a?o(a):n;e.exports=s},2353:e=>{e.exports=function(e){return void 0===e}},3674:(e,r,t)=>{var n=t(4636),o=t(280),i=t(8612);e.exports=function(e){return i(e)?n(e):o(e)}},1704:(e,r,t)=>{var n=t(4636),o=t(313),i=t(8612);e.exports=function(e){return i(e)?n(e,!0):o(e)}},5161:(e,r,t)=>{var n=t(9932),o=t(7206),i=t(9199),a=t(1469);e.exports=function(e,r){return(a(e)?n:i)(e,o(r,3))}},8306:(e,r,t)=>{var n=t(3369);function o(e,r){if("function"!=typeof e||null!=r&&"function"!=typeof r)throw new TypeError("Expected a function");var t=function(){var n=arguments,o=r?r.apply(this,n):n[0],i=t.cache;if(i.has(o))return i.get(o);var a=e.apply(this,n);return t.cache=i.set(o,a)||i,a};return t.cache=new(o.Cache||n),t}o.Cache=n,e.exports=o},308:e=>{e.exports=function(){}},9601:(e,r,t)=>{var n=t(371),o=t(9152),i=t(5403),a=t(327);e.exports=function(e){return i(e)?n(a(e)):o(e)}},4061:(e,r,t)=>{var n=t(2663),o=t(9881),i=t(7206),a=t(107),s=t(1469);e.exports=function(e,r,t){var c=s(e)?n:a,u=arguments.length<3;return c(e,i(r,4),t,u,o)}},4238:(e,r,t)=>{var n=t(280),o=t(4160),i=t(8612),a=t(7037),s=t(8016);e.exports=function(e){if(null==e)return 0;if(i(e))return a(e)?s(e):e.length;var r=o(e);return"[object Map]"==r||"[object Set]"==r?e.size:n(e).length}},479:e=>{e.exports=function(){return[]}},5062:e=>{e.exports=function(){return!1}},9833:(e,r,t)=>{var n=t(531);e.exports=function(e){return null==e?"":n(e)}},8718:(e,r,t)=>{var n=t(7412),o=t(3118),i=t(7816),a=t(7206),s=t(5924),c=t(1469),u=t(4144),l=t(3560),p=t(3218),d=t(6719);e.exports=function(e,r,t){var f=c(e),h=f||u(e)||d(e);if(r=a(r,4),null==t){var m=e&&e.constructor;t=h?f?new m:[]:p(e)&&l(m)?o(s(e)):{}}return(h?n:i)(e,(function(e,n,o){return r(t,e,n,o)})),t}},3386:(e,r,t)=>{var n=t(1078),o=t(5976),i=t(5652),a=t(9246),s=o((function(e){return i(n(e,1,a,!0))}));e.exports=s},2628:(e,r,t)=>{var n=t(7415),o=t(3674);e.exports=function(e){return null==e?[]:n(e,o(e))}},3379:e=>{"use strict";var r=[];function t(e){for(var t=-1,n=0;n<r.length;n++)if(r[n].identifier===e){t=n;break}return t}function n(e,n){for(var i={},a=[],s=0;s<e.length;s++){var c=e[s],u=n.base?c[0]+n.base:c[0],l=i[u]||0,p="".concat(u," ").concat(l);i[u]=l+1;var d=t(p),f={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==d)r[d].references++,r[d].updater(f);else{var h=o(f,n);n.byIndex=s,r.splice(s,0,{identifier:p,updater:h,references:1})}a.push(p)}return a}function o(e,r){var t=r.domAPI(r);t.update(e);return function(r){if(r){if(r.css===e.css&&r.media===e.media&&r.sourceMap===e.sourceMap&&r.supports===e.supports&&r.layer===e.layer)return;t.update(e=r)}else t.remove()}}e.exports=function(e,o){var i=n(e=e||[],o=o||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var s=t(i[a]);r[s].references--}for(var c=n(e,o),u=0;u<i.length;u++){var l=t(i[u]);0===r[l].references&&(r[l].updater(),r.splice(l,1))}i=c}}},569:e=>{"use strict";var r={};e.exports=function(e,t){var n=function(e){if(void 0===r[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}r[e]=t}return r[e]}(e);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");n.appendChild(t)}},9216:e=>{"use strict";e.exports=function(e){var r=document.createElement("style");return e.setAttributes(r,e.attributes),e.insert(r,e.options),r}},3565:(e,r,t)=>{"use strict";e.exports=function(e){var r=t.nc;r&&e.setAttribute("nonce",r)}},7795:e=>{"use strict";e.exports=function(e){var r=e.insertStyleElement(e);return{update:function(t){!function(e,r,t){var n="";t.supports&&(n+="@supports (".concat(t.supports,") {")),t.media&&(n+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(n+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),n+=t.css,o&&(n+="}"),t.media&&(n+="}"),t.supports&&(n+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(n+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),r.styleTagTransform(n,e,r.options)}(r,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(r)}}}},4589:e=>{"use strict";e.exports=function(e,r){if(r.styleSheet)r.styleSheet.cssText=e;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(e))}}},8156:r=>{"use strict";r.exports=e}},t={};function n(e){var o=t[e];if(void 0!==o)return o.exports;var i=t[e]={id:e,loaded:!1,exports:{}};return r[e].call(i.exports,i,i.exports,n),i.loaded=!0,i.exports}n.n=e=>{var r=e&&e.__esModule?()=>e.default:()=>e;return n.d(r,{a:r}),r},n.d=(e,r)=>{for(var t in r)n.o(r,t)&&!n.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:r[t]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r),n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),n.nc=void 0;var o={};return(()=>{"use strict";n.d(o,{default:()=>d});var e=n(8156),r=n.n(e),t=n(8762);function i(e){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},i(e)}function a(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}function s(e,r){for(var t=0;t<r.length;t++){var n=r[t];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function c(e,r){return c=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,r){return e.__proto__=r,e},c(e,r)}function u(e){var r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var t,n=p(e);if(r){var o=p(this).constructor;t=Reflect.construct(n,arguments,o)}else t=n.apply(this,arguments);return l(this,t)}}function l(e,r){if(r&&("object"===i(r)||"function"==typeof r))return r;if(void 0!==r)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function p(e){return p=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},p(e)}const d=function(e){!function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(r&&r.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),r&&c(e,r)}(p,e);var n,o,i,l=u(p);function p(){return a(this,p),l.apply(this,arguments)}return n=p,(o=[{key:"componentDidMount",value:function(){if(this.props.onInit){var e=new t.default(this.props.options);this.props.onInit(e)}}},{key:"render",value:function(){return r().createElement("div",{id:this.props.options?this.props.options.wrapperId:"terminal___emulator___wrapper"})}}])&&s(n.prototype,o),i&&s(n,i),Object.defineProperty(n,"prototype",{writable:!1}),p}(r().Component)})(),o=o.default})()));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,